(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    251205,       5122]
NotebookOptionsPosition[    233499,       4833]
NotebookOutlinePosition[    234009,       4851]
CellTagsIndexPosition[    233966,       4848]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Homework 28", "Title",
 CellChangeTimes->{{3.449347651734375*^9, 
  3.44934765521875*^9}},ExpressionUUID->"600cdb65-4fe5-41e7-a8ff-\
5e00cd54cd22"],

Cell[CellGroupData[{

Cell["Problem 28.1", "Section",
 CellChangeTimes->{{3.449347677390625*^9, 
  3.449347680765625*^9}},ExpressionUUID->"bdade399-bb26-45e4-b48c-\
7127ff81bdf6"],

Cell[TextData[{
 "A lamina is in the shape of an equilateral triangle. It has a mass of m = \
325 g and is 25.0 cm on a side. (Being a lamina, the thickness is \
unimportant.) The density of the lamina is uniform. Find the moments and \
products of inertia for each of the following cases.\n(A) The lamina is in \
the x - y plane with one one side of the triangle on the y axis and the \
opposite vertex of the triangle is on the + x axis.\n(B) The lamina is in the \
x - y plane with one vertex at the origin and the center of one side on the + \
x axis.\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
Fsn8PhLJ/jLmfWi6BbG59hms+kjlGlnyV6OVJvYbxzsozxu8vANU/dmixwL2
z5I9tPNOHaPi25VnXbF2rEHbYI4OqRMY6mmXIr1sS60lxn0QrPlGyVnZG0l8
Rv9MU59Fh/THbWnNJpKzDF0Na11jrEUC/o6gh+A3h/gk1xncLDboPYyl0FLw
ycJcAX9zzH34G2r7fGqo6eNNXax01e8a9jLgM409mXxdH586eWWa2gNzxuC6
aqlirMuO7d4xd9KzNDpRdgzEc5F7X1Yv2Or3kmO+ppb52HOs0Vdpk3BK+H+v
sVdSqVYVmXpwToQ1BXQN4uRctYxmtd0SG1oK+8/I98PY85p6hpNwPlWYM9Mf
uGrOxW25rbjlZC+vwvwZ66Z03sPnggZyeBzdgj7AvqBubsQ+nm5+SmqzuvVE
Zj4K8rRbfx6W2qsOjVTwVTDlW2XnSvv5ofnaZdD1p2E/Wp+cmbTNes1q7IV0
Pa5OU8N6C3ME9gnxd4W1VxPa6S3dve9q4pGr+Jol3tKFcWEFeT5Z3eGf4xg8
vi1lY+V0KP+XwufO9jd/HuUbc5fMieXj1NSenJdOgrYtU1fWKyfMI25xisCc
hbMh3+8s5oB3Oukp2QyE6G02e0vPprDPCP2EualN7ZTvD/rirqGQ8UhtC38f
VtOY3z+TvZ6nTrpornlo1gPwAfevAWKvEW98HrF+K7fGiC7mc36s+QHKPyHx
TXDFKVbXSLq5u4XYeN360dZwJjCL8Xb4u5nkWLhpacjVQuwhxiyc0UHDV5kT
Brr76HRClTwX69kEcmh6/VOpfklieG0e1OVats6RifRcyOajg5jp/FjmF3MX
rVbNlwzSSYiJKOHf4Kp7h99Ng+f2kwbiYvF9C50DJj3eDn+/k97HaQNxul3P
H7PQkMt1USQxfKgZZ62PV4Jd+XtuEQ/8G/v5R3d1E2StCl3snPQa98v91Y33
Hl6wd8weDOMxa1mS/B23XwTm4rLzUFmNpMsZstUoQrwM1goqDsTqGWt7Jj5A
s+avGVKbsQLwcA/5ft4Us1m3B7HRdY5ziM9DLMKySMa7RZH8LkaWdla9ztWW
Le293GsvZ36G/aqbqrnqmbfZ0rMm7F9jTvBd+wx016tdH/nE/sr6DP0z2J9K
8m/MmqpS86gJIL1qrHs+0RVTvqlbu1Svje6vk+S8HOwV4fJcSnRidLatGu8d
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
6AMPfPDtj2z7M+wVIu7iJ3c9vfYv9x5Y+9V4jYB1wlfnMd9EX5wkT6caMWkk
7GlBS+b1zrLjenhGpu/afWE//9edW2FPbtbP0DcD+B21VQcIf0f4O8R5SS3r
tGkkqdXgtzb+6w9v/arIrLuwzkcsmE6HpOclvjFlZdp3PbrDqB1w7qOLFUGD
pspfC7HZts+OczNoQlt/8Dx+YufTzueI/VhfjfSJbY8ZY+3Sa5XRoXh2tuva
NdJzax/b+uj6tfA7/j/2PVvYd46f2dcvPj33S5f3zP33P7Jz57fJmk8HDg9D
ddOE6yNg0kj4N8S46sa8geV6GCdNcRZoiJEy7ffg3/Mx7GhXLe9pC+xt6uKs
62h41jhvQnwB1hfURG4KuWmffWL3cv57DO+y3Pvw94l4hIFIzikRtzfSNHgy
LKqG3zvm47SORWv1chFzjT2z0Ba/b/UBIX5P9dfaHnvgwT+af2jLX+F9+XgD
1Fnf99CWP9/ywANf0b0X93jywQe/fmDLlm/o+tHWc6qzYe43zR+f3z33W4+J
B/9jkZyFNF1foC1MGgk5JEMxrpF84s9dcwC+u/lnd0TzOtx3UPZDkdZZEPr5
u2rL6qGB6H4tsCmQ9Wo86hsgzhivVW/D/y6IZB3y+n/42BM/CU8D3ft+e//B
rz+3ZcvPimTvGr8ffOcxL1TWyTqvJZ1W0v37D+948q7IzFE7Hnjwy7/2zLN/
7rreTz7x9D3hmCtf37b9Q+gp23XOPLn3T1zXSduR7TutOUPYn8NZU+jzq6KR
8L4jO3auXwvzuE+MoXrvN/7Zrr3/k0ji3PF3ZF3L5vURanB5/Gm3jU0jYQ2Z
/3t/2XE9aImzmuul7YbhGrp6rK6YvjbB73okqtdCxf4q4hFwPkQ9VI5FkXuu
i08/839pxv6zdd0wqYvdPydrA/X663+TyFnE+X/ek+7/3Pfsvz36+OP4/S6g
7RFbo1/YPfdf/sa+g39s8rHzHYf82nhMsQ18HlP9A3Uta70HWV/bVmspnoPf
3/vs4scf2fHNIvnuD0QS5zYUSdws1t34neIMAXMt9kQwh9S91nI213NFXHvm
9RjPoZux5sff2gkx7v9XtmFvapRpJzP///GA67yTed85UYwDvqSe9x8bnsdv
iGSMGqk++YIxzTYHYFxP49gRe62bf04E3I9MBhhv8HdWpX4D5lfET4wE9VAl
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
2L1JR+3jeekizGVl5+FNDtZBOP+B7xDOXHHujrg0nV93aMNeGeMTCZlcdL5Y
K213QtUYMnuwxfNl6J6ddo3tWL+H7XtGt1RNCE08XXQLZ19mnePWSK7530Mj
aWvHq/VFJY0k4xJ9a9P3+pf8fmMbKA+NSdJH0DBYHyA2Df3AXInYCOS5Q//Y
8npsbRpyqsjmYyTU3+CzWx7Wfm/L7GvkuVul3gJ8EUzeaTgTgu9dr38q8Czp
qo8vjc9ZEsZR5OtUfUZtknrS+cYpJvNX9FrX/e4A5Brr/EbraojZYQ06QiYb
rPfy391OchGwH2erdxqP1e+FeoD7+C/kNZLKL/Lyf1Xxbqf0sXnRShInZoqX
c2gka80ot0ayxeqpeq6VNBKwnf3ltE2+To/9ujJXu/C82o79R9wE9IvJ86dq
w/zL2DbSBet5cE8/+JD2O1vVr1mNo856opUaYu0SX4eAOm1+temA+ywpWt0M
uTgqJ+xISP6WjwfgFOMTGxfaEKeDmnOzqDcJ2Yxg3Zr/Hr9jfUeDqJgMg4d2
2NwG9Otst0YC8FPw35uMVnSvxXWRq1RWI9n90JMG/2zb87ScYV2sQyNhf9Ev
d8u/pmKSK5x7lh45BDWCz1/2TMjVrook7nxW1x6ke4Yi8zfZhD4CPnVFM+NO
kPdCZoy9rmKjvc+S5L6W53jiOkvK18mbJDZq2rq9ujO/h6vZ2ugzCMZln7px
rgaNhTykd+OG58lYOkI2F4gTyn+vh112CGDNbfJXCPURgletr0Yq1C6UfnB+
vg2Wtqz270ppJFlr1dkH8zVMNXPV2deFOjRSklPt9n/y3WvV1eJtec6G5qxL
DyFWHXlIOKtdaPEzEGICueTrf6O/M/dccd+lBo9+nzjhzPhwR2kcs6+pefyT
3qIYK0NqgEP3+J6RqHoQRg2HfJ6qz6su1J7ciUBddAOacYbPjLKMhP7856ZI
YqoRM35WvQ7aeCiSnFPs3TKflJDpYCL1EVD5O8a5DvkvPmO5qt3jWTs1upi/
ptQnIfOM4bqVNFKsDdx7oxaNZKjxWqdGSnSYKx87WvXxJNSdIbZcfwR5BTrf
kmy7Jzbmy9R7G3X2MF++oa7BuhJkEhmIzN/ytX0Hi+v9mr5vwfWlY82i8jqD
z5PgLafGoVHA2f8S9ITPZ5HnMfPRu4bx8kwdz6sKaT3u0Frh1EVaME8NRBJn
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
AAAAAAAAAAAAAACsnf8H4aD0mQ==
     "], {{0, 494}, {840, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{307., Automatic},
   ImageSizeRaw->{840, 494},
   PlotRange->{{0, 840}, {0, 494}}]], "Text",ExpressionUUID->
  "3964ab0d-49ae-4f39-8c49-fe644102e531"],
 "\[AliasDelimiter]\nLet: \nm be the mass of the lamina in kg.\nA be the area \
of the lamina in m^2.\nsigma be the density of the lamina in kg/m^2.\nL be \
the length of each side."
}], "Text",
 CellChangeTimes->{{3.449347728328125*^9, 3.449347762671875*^9}, {
   3.766336505732033*^9, 3.766336506612548*^9}, 3.799781238391968*^9, 
   3.7997812837189903`*^9, {3.799781425934762*^9, 3.7997814312557764`*^9}, {
   3.7997816265422525`*^9, 3.799781641665769*^9}, {3.799781672614574*^9, 
   3.7997816832543545`*^9}, {3.799785141076442*^9, 3.7997851412654777`*^9}, {
   3.7997851798296075`*^9, 3.7997851800496035`*^9}, 
   3.845054867081234*^9},ExpressionUUID->"355e43ff-da98-4322-bc57-\
75a4523b7d90"],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.449347770234375*^9, 3.449347772375*^9}, 
   3.639326918037627*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"38c0c658-dbaa-4e63-8e6a-20b2787924b4"],

Cell["First calculate a few constants:", "Text",
 CellChangeTimes->{{3.4493477868125*^9, 
  3.449347796234375*^9}},ExpressionUUID->"5a0b381d-a12c-453d-a0e2-\
7483932a1fe8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", ".325"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"L", "=", 
   RowBox[{"1", "/", "4"}]}], ";"}], "\n", 
 RowBox[{"A", "=", 
  RowBox[{"L", "*", 
   RowBox[{"Sin", "[", 
    RowBox[{"60", "*", 
     RowBox[{"Pi", "/", "180"}]}], "]"}], "*", 
   RowBox[{"L", "/", "2"}]}]}], "\n", 
 RowBox[{"sigma", "=", 
  RowBox[{"m", "/", "A"}]}]}], "Input",
 CellChangeTimes->{{3.449347812234375*^9, 3.4493478631875*^9}, {
  3.4523674443411894`*^9, 3.452367450387987*^9}, {3.7997696907988887`*^9, 
  3.7997697065646887`*^9}, {3.799769788489602*^9, 3.7997697913334303`*^9}, {
  3.79978519962667*^9, 3.799785206098694*^9}, {3.8450528330717826`*^9, 
  3.8450529687995195`*^9}, {3.845054140002392*^9, 3.845054141065892*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"f5f116d3-67c0-4071-8465-eb63964aecc8"],

Cell[BoxData[
 FractionBox[
  SqrtBox["3"], "64"]], "Output",
 CellChangeTimes->{{3.8450528838763003`*^9, 3.845052891482495*^9}, {
   3.8450529375529137`*^9, 3.8450529692974977`*^9}, 3.8450541426913853`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"5733af2f-b417-4420-9e16-8bda965e6491"],

Cell[BoxData["12.008885599144218`"], "Output",
 CellChangeTimes->{{3.8450528838763003`*^9, 3.845052891482495*^9}, {
   3.8450529375529137`*^9, 3.8450529692974977`*^9}, 3.845054142715513*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"f21ffce3-2cbe-4d93-82f8-641d4983a990"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solutions", "Subsection",
 CellChangeTimes->{{3.4493479038125*^9, 
  3.44934790515625*^9}},ExpressionUUID->"cbf42810-45d8-4901-b8d5-\
ddb840b08bd5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A$", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"L", "^", "2"}], "*", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"Pi", "/", "3"}], "]"}], "/", "2"}]}], "//", "N"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"sigma$", "=", 
   RowBox[{"m", "/", "A$"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"A", "-", "A$"}], ")"}], "/", "A$"}], "]"}], "<", "0.01"}], 
   ",", 
   RowBox[{"Print", "[", "\"\<A is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<A is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"sigma", "-", "sigma$"}], ")"}], "/", "sigma$"}], "]"}], "<", 
    "0.01"}], ",", 
   RowBox[{"Print", "[", "\"\<sigma is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<sigma is incorrect.\>\"", "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.449347919515625*^9, 3.44934808584375*^9}, {
   3.449393182984375*^9, 3.44939321309375*^9}, {3.452367417997777*^9, 
   3.4523674217789783`*^9}, 3.6246468468184357`*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"8df73cbe-e2eb-4114-b416-c1f0772f4222"],

Cell[CellGroupData[{

Cell[BoxData["\<\"A is correct.\"\>"], "Print",
 CellChangeTimes->{
  3.845052894819477*^9, {3.845052959948534*^9, 3.845052971256517*^9}},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"322cb54b-7952-4b92-913c-9e0300940c3a"],

Cell[BoxData["\<\"sigma is correct.\"\>"], "Print",
 CellChangeTimes->{
  3.845052894819477*^9, {3.845052959948534*^9, 3.8450529712745733`*^9}},
 CellLabel->
  "During evaluation of \
In[29]:=",ExpressionUUID->"010cd524-f760-4b1d-86c7-a74b708d3cd6"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part A", "Section",
 CellChangeTimes->{{3.4493481108125*^9, 
  3.449348112484375*^9}},ExpressionUUID->"6a184058-c037-4dc7-9842-\
e59baad49d36"],

Cell["\<\
For each part, calculate all the integrals, then construct the moments and \
axes of inertia.

To be sure you're setting up your integral correctly, see if you can get the \
correct mass by integrating the density.
\
\>", "Text",
 CellChangeTimes->{
  3.44934813678125*^9},ExpressionUUID->"57a6bd36-726d-4fa6-a64a-8d93f0c087f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MassCheck", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{"sigma", ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", " ", 
        RowBox[{
         RowBox[{"x", "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            RowBox[{"Sin", "[", 
             RowBox[{"Pi", "/", "3"}], "]"}]}], ")"}]}], "-", 
         RowBox[{"L", "/", "2"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "x"}], " ", "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            RowBox[{"Sin", "[", 
             RowBox[{"Pi", "/", "3"}], "]"}]}], ")"}]}], "+", 
         RowBox[{"L", "/", "2"}]}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", 
      RowBox[{"L", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"Pi", "/", "3"}], "]"}]}]}], " ", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4493929560625*^9, 3.449393059296875*^9}, {
  3.449393093671875*^9, 3.449393105265625*^9}, {3.4493932583125*^9, 
  3.449393334578125*^9}, {3.449393370421875*^9, 3.449393427390625*^9}, {
  3.7997818572865887`*^9, 3.799781904007661*^9}, {3.799785234106249*^9, 
  3.7997852542104435`*^9}, {3.8450537375435824`*^9, 3.8450537388278933`*^9}, {
  3.8450537694136105`*^9, 3.8450539340199594`*^9}, {3.8450542027111397`*^9, 
  3.8450542228247957`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"3ebdfdbc-bf9e-486c-a70f-cec4b685e883"],

Cell[BoxData["0.32500000000000007`"], "Output",
 CellChangeTimes->{{3.8450539292243156`*^9, 3.845053934666334*^9}, 
   3.8450541449325223`*^9, 3.8450542237179003`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"2e33f978-5fdd-49e8-ac85-530104a4e0d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hint", "Subsection",
 CellChangeTimes->{{3.44939344828125*^9, 
  3.449393449015625*^9}},ExpressionUUID->"96ffb82b-6d68-4458-96a3-\
308df2cc9a0d"],

Cell["\<\
Find the equation for the lines that bound the triangle, and put these in the \
integral expressions. \
\>", "Text",
 CellChangeTimes->{{3.44939347309375*^9, 
  3.449393475125*^9}},ExpressionUUID->"7e3b9513-c239-443e-afcc-0ad8c5e50f69"],

Cell[CellGroupData[{

Cell["Want to see the solution?", "Subsubsection",
 CellChangeTimes->{{3.449393482140625*^9, 
  3.449393496015625*^9}},ExpressionUUID->"a41bfbb5-b712-4558-8004-\
8fefd765aaf1"],

Cell[BoxData[
 RowBox[{"MassCheck", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{"sigma", ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{
         RowBox[{"x", "/", 
          RowBox[{"Sqrt", "[", "3", "]"}]}], "-", 
         RowBox[{"L", "/", "2"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "x"}], "/", 
          RowBox[{"Sqrt", "[", "3", "]"}]}], "+", 
         RowBox[{"L", "/", "2"}]}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"L", " ", 
       RowBox[{
        RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.799781932511865*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"333ccf6f-6c2c-490b-b2fe-241665efbce2"],

Cell["If you have that integral right, the others are easy:", "Text",ExpressionUUID->"67d57d9f-eb79-40df-bbea-b0cf6ba8e3b6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[" ", "Subsection",
 CellChangeTimes->{
  3.4493935658125*^9},ExpressionUUID->"a3961c73-55bd-4ca0-9802-97314ce400c8"],

Cell["Enter the values of the J integrals:", "Text",
 CellChangeTimes->{{3.449393586078125*^9, 
  3.44939359834375*^9}},ExpressionUUID->"4eef6734-2ed2-4527-bf19-\
dfcd0ff032e6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Jxx", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"sigma", " ", "*", "x", "*", "x"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", " ", 
        RowBox[{
         RowBox[{"x", "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            RowBox[{"Sin", "[", 
             RowBox[{"Pi", "/", "3"}], "]"}]}], ")"}]}], "-", 
         RowBox[{"L", "/", "2"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "x"}], " ", "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            RowBox[{"Sin", "[", 
             RowBox[{"Pi", "/", "3"}], "]"}]}], ")"}]}], "+", 
         RowBox[{"L", "/", "2"}]}]}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", 
      RowBox[{"L", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"Pi", "/", "3"}], "]"}]}]}], " ", "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Jyy", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"sigma", " ", "*", "y", "*", "y"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", " ", 
        RowBox[{
         RowBox[{"x", "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            RowBox[{"Sin", "[", 
             RowBox[{"Pi", "/", "3"}], "]"}]}], ")"}]}], "-", 
         RowBox[{"L", "/", "2"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "x"}], " ", "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            RowBox[{"Sin", "[", 
             RowBox[{"Pi", "/", "3"}], "]"}]}], ")"}]}], "+", 
         RowBox[{"L", "/", "2"}]}]}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", 
      RowBox[{"L", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"Pi", "/", "3"}], "]"}]}]}], " ", "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Jzz", "=", "0"}], "\n", 
 RowBox[{"Jxy", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"sigma", " ", "*", "x", "*", "y"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", " ", 
        RowBox[{
         RowBox[{"x", "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            RowBox[{"Sin", "[", 
             RowBox[{"Pi", "/", "3"}], "]"}]}], ")"}]}], "-", 
         RowBox[{"L", "/", "2"}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "x"}], " ", "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            RowBox[{"Sin", "[", 
             RowBox[{"Pi", "/", "3"}], "]"}]}], ")"}]}], "+", 
         RowBox[{"L", "/", "2"}]}]}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", 
      RowBox[{"L", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"Pi", "/", "3"}], "]"}]}]}], " ", "}"}]}], "]"}]}], "\n", 
 RowBox[{"Jyz", "=", "0"}], "\n", 
 RowBox[{"Jzx", "=", "0"}], "\n"}], "Input",
 CellChangeTimes->{{3.449393622671875*^9, 3.4493937394375*^9}, {
  3.449393771328125*^9, 3.449393784828125*^9}, {3.4523675070747614`*^9, 
  3.452367529090105*^9}, {3.7997698420662923`*^9, 3.7997699284150047`*^9}, {
  3.7997700514372983`*^9, 3.799770078406034*^9}, {3.7997701327808523`*^9, 
  3.7997701376558437`*^9}, {3.799770168432207*^9, 3.7997701873228383`*^9}, {
  3.799781968138714*^9, 3.79978203211091*^9}, {3.799785268472474*^9, 
  3.799785279763748*^9}, {3.8450544567879744`*^9, 3.8450545735448723`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"ff334525-f53b-4b5f-b98a-ff119bdb88b4"],

Cell[BoxData["0.0025390624999999997`"], "Output",
 CellChangeTimes->{3.845054506430868*^9, 3.845054573973866*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"12756ad5-a52e-4e26-978e-0cd8c6f17777"],

Cell[BoxData["0.0008463541666666658`"], "Output",
 CellChangeTimes->{3.845054506430868*^9, 3.845054573989812*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"3abf1060-f89a-4b6d-b46a-af3924ec20d4"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.845054506430868*^9, 3.845054573989812*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"d0836804-981a-4469-b10d-baec6108c22a"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.845054506430868*^9, 3.8450545740015507`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"e9589830-d9c6-4a0c-85d0-1413cfb5b73b"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.845054506430868*^9, 3.845054574007911*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"71971e5c-2e7f-4d55-af5f-2e356b59f78d"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.845054506430868*^9, 3.8450545740139723`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"95a5f800-cad1-48f6-b71a-10dd2843d950"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solutions", "Subsection",
 CellChangeTimes->{{3.449393878*^9, 
  3.4493938795*^9}},ExpressionUUID->"45469e2e-95b0-41ab-8d98-cb5f487987a9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Jxx$", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"sigma", "*", 
        RowBox[{"x", "^", "2"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{
          RowBox[{"x", "/", 
           RowBox[{"Sqrt", "[", "3", "]"}]}], "-", 
          RowBox[{"L", "/", "2"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "x"}], "/", 
           RowBox[{"Sqrt", "[", "3", "]"}]}], "+", 
          RowBox[{"L", "/", "2"}]}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"L", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"Pi", "/", "3"}], "]"}]}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Jyy$", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"sigma", "*", 
        RowBox[{"y", "^", "2"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{
          RowBox[{"x", "/", 
           RowBox[{"Sqrt", "[", "3", "]"}]}], "-", 
          RowBox[{"L", "/", "2"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "x"}], "/", 
           RowBox[{"Sqrt", "[", "3", "]"}]}], "+", 
          RowBox[{"L", "/", "2"}]}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"L", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"Pi", "/", "3"}], "]"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Jxx", "-", "Jxx$"}], ")"}], "/", "Jxx$"}], "]"}], "<", 
    "0.01"}], ",", 
   RowBox[{"Print", "[", "\"\<Jxx is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Jxx is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Jyy", "-", "Jyy$"}], ")"}], "/", "Jyy$"}], "]"}], "<", 
    "0.01"}], ",", 
   RowBox[{"Print", "[", "\"\<Jyy is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Jyy is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", "Jzz", "]"}], "<", "0.0001"}], ",", 
   RowBox[{"Print", "[", "\"\<Jzz is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Jzz is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", "Jxy", "]"}], "<", "0.0001"}], ",", 
   RowBox[{"Print", "[", "\"\<Jxy is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Jxy is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", "Jyz", "]"}], "<", "0.0001"}], ",", 
   RowBox[{"Print", "[", "\"\<Jyz is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Jyz is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", "Jzx", "]"}], "<", "0.0001"}], ",", 
   RowBox[{"Print", "[", "\"\<Jzx is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Jzx is incorrect.\>\"", "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.449393906984375*^9, 3.449394103703125*^9}, {
  3.449394138265625*^9, 3.449394315375*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"5b26feed-c12a-496e-a658-7c1fea05b17c"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Jxx is correct.\"\>"], "Print",
 CellChangeTimes->{3.845054595733723*^9},
 CellLabel->
  "During evaluation of \
In[53]:=",ExpressionUUID->"3ddae700-ffb0-432c-a808-62a50d2d12b0"],

Cell[BoxData["\<\"Jyy is correct.\"\>"], "Print",
 CellChangeTimes->{3.8450545957456436`*^9},
 CellLabel->
  "During evaluation of \
In[53]:=",ExpressionUUID->"28c3b874-bf2a-41e7-aff4-0344274ab760"],

Cell[BoxData["\<\"Jzz is correct.\"\>"], "Print",
 CellChangeTimes->{3.8450545957572765`*^9},
 CellLabel->
  "During evaluation of \
In[53]:=",ExpressionUUID->"bbf022aa-2232-40e4-8912-7d44a9bfbba5"],

Cell[BoxData["\<\"Jxy is correct.\"\>"], "Print",
 CellChangeTimes->{3.845054595760595*^9},
 CellLabel->
  "During evaluation of \
In[53]:=",ExpressionUUID->"9051f721-e43b-4807-82d2-0d88dacb3c1d"],

Cell[BoxData["\<\"Jyz is correct.\"\>"], "Print",
 CellChangeTimes->{3.8450545957662735`*^9},
 CellLabel->
  "During evaluation of \
In[53]:=",ExpressionUUID->"691581d6-35a0-4bde-b8fb-95f2a297df8e"],

Cell[BoxData["\<\"Jzx is correct.\"\>"], "Print",
 CellChangeTimes->{3.8450545957672706`*^9},
 CellLabel->
  "During evaluation of \
In[53]:=",ExpressionUUID->"7d2e484e-4735-4448-9914-9c397700bb31"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[" ", "Subsection",
 CellChangeTimes->{
  3.449394360625*^9},ExpressionUUID->"bd450b2b-17d6-41fd-994e-8bf8e41b42e5"],

Cell["Now find the moments and products of inertia :", "Text",ExpressionUUID->"a4881bdd-2286-4982-9231-1b9400244d64"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Ixx", "=", 
  RowBox[{"Jyy", " ", "+", " ", "Jzz"}]}], "\n", 
 RowBox[{"Iyy", "=", 
  RowBox[{"Jxx", " ", "+", " ", "Jzz"}]}], "\n", 
 RowBox[{"Izz", "=", 
  RowBox[{"Jxx", " ", "+", " ", "Jyy"}]}], "\n", 
 RowBox[{"Ixy", "=", 
  RowBox[{"-", "Jxy"}]}], "\n", 
 RowBox[{"Iyz", "=", 
  RowBox[{"-", "Jyz"}]}], "\n", 
 RowBox[{"Izx", "=", 
  RowBox[{"-", "Jzx"}]}]}], "Input",
 CellChangeTimes->{{3.4493943964375*^9, 3.44939442034375*^9}, {
  3.449394537765625*^9, 3.4493945558125*^9}, {3.452367546511757*^9, 
  3.452367554621028*^9}, {3.7997821510260067`*^9, 3.7997822135988874`*^9}, {
  3.7997852876268034`*^9, 3.799785297844859*^9}, {3.8450547581896505`*^9, 
  3.8450548029155245`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"621ed09d-3fea-4dba-aa51-2f02b083797d"],

Cell[BoxData["0.0008463541666666658`"], "Output",
 CellChangeTimes->{3.845054803487074*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"3a62e3d0-05e8-4712-b71d-188547d44192"],

Cell[BoxData["0.0025390624999999997`"], "Output",
 CellChangeTimes->{3.845054803502861*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"ec4226cd-b761-4c62-9f53-4b7cfb84ffc6"],

Cell[BoxData["0.0033854166666666655`"], "Output",
 CellChangeTimes->{3.845054803502861*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"8b8bb615-cd3f-46d1-873f-b5b6a3cc1935"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.8450548035144963`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"6c3b987b-4375-4371-8a43-1bdc9563c117"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.845054803521826*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"511ee426-808f-4abf-904c-0e412a0ba11c"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.845054803528407*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"a3ffea71-b089-45cc-acfb-6fedea775148"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solutions", "Subsection",
 CellChangeTimes->{{3.44939443534375*^9, 
  3.449394436890625*^9}},ExpressionUUID->"03113ca1-a955-410c-b3b8-\
badb01ef52cd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ixx$", "=", "Jyy$"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Iyy$", "=", "Jxx$"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Izz$", "=", 
   RowBox[{"Jxx$", "+", "Jyy$"}]}], ";"}], "\n", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Ixx", "-", "Ixx$"}], ")"}], "/", "Ixx$"}], "]"}], "<", 
    "0.01"}], ",", 
   RowBox[{"Print", "[", "\"\<Ixx is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Ixx is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Iyy", "-", "Iyy$"}], ")"}], "/", "Iyy$"}], "]"}], "<", 
    "0.01"}], ",", 
   RowBox[{"Print", "[", "\"\<Iyy is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Iyy is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Izz", "-", "Izz$"}], ")"}], "/", "Izz$"}], "]"}], "<", 
    "0.01"}], ",", 
   RowBox[{"Print", "[", "\"\<Izz is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Izz is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", "Ixy", "]"}], "<", "0.0001"}], ",", 
   RowBox[{"Print", "[", "\"\<Ixy is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Ixy is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", "Iyz", "]"}], "<", "0.0001"}], ",", 
   RowBox[{"Print", "[", "\"\<Iyz is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Iyz is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", "Izx", "]"}], "<", "0.0001"}], ",", 
   RowBox[{"Print", "[", "\"\<Izx is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Izx is incorrect.\>\"", "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.449394461859375*^9, 3.44939451334375*^9}, {
  3.4493945620625*^9, 3.449394705984375*^9}, {3.44939631471875*^9, 
  3.4493963430625*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"f7eea6ac-a9d3-4617-8c2e-b55e2d897de1"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Ixx is correct.\"\>"], "Print",
 CellChangeTimes->{3.8450548072400165`*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"562e98f4-3214-447f-a1db-dee213adbf1d"],

Cell[BoxData["\<\"Iyy is correct.\"\>"], "Print",
 CellChangeTimes->{3.8450548072537584`*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"d5e0bc5d-2062-4cf6-b97b-e668c858a9da"],

Cell[BoxData["\<\"Izz is correct.\"\>"], "Print",
 CellChangeTimes->{3.845054807263686*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"3f6a204e-017a-45d5-8a2f-2e12990e1cbc"],

Cell[BoxData["\<\"Ixy is correct.\"\>"], "Print",
 CellChangeTimes->{3.8450548072659535`*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"6ab0e6d2-d4b5-408a-9ddc-e2e54bd70f36"],

Cell[BoxData["\<\"Iyz is correct.\"\>"], "Print",
 CellChangeTimes->{3.8450548072699394`*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"d00c0249-62d2-4bc4-b078-4326900ac430"],

Cell[BoxData["\<\"Izx is correct.\"\>"], "Print",
 CellChangeTimes->{3.8450548072761383`*^9},
 CellLabel->
  "During evaluation of \
In[67]:=",ExpressionUUID->"d506bf49-554a-4712-94b2-8355756de8a3"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part B", "Section",
 CellChangeTimes->{{3.4493481108125*^9, 3.449348112484375*^9}, {
  3.449395838625*^9, 
  3.449395839921875*^9}},ExpressionUUID->"a33bace7-3f4f-42b7-9939-\
42e45b1c8ca7"],

Cell["\<\
Repeat the process for the second case.

For each part, calculate all the integrals, then construct the moments and \
axes of inertia.

To be sure you're setting up your integral correctly, see if you can get the \
correct mass by integrating the density.
\
\>", "Text",
 CellChangeTimes->{
  3.44934813678125*^9, {3.449395843296875*^9, 
   3.44939588840625*^9}},ExpressionUUID->"d8f0c5ab-5c74-40b5-ace8-\
56a9472f8068"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MassCheck", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{"sigma", ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            RowBox[{"Sin", "[", 
             RowBox[{"Pi", "/", "3"}], "]"}]}], ")"}]}], "x"}], ",", " ", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            RowBox[{"Sin", "[", 
             RowBox[{"Pi", "/", "3"}], "]"}]}], ")"}]}], "x"}]}], " ", 
       "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", " ", 
      RowBox[{"L", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"Pi", "/", "3"}], "]"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4493929560625*^9, 3.449393059296875*^9}, {
   3.449393093671875*^9, 3.449393105265625*^9}, {3.4493932583125*^9, 
   3.449393334578125*^9}, {3.449393370421875*^9, 3.449393427390625*^9}, {
   3.44939590340625*^9, 3.449395917625*^9}, {3.799782389710455*^9, 
   3.7997824086642404`*^9}, 3.799785313661866*^9, {3.845054910124287*^9, 
   3.845054980186774*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"326e3ed6-a761-4bd0-bd3d-a880ba27a0f7"],

Cell[BoxData["0.32500000000000007`"], "Output",
 CellChangeTimes->{3.845054981170992*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"f5f941f8-dbec-4fb0-b174-25542f991959"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hint", "Subsection",
 CellChangeTimes->{{3.44939344828125*^9, 
  3.449393449015625*^9}},ExpressionUUID->"381b3843-5430-4848-8125-\
33ed936060a9"],

Cell["\<\
Find the equation for the lines that bound the triangle, and put these in the \
integral expressions. \
\>", "Text",
 CellChangeTimes->{{3.44939347309375*^9, 
  3.449393475125*^9}},ExpressionUUID->"38e09e70-2b16-4827-8660-774b6b12ae46"],

Cell[CellGroupData[{

Cell["Want to see the solution?", "Subsubsection",
 CellChangeTimes->{{3.449393482140625*^9, 
  3.449393496015625*^9}},ExpressionUUID->"7002472b-ee94-4aed-9e05-\
914381553c3d"],

Cell[BoxData[
 RowBox[{"MassCheck", "=", 
  RowBox[{"sigma", "*", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{"1", ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{
          RowBox[{"-", "x"}], "/", 
          RowBox[{"Sqrt", "[", "3", "]"}]}], ",", 
         RowBox[{"x", "/", 
          RowBox[{"Sqrt", "[", "3", "]"}]}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"L", " ", 
        RowBox[{
         RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}]}]}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{3.449396055921875*^9, 
  3.799782423025013*^9},ExpressionUUID->"b2e3a1b7-4039-4728-97d4-\
f7853b11fce2"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[" ", "Subsection",
 CellChangeTimes->{
  3.4493935658125*^9},ExpressionUUID->"5983a963-3b73-4d04-95e3-9f5b968c61c9"],

Cell["Enter the values of the J integrals:", "Text",
 CellChangeTimes->{{3.449393586078125*^9, 
  3.44939359834375*^9}},ExpressionUUID->"5b9bdb75-9a4d-470b-8817-\
06a0fab17e7c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Jxx", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"sigma", "*", 
       RowBox[{"x", "^", "2"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            RowBox[{"Sin", "[", 
             RowBox[{"Pi", "/", "3"}], "]"}]}], ")"}]}], "x"}], ",", " ", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            RowBox[{"Sin", "[", 
             RowBox[{"Pi", "/", "3"}], "]"}]}], ")"}]}], "x"}]}], " ", 
       "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", " ", 
      RowBox[{"L", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"Pi", "/", "3"}], "]"}]}]}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"Jyy", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"sigma", "*", 
       RowBox[{"y", "^", "2"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            RowBox[{"Sin", "[", 
             RowBox[{"Pi", "/", "3"}], "]"}]}], ")"}]}], "x"}], ",", " ", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", 
            RowBox[{"Sin", "[", 
             RowBox[{"Pi", "/", "3"}], "]"}]}], ")"}]}], "x"}]}], " ", 
       "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "0", ",", " ", 
      RowBox[{"L", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"Pi", "/", "3"}], "]"}]}]}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"Jzz", "=", "0"}], "\n", 
 RowBox[{"Jxy", "=", "0"}], "\n", 
 RowBox[{"Jyz", "=", "0"}], "\n", 
 RowBox[{"Jzx", "=", "0"}], "\n"}], "Input",
 CellChangeTimes->{{3.449393622671875*^9, 3.4493937394375*^9}, {
   3.449393771328125*^9, 3.449393784828125*^9}, {3.44939608603125*^9, 
   3.449396121078125*^9}, {3.449396154265625*^9, 3.449396155140625*^9}, {
   3.452367598432967*^9, 3.45236760446414*^9}, {3.7997824385101495`*^9, 
   3.79978244402116*^9}, {3.79978248267624*^9, 3.799782513704573*^9}, 
   3.7997853262379503`*^9, {3.8450549943698063`*^9, 3.845055036046692*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"c22d16d0-2c99-4dbb-b70c-1370112f7cb1"],

Cell[BoxData["0.007617187500000002`"], "Output",
 CellChangeTimes->{3.845055036349975*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"43dc8a0c-603a-4fc9-ba3c-787449a866b6"],

Cell[BoxData["0.0008463541666666669`"], "Output",
 CellChangeTimes->{3.8450550363598166`*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"92bee473-3adc-4167-8970-334b64094b06"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.8450550363702354`*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"735ef3c1-c433-44d7-b8d1-586e0daa9f12"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.8450550363769383`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"f7d99dee-18b3-499b-8f7b-3143fddaa364"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.845055036384807*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"deffd4f4-d320-499d-bb80-a7cbd9aef704"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.8450550363927917`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"65443396-943d-4478-ab5d-d3a7665b77fb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solutions", "Subsection",
 CellChangeTimes->{{3.449393878*^9, 
  3.4493938795*^9}},ExpressionUUID->"932248fe-65c9-461c-8550-5428af74f32e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Jxx$", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"sigma", "*", 
        RowBox[{"x", "^", "2"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{
          RowBox[{"-", "x"}], "/", 
          RowBox[{"Sqrt", "[", "3", "]"}]}], ",", 
         RowBox[{"x", "/", 
          RowBox[{"Sqrt", "[", "3", "]"}]}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"L", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"Pi", "/", "3"}], "]"}]}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Jyy$", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"sigma", "*", 
        RowBox[{"y", "^", "2"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{
          RowBox[{"-", "x"}], "/", 
          RowBox[{"Sqrt", "[", "3", "]"}]}], ",", 
         RowBox[{"x", "/", 
          RowBox[{"Sqrt", "[", "3", "]"}]}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"L", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"Pi", "/", "3"}], "]"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Jxx", "-", "Jxx$"}], ")"}], "/", "Jxx$"}], "]"}], "<", 
    "0.01"}], ",", 
   RowBox[{"Print", "[", "\"\<Jxx is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Jxx is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Jyy", "-", "Jyy$"}], ")"}], "/", "Jyy$"}], "]"}], "<", 
    "0.01"}], ",", 
   RowBox[{"Print", "[", "\"\<Jyy is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Jyy is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", "Jzz", "]"}], "<", "0.0001"}], ",", 
   RowBox[{"Print", "[", "\"\<Jzz is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Jzz is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", "Jxy", "]"}], "<", "0.0001"}], ",", 
   RowBox[{"Print", "[", "\"\<Jxy is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Jxy is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", "Jyz", "]"}], "<", "0.0001"}], ",", 
   RowBox[{"Print", "[", "\"\<Jyz is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Jyz is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", "Jzx", "]"}], "<", "0.0001"}], ",", 
   RowBox[{"Print", "[", "\"\<Jzx is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Jzx is incorrect.\>\"", "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.449393906984375*^9, 3.449394103703125*^9}, {
   3.449394138265625*^9, 3.449394315375*^9}, {3.449396165828125*^9, 
   3.449396191359375*^9}, {3.449396392609375*^9, 3.449396409625*^9}, 
   3.449396477375*^9},
 CellLabel->"In[83]:=",ExpressionUUID->"02a163b9-9519-47cc-90f9-cfad3f4c46aa"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Jxx is correct.\"\>"], "Print",
 CellChangeTimes->{3.8450550402882595`*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"9727c3e0-49e7-4da1-b9a9-e8e7d44a0a4c"],

Cell[BoxData["\<\"Jyy is correct.\"\>"], "Print",
 CellChangeTimes->{3.8450550402951145`*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"d38769d5-92a5-4c8d-b9f1-22c3af3bdeb6"],

Cell[BoxData["\<\"Jzz is correct.\"\>"], "Print",
 CellChangeTimes->{3.8450550403135977`*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"169f113b-0dff-4a5c-b479-d74c1e98f11f"],

Cell[BoxData["\<\"Jxy is correct.\"\>"], "Print",
 CellChangeTimes->{3.8450550403171687`*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"637fc18b-6565-407e-bd98-4b600572a697"],

Cell[BoxData["\<\"Jyz is correct.\"\>"], "Print",
 CellChangeTimes->{3.845055040321189*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"1a2c5a6d-8d36-4ad5-8f68-be23b69ddf99"],

Cell[BoxData["\<\"Jzx is correct.\"\>"], "Print",
 CellChangeTimes->{3.8450550403244267`*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"9d86cf36-5e75-4357-bec8-794ad71133cc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[" ", "Subsection",
 CellChangeTimes->{
  3.449394360625*^9},ExpressionUUID->"fcec1213-6972-45ce-bab4-817491ae24a7"],

Cell["Now find the moments and products of inertia :", "Text",ExpressionUUID->"8680dcd3-b5b0-454e-a346-a6bfa0c79c72"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Ixx", "=", 
  RowBox[{"Jyy", " ", "+", " ", "Jzz"}]}], "\n", 
 RowBox[{"Iyy", "=", 
  RowBox[{"Jxx", " ", "+", " ", "Jzz"}]}], "\n", 
 RowBox[{"Izz", "=", 
  RowBox[{"Jxx", " ", "+", " ", "Jyy"}]}], "\n", 
 RowBox[{"Ixy", "=", 
  RowBox[{"-", "Jxy"}]}], "\n", 
 RowBox[{"Iyz", "=", 
  RowBox[{"-", "Jyz"}]}], "\n", 
 RowBox[{"Izx", "=", 
  RowBox[{"-", "Jzx"}]}]}], "Input",
 CellChangeTimes->{{3.4493943964375*^9, 3.44939442034375*^9}, {
   3.449394537765625*^9, 3.4493945558125*^9}, {3.452367620151439*^9, 
   3.452367624917003*^9}, 3.799782536439809*^9, 3.799785336420956*^9, 
   3.84505506022919*^9},
 CellLabel->"In[91]:=",ExpressionUUID->"5e11cf74-9a3a-44a0-893c-26a3dd775a27"],

Cell[BoxData["0.0008463541666666669`"], "Output",
 CellChangeTimes->{3.845055061091384*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"025f8feb-1a5a-4a2c-abd3-02c632b273f0"],

Cell[BoxData["0.007617187500000002`"], "Output",
 CellChangeTimes->{3.8450550611056757`*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"5afee3ea-9d33-408d-aaab-7d6207e9aec4"],

Cell[BoxData["0.00846354166666667`"], "Output",
 CellChangeTimes->{3.845055061111868*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"b239d461-13f8-4177-b2e3-3cee87955eed"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.8450550611148915`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"3d16df90-3b6d-472e-8137-486ef5032bb3"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.8450550611178083`*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"26439ea1-00d5-411d-a3af-ced124271598"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.8450550611222725`*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"f56e949f-d418-4eda-b21d-3bf7cfa6664a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solutions", "Subsection",
 CellChangeTimes->{{3.44939443534375*^9, 
  3.449394436890625*^9}},ExpressionUUID->"778775f4-529f-46cf-a588-\
98dde876dbda"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ixx$", "=", "Jyy$"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Iyy$", "=", "Jxx$"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Izz$", "=", 
   RowBox[{"Jxx$", "+", "Jyy$"}]}], ";"}], "\n", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Ixx", "-", "Ixx$"}], ")"}], "/", "Ixx$"}], "]"}], "<", 
    "0.01"}], ",", 
   RowBox[{"Print", "[", "\"\<Ixx is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Ixx is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Iyy", "-", "Iyy$"}], ")"}], "/", "Iyy$"}], "]"}], "<", 
    "0.01"}], ",", 
   RowBox[{"Print", "[", "\"\<Iyy is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Iyy is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Izz", "-", "Izz$"}], ")"}], "/", "Izz$"}], "]"}], "<", 
    "0.01"}], ",", 
   RowBox[{"Print", "[", "\"\<Izz is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Izz is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", "Ixy", "]"}], "<", "0.0001"}], ",", 
   RowBox[{"Print", "[", "\"\<Ixy is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Ixy is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", "Iyz", "]"}], "<", "0.0001"}], ",", 
   RowBox[{"Print", "[", "\"\<Iyz is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Iyz is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", "Izx", "]"}], "<", "0.0001"}], ",", 
   RowBox[{"Print", "[", "\"\<Izx is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Izx is incorrect.\>\"", "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.449394461859375*^9, 3.44939451334375*^9}, {
   3.4493945620625*^9, 3.449394705984375*^9}, 3.44939643459375*^9},
 CellLabel->"In[97]:=",ExpressionUUID->"8551106a-8d2d-484e-95f3-7e8ea627f4bb"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Ixx is correct.\"\>"], "Print",
 CellChangeTimes->{3.8450550663695564`*^9},
 CellLabel->
  "During evaluation of \
In[97]:=",ExpressionUUID->"9af847eb-b3fb-49e0-8f22-f40efa8cf274"],

Cell[BoxData["\<\"Iyy is correct.\"\>"], "Print",
 CellChangeTimes->{3.8450550663807917`*^9},
 CellLabel->
  "During evaluation of \
In[97]:=",ExpressionUUID->"dad0d151-79c7-4ce5-abf9-947d025ce5a1"],

Cell[BoxData["\<\"Izz is correct.\"\>"], "Print",
 CellChangeTimes->{3.8450550663908443`*^9},
 CellLabel->
  "During evaluation of \
In[97]:=",ExpressionUUID->"7fbd3bf6-fb02-45f2-8e26-73bb4756aab5"],

Cell[BoxData["\<\"Ixy is correct.\"\>"], "Print",
 CellChangeTimes->{3.845055066393964*^9},
 CellLabel->
  "During evaluation of \
In[97]:=",ExpressionUUID->"6f5b2999-2e67-4349-aa90-47132cab542e"],

Cell[BoxData["\<\"Iyz is correct.\"\>"], "Print",
 CellChangeTimes->{3.8450550663968697`*^9},
 CellLabel->
  "During evaluation of \
In[97]:=",ExpressionUUID->"cec9955e-cff4-49c5-92eb-30bb4cd61018"],

Cell[BoxData["\<\"Izx is correct.\"\>"], "Print",
 CellChangeTimes->{3.845055066402976*^9},
 CellLabel->
  "During evaluation of \
In[97]:=",ExpressionUUID->"a6148d03-b7a0-423e-b9b0-3a31da184a03"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 28.2", "Section",
 CellChangeTimes->{{3.449396533671875*^9, 
  3.449396539734375*^9}},ExpressionUUID->"a89ca133-6e27-4b10-96b9-\
d28a95156208"],

Cell["\<\
A sphere of radius R has a volume mass density given by relation rho = rho0 + \
alpha*x*z. Find the mass and the moments and products of inertia of the \
sphere about the center of the sphere.\
\>", "Text",
 CellChangeTimes->{{3.7997825922873745`*^9, 
  3.799782604695468*^9}},ExpressionUUID->"556dece0-4165-4079-a085-\
66bc45597a9e"],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.449396561578125*^9, 3.44939656346875*^9}, 
   3.639326932523162*^9, {3.799782563442351*^9, 3.7997825646583467`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"f34fabf3-f217-49ba-b45e-3f997b6e1341"],

Cell["\<\
It' s useful to express x, y, and z in spherical coordinates from the outset. \
Use the variables r, theta, and phi in the usual way.\
\>", "Text",
 CellChangeTimes->{{3.449396614296875*^9, 3.449396639796875*^9}, {
  3.7997826397045116`*^9, 
  3.79978264588751*^9}},ExpressionUUID->"6b3f7011-12ab-405c-ad5f-\
b960b69b99ec"],

Cell[CellGroupData[{

Cell["Did you forget dV in spherical coordinates?", "Subsection",
 CellChangeTimes->{{3.44939657628125*^9, 
  3.44939658490625*^9}},ExpressionUUID->"1119b08b-58d7-437c-9a01-\
dbcf406181c3"],

Cell["\<\
In spherical coordinates dV=r^2 * sin(theta) * d r d theta d phi.\
\>", "Text",ExpressionUUID->"3cee7b44-30fb-4bc4-9731-ab15d8491b69"]
}, Open  ]],

Cell[CellGroupData[{

Cell[" ", "Subsection",
 CellChangeTimes->{
  3.449396648*^9},ExpressionUUID->"525940fe-742f-4929-bd1e-ab02af038261"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"x", "=", 
  RowBox[{"r", "*", 
   RowBox[{"Sin", "[", "theta", "]"}], "*", 
   RowBox[{"Cos", "[", "phi", "]"}]}]}], "\n", 
 RowBox[{"y", "=", 
  RowBox[{"r", "*", 
   RowBox[{"Sin", "[", "phi", "]"}], "*", 
   RowBox[{"Sin", "[", "theta", "]"}]}]}], "\n", 
 RowBox[{"z", "=", 
  RowBox[{"r", "*", 
   RowBox[{"Cos", "[", "theta", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.449396678046875*^9, 3.449396694359375*^9}, {
  3.44939716321875*^9, 3.44939721246875*^9}, {3.452367638573078*^9, 
  3.4523676415417905`*^9}, {3.799782619243486*^9, 3.79978263023983*^9}, {
  3.799782660662575*^9, 3.7997827050814524`*^9}, {3.799785350691055*^9, 
  3.7997853591550403`*^9}, {3.8450550776861515`*^9, 3.845055125142182*^9}, {
  3.84505518230552*^9, 3.8450552003817563`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"12dc4817-2132-48ff-aa95-c258001c5004"],

Cell[BoxData[
 RowBox[{"r", " ", 
  RowBox[{"Cos", "[", "phi", "]"}], " ", 
  RowBox[{"Sin", "[", "theta", "]"}]}]], "Output",
 CellChangeTimes->{{3.8450551362022953`*^9, 3.845055172559615*^9}, 
   3.8450552028622427`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"773fb0d7-fd58-45fd-8cb3-94610b5ae7e5"],

Cell[BoxData[
 RowBox[{"r", " ", 
  RowBox[{"Sin", "[", "phi", "]"}], " ", 
  RowBox[{"Sin", "[", "theta", "]"}]}]], "Output",
 CellChangeTimes->{{3.8450551362022953`*^9, 3.845055172559615*^9}, 
   3.845055202867585*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"94c7e0f0-18d3-49ec-8925-c0178e874ae3"],

Cell[BoxData[
 RowBox[{"r", " ", 
  RowBox[{"Cos", "[", "theta", "]"}]}]], "Output",
 CellChangeTimes->{{3.8450551362022953`*^9, 3.845055172559615*^9}, 
   3.8450552028773623`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"8bbf0e9e-1dbe-4497-aca1-30c4f386c0da"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solutions", "Subsection",
 CellChangeTimes->{{3.4493967018125*^9, 
  3.449396703046875*^9}},ExpressionUUID->"11c789b7-b903-4fbb-b1e4-\
56174276b5c0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x$", "=", 
   RowBox[{"r", "*", 
    RowBox[{"Sin", "[", "theta", "]"}], "*", 
    RowBox[{"Cos", "[", "phi", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"y$", "=", 
   RowBox[{"r", "*", 
    RowBox[{"Sin", "[", "theta", "]"}], "*", 
    RowBox[{"Sin", "[", "phi", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"z$", "=", 
   RowBox[{"r", "*", 
    RowBox[{"Cos", "[", "theta", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", "x$", "]"}], "\[Equal]", 
    RowBox[{"FullSimplify", "[", "x", "]"}]}], ",", 
   RowBox[{"Print", "[", "\"\<x is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<x is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", "y$", "]"}], "\[Equal]", 
    RowBox[{"FullSimplify", "[", "y", "]"}]}], ",", 
   RowBox[{"Print", "[", "\"\<y is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<y is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", "z$", "]"}], "\[Equal]", 
    RowBox[{"FullSimplify", "[", "z", "]"}]}], ",", 
   RowBox[{"Print", "[", "\"\<z is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<z is incorrect.\>\"", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.44939671453125*^9, 3.449396814984375*^9}, {
  3.449397224265625*^9, 3.449397229921875*^9}, {3.4523671838913984`*^9, 
  3.452367225265869*^9}, {3.7997827138098173`*^9, 3.7997828014884543`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"cedb7e85-a983-4a2f-a6fb-462b3357aa68"],

Cell[CellGroupData[{

Cell[BoxData["\<\"x is correct.\"\>"], "Print",
 CellChangeTimes->{{3.845055154910878*^9, 3.8450552049200597`*^9}},
 CellLabel->
  "During evaluation of \
In[28]:=",ExpressionUUID->"e90a5a1e-6287-4b3a-a57c-51b979b57635"],

Cell[BoxData["\<\"y is correct.\"\>"], "Print",
 CellChangeTimes->{{3.845055154910878*^9, 3.8450552049281034`*^9}},
 CellLabel->
  "During evaluation of \
In[28]:=",ExpressionUUID->"0c63e9e8-28fa-4628-9417-9830c8254081"],

Cell[BoxData["\<\"z is correct.\"\>"], "Print",
 CellChangeTimes->{{3.845055154910878*^9, 3.845055204931995*^9}},
 CellLabel->
  "During evaluation of \
In[28]:=",ExpressionUUID->"93beae24-7627-4e3c-acac-ec1951e94c32"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[" ", "Subsection",
 CellChangeTimes->{
  3.449396839234375*^9},ExpressionUUID->"b230ea41-813c-462e-9dc9-\
8c2af894c5ab"],

Cell["\<\
Integrate to find the total volume, just to check your integration (you \
should get 4/3 pi R^3, of course).Then find the mass by integrating the \
density:\
\>", "Text",
 CellChangeTimes->{{3.7997853906501684`*^9, 
  3.7997854048182116`*^9}},ExpressionUUID->"2aea00b2-cd01-4707-9e82-\
cbbcccf5c1b9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"rho", "=", 
  RowBox[{"rho0", "+", 
   RowBox[{"alpha", "*", "x", "*", "z"}]}]}], "\n", 
 RowBox[{"volume", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"r", "^", "2"}], "*", 
         RowBox[{"Sin", "[", "theta", "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"r", ",", " ", "0", ",", " ", "R"}], "}"}]}], "]"}], ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"theta", ",", " ", "0", ",", " ", "Pi"}], "}"}]}], "]"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"phi", ",", " ", "0", ",", " ", 
      RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"mass", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"rho", "*", 
         RowBox[{"r", "^", "2"}], "*", 
         RowBox[{"Sin", "[", "theta", "]"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"r", ",", " ", "0", ",", " ", "R"}], "}"}]}], "]"}], ",", 
      " ", 
      RowBox[{"{", 
       RowBox[{"theta", ",", " ", "0", ",", " ", "Pi"}], "}"}]}], "]"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"phi", ",", " ", "0", ",", " ", 
      RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.449396869796875*^9, 3.449397032015625*^9}, {
   3.44939707184375*^9, 3.449397089359375*^9}, {3.4523676522760277`*^9, 
   3.4523676564634743`*^9}, {3.7997828673527555`*^9, 
   3.7997829093535833`*^9}, {3.7997831487043233`*^9, 3.7997831515682063`*^9}, 
   3.7997832690960903`*^9, {3.7997833407877445`*^9, 3.799783392076157*^9}, {
   3.799785370567083*^9, 3.799785387636191*^9}, {3.845055232301525*^9, 
   3.845055297768224*^9}, {3.8450553394189367`*^9, 3.8450553716237054`*^9}, {
   3.8450554030893974`*^9, 3.8450554580407667`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"82567627-849f-4936-be7e-7659b0da989d"],

Cell[BoxData[
 RowBox[{"rho0", "+", 
  RowBox[{"alpha", " ", 
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"Cos", "[", "phi", "]"}], " ", 
   RowBox[{"Cos", "[", "theta", "]"}], " ", 
   RowBox[{"Sin", "[", "theta", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.845055429816656*^9, 3.845055459494728*^9}},
 CellLabel->"Out[37]=",ExpressionUUID->"f90c63be-55e6-49e3-8875-391dd1146f4a"],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", "\[Pi]", " ", 
   SuperscriptBox["R", "3"]}], "3"]], "Output",
 CellChangeTimes->{{3.845055429816656*^9, 3.8450554594996967`*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"2b640118-8ed7-48bd-894a-b81ffbc3385d"],

Cell[BoxData[
 RowBox[{
  FractionBox["4", "3"], " ", "\[Pi]", " ", 
  SuperscriptBox["R", "3"], " ", "rho0"}]], "Output",
 CellChangeTimes->{{3.845055429816656*^9, 3.8450554596518126`*^9}},
 CellLabel->"Out[39]=",ExpressionUUID->"a64fa3c8-ab84-417f-ab4a-3a2380464f11"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solutions", "Subsection",
 CellChangeTimes->{{3.44939727659375*^9, 
  3.449397278078125*^9}},ExpressionUUID->"fa415da8-4f23-43d5-a879-\
0577c8993dcd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rho$", "=", 
   RowBox[{"rho0", "+", 
    RowBox[{"alpha", "*", "x", "*", "z"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"volume$", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"r", "^", "2"}], "*", 
          RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "R"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"phi", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mass$", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"rho", "*", 
          RowBox[{"r", "^", "2"}], "*", 
          RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "R"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"phi", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"rho$", "===", "rho"}], ",", 
   RowBox[{"Print", "[", "\"\<rho is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<rho is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"volume$", "===", "volume"}], ",", 
   RowBox[{"Print", "[", "\"\<volume is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<volume is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"mass$", "===", "mass"}], ",", 
   RowBox[{"Print", "[", "\"\<mass is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<mass is incorrect.\>\"", "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.449397291453125*^9, 3.4493973875*^9}, {
  3.452367242515648*^9, 3.452367277890195*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"f8ecc1ac-77ca-4cb7-969b-b4209275e31a"],

Cell[CellGroupData[{

Cell[BoxData["\<\"rho is correct.\"\>"], "Print",
 CellChangeTimes->{3.845055464585359*^9},
 CellLabel->
  "During evaluation of \
In[40]:=",ExpressionUUID->"594fdd0b-c822-477c-b9a3-758604156a38"],

Cell[BoxData["\<\"volume is correct.\"\>"], "Print",
 CellChangeTimes->{3.8450554645913706`*^9},
 CellLabel->
  "During evaluation of \
In[40]:=",ExpressionUUID->"7bdcf1f0-f6b7-42ed-abcb-c4d335f46939"],

Cell[BoxData["\<\"mass is correct.\"\>"], "Print",
 CellChangeTimes->{3.8450554645981026`*^9},
 CellLabel->
  "During evaluation of \
In[40]:=",ExpressionUUID->"1fe79966-d958-4a2b-b1f4-5f52e06a12f1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[" ", "Subsection",
 CellChangeTimes->{
  3.449397407140625*^9},ExpressionUUID->"93a48f1f-387e-4a01-83cf-\
f48ba3f3a457"],

Cell["Now calculate the J and I values:", "Text",
 CellChangeTimes->{{3.4493974119375*^9, 
  3.44939741909375*^9}},ExpressionUUID->"e1c8f55d-b861-4547-b4c6-\
343d850f2541"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Jxx", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "^", "2"}], "*", "rho", "*", 
         RowBox[{"r", "^", "2"}], "*", 
         RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0", ",", "R"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"phi", ",", "0", ",", 
      RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"Jyy", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "^", "2"}], "*", "rho", "*", 
         RowBox[{"r", "^", "2"}], "*", 
         RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0", ",", "R"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"phi", ",", "0", ",", 
      RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Jzz", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"z", "^", "2"}], "*", "rho", "*", 
         RowBox[{"r", "^", "2"}], "*", 
         RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0", ",", "R"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"phi", ",", "0", ",", 
      RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"Jxy", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"x", "*", "y", "*", "rho", "*", 
         RowBox[{"r", "^", "2"}], "*", 
         RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0", ",", "R"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"phi", ",", "0", ",", 
      RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"Jyz", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"z", "*", "y", "*", "rho", "*", 
         RowBox[{"r", "^", "2"}], "*", 
         RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0", ",", "R"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"phi", ",", "0", ",", 
      RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"Jzx", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"x", "*", "z", "*", "rho", "*", 
         RowBox[{"r", "^", "2"}], "*", 
         RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0", ",", "R"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"phi", ",", "0", ",", 
      RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.4493974425*^9, 3.449397580578125*^9}, {
   3.449397651265625*^9, 3.449397732140625*^9}, {3.449397816453125*^9, 
   3.44939781759375*^9}, {3.452367674541368*^9, 3.452367683228757*^9}, {
   3.799783480685566*^9, 3.7997835608492894`*^9}, 3.799785422700304*^9, {
   3.845055486939527*^9, 3.8450555382851005`*^9}, {3.8450555929372873`*^9, 
   3.845055629450177*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"f708ff33-2405-4521-b84b-49afb3e7a2f8"],

Cell[BoxData[
 RowBox[{
  FractionBox["4", "15"], " ", "\[Pi]", " ", 
  SuperscriptBox["R", "5"], " ", "rho0"}]], "Output",
 CellChangeTimes->{3.8450554912412515`*^9, 3.8450555392804637`*^9, 
  3.8450556302697444`*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"484e8abd-7699-4ee5-810c-b972796ce7b2"],

Cell[BoxData[
 RowBox[{
  FractionBox["4", "15"], " ", "\[Pi]", " ", 
  SuperscriptBox["R", "5"], " ", "rho0"}]], "Output",
 CellChangeTimes->{3.8450554912412515`*^9, 3.8450555392804637`*^9, 
  3.845055630333326*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"686e62d4-28ea-4d0a-925a-f786c0d66524"],

Cell[BoxData[
 RowBox[{
  FractionBox["4", "15"], " ", "\[Pi]", " ", 
  SuperscriptBox["R", "5"], " ", "rho0"}]], "Output",
 CellChangeTimes->{3.8450554912412515`*^9, 3.8450555392804637`*^9, 
  3.845055630414893*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"58b507bf-1ab8-4b5c-b400-f1f012c2af16"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.8450554912412515`*^9, 3.8450555392804637`*^9, 
  3.84505563041864*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"7aed813d-628e-4314-b3dc-c17566069f3c"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.8450554912412515`*^9, 3.8450555392804637`*^9, 
  3.845055630506735*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"b99b31ea-daf1-4cb0-bb93-1da719d268de"],

Cell[BoxData[
 RowBox[{
  FractionBox["4", "105"], " ", "alpha", " ", "\[Pi]", " ", 
  SuperscriptBox["R", "7"]}]], "Output",
 CellChangeTimes->{3.8450554912412515`*^9, 3.8450555392804637`*^9, 
  3.845055630586898*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"03a10b36-eea5-4adf-abb4-ed2d732da668"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solutions", "Subsection",
 CellChangeTimes->{{3.44939758740625*^9, 
  3.449397588625*^9}},ExpressionUUID->"4b85d2ab-91e6-4785-8cc8-af0f300fd76b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Jxx$", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "^", "2"}], "*", "rho", "*", 
          RowBox[{"r", "^", "2"}], "*", 
          RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "R"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"phi", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Jyy$", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"y", "^", "2"}], "*", "rho", "*", 
          RowBox[{"r", "^", "2"}], "*", 
          RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "R"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"phi", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Jzz$", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"z", "^", "2"}], "*", "rho", "*", 
          RowBox[{"r", "^", "2"}], "*", 
          RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "R"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"phi", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Jxy$", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"x", "*", "y", "*", "rho", "*", 
          RowBox[{"r", "^", "2"}], "*", 
          RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "R"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"phi", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Jyz$", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"y", "*", "z", "*", "rho", "*", 
          RowBox[{"r", "^", "2"}], "*", 
          RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "R"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"phi", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Jzx$", "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"z", "*", "x", "*", "rho", "*", 
          RowBox[{"r", "^", "2"}], "*", 
          RowBox[{"Sin", "[", "theta", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "R"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"theta", ",", "0", ",", "Pi"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"phi", ",", "0", ",", 
       RowBox[{"2", "*", "Pi"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", "Jxx$", "]"}], "\[Equal]", 
    RowBox[{"FullSimplify", "[", "Jxx", "]"}]}], ",", 
   RowBox[{"Print", "[", "\"\<Jxx is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Jxx is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", "Jyy$", "]"}], "\[Equal]", 
    RowBox[{"FullSimplify", "[", "Jyy", "]"}]}], ",", 
   RowBox[{"Print", "[", "\"\<Jyy is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Jyy is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", "Jzz$", "]"}], "\[Equal]", 
    RowBox[{"FullSimplify", "[", "Jzz", "]"}]}], ",", 
   RowBox[{"Print", "[", "\"\<Jzz is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Jzz is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", "Jzx$", "]"}], "\[Equal]", 
    RowBox[{"FullSimplify", "[", "Jzx", "]"}]}], ",", 
   RowBox[{"Print", "[", "\"\<Jzx is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Jzx is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", "Jxy", "]"}], "<", "0.0001"}], ",", 
   RowBox[{"Print", "[", "\"\<Jxy is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Jxy is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", "Jyz", "]"}], "<", "0.0001"}], ",", 
   RowBox[{"Print", "[", "\"\<Jyz is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Jyz is incorrect.\>\"", "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.449397614640625*^9, 3.449397624296875*^9}, {
  3.44939775703125*^9, 3.4493977910625*^9}, {3.4493978231875*^9, 
  3.449397842046875*^9}, {3.452367293593119*^9, 3.452367345779951*^9}, {
  3.799783594694416*^9, 3.799783650746133*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"845cdfab-3730-40fd-93ea-29e5f2180961"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Jxx is correct.\"\>"], "Print",
 CellChangeTimes->{3.845055552491654*^9, 3.84505563840906*^9},
 CellLabel->
  "During evaluation of \
In[76]:=",ExpressionUUID->"d00cb6ba-1d23-4930-87f6-9e55ccd00264"],

Cell[BoxData["\<\"Jyy is correct.\"\>"], "Print",
 CellChangeTimes->{3.845055552491654*^9, 3.8450556384153996`*^9},
 CellLabel->
  "During evaluation of \
In[76]:=",ExpressionUUID->"8fe09a82-9b6f-4dc8-844d-e8e7cf21c3e8"],

Cell[BoxData["\<\"Jzz is correct.\"\>"], "Print",
 CellChangeTimes->{3.845055552491654*^9, 3.8450556384207935`*^9},
 CellLabel->
  "During evaluation of \
In[76]:=",ExpressionUUID->"d7e73a2c-1ba8-4850-8a32-ca2acce9c580"],

Cell[BoxData["\<\"Jzx is correct.\"\>"], "Print",
 CellChangeTimes->{3.845055552491654*^9, 3.845055638422693*^9},
 CellLabel->
  "During evaluation of \
In[76]:=",ExpressionUUID->"670fa94f-4770-4c7a-9ca8-029564f2c4ff"],

Cell[BoxData["\<\"Jxy is correct.\"\>"], "Print",
 CellChangeTimes->{3.845055552491654*^9, 3.8450556384251623`*^9},
 CellLabel->
  "During evaluation of \
In[76]:=",ExpressionUUID->"3c95baf7-4795-47fd-a925-9e5ba0300a74"],

Cell[BoxData["\<\"Jyz is correct.\"\>"], "Print",
 CellChangeTimes->{3.845055552491654*^9, 3.8450556384266543`*^9},
 CellLabel->
  "During evaluation of \
In[76]:=",ExpressionUUID->"4641b094-da8b-4b38-8f08-bc1d3476cbef"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[" ", "Subsection",
 CellChangeTimes->{
  3.449397890546875*^9},ExpressionUUID->"c5b22099-9755-4eca-8854-\
2775087fe9ec"],

Cell["And the components of the inertia tensor:", "Text",
 CellChangeTimes->{{3.7997854434573574`*^9, 
  3.7997854493703814`*^9}},ExpressionUUID->"2882a4ca-71cc-4977-b220-\
bbb151b5d5f4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Ixx", "=", 
  RowBox[{"Jyy", " ", "+", " ", "Jzz"}]}], "\n", 
 RowBox[{"Iyy", "=", 
  RowBox[{"Jxx", " ", "+", " ", "Jzz"}]}], "\n", 
 RowBox[{"Izz", "=", 
  RowBox[{"Jxx", " ", "+", " ", "Jyy"}]}], "\n", 
 RowBox[{"Ixy", "=", 
  RowBox[{"-", "Jxy"}]}], "\n", 
 RowBox[{"Iyz", "=", 
  RowBox[{"-", "Jyz"}]}], "\n", 
 RowBox[{"Izx", "=", 
  RowBox[{"-", "Jzx"}]}]}], "Input",
 CellChangeTimes->{{3.4523677029316297`*^9, 3.452367711415896*^9}, {
   3.799783667586001*^9, 3.7997836969861927`*^9}, 3.799785440676371*^9, {
   3.799785514830558*^9, 3.7997855152916117`*^9}, 3.845055664259738*^9},
 CellLabel->"In[88]:=",ExpressionUUID->"25f6aabd-4487-484f-95f4-16bc582c093c"],

Cell[BoxData[
 RowBox[{
  FractionBox["8", "15"], " ", "\[Pi]", " ", 
  SuperscriptBox["R", "5"], " ", "rho0"}]], "Output",
 CellChangeTimes->{3.8450556741132603`*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"e9a87213-46cb-466f-a322-645917f90b43"],

Cell[BoxData[
 RowBox[{
  FractionBox["8", "15"], " ", "\[Pi]", " ", 
  SuperscriptBox["R", "5"], " ", "rho0"}]], "Output",
 CellChangeTimes->{3.8450556741340427`*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"ad919df1-c54d-46bc-ab53-6eaae0fc8842"],

Cell[BoxData[
 RowBox[{
  FractionBox["8", "15"], " ", "\[Pi]", " ", 
  SuperscriptBox["R", "5"], " ", "rho0"}]], "Output",
 CellChangeTimes->{3.84505567413944*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"b6a57e3d-9096-47ff-88b0-c15024a57aa1"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.8450556741439314`*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"0bdd4793-6d7c-4c9e-bdad-5e9430ac2d55"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.845055674146449*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"92ebad6b-4cc1-4ce6-804d-ede8b466dc26"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["4", "105"]}], " ", "alpha", " ", "\[Pi]", " ", 
  SuperscriptBox["R", "7"]}]], "Output",
 CellChangeTimes->{3.845055674157558*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"540227da-df66-4679-b5d7-423937ca440a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solutions", "Subsection",
 CellChangeTimes->{{3.449397931453125*^9, 
  3.449397932796875*^9}},ExpressionUUID->"3c4b921e-863e-4e5c-a1ca-\
22853727eab1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ixx$", "=", 
   RowBox[{"Jyy$", "+", "Jzz$"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Iyy$", "=", 
   RowBox[{"Jxx$", "+", "Jzz$"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Izz$", "=", 
   RowBox[{"Jxx$", "+", "Jyy$"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Izx$", "=", 
   RowBox[{"-", "Jzx$"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Ixx", "-", "Ixx$"}], ")"}], "/", "Ixx$"}], "]"}], "<", 
    "0.01"}], ",", 
   RowBox[{"Print", "[", "\"\<Ixx is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Ixx is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Iyy", "-", "Iyy$"}], ")"}], "/", "Iyy$"}], "]"}], "<", 
    "0.01"}], ",", 
   RowBox[{"Print", "[", "\"\<Iyy is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Iyy is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Izz", "-", "Izz$"}], ")"}], "/", "Izz$"}], "]"}], "<", 
    "0.01"}], ",", 
   RowBox[{"Print", "[", "\"\<Izz is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Izz is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", "Ixy", "]"}], "<", "0.0001"}], ",", 
   RowBox[{"Print", "[", "\"\<Ixy is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Ixy is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", "Iyz", "]"}], "<", "0.0001"}], ",", 
   RowBox[{"Print", "[", "\"\<Iyz is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Iyz is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", " ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Izx", "-", "Izx$"}], ")"}], "/", "Izx$"}], "]"}], "<", 
    "0.01"}], ",", 
   RowBox[{"Print", "[", "\"\<Izx is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Izx is incorrect.\>\"", "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.44939794371875*^9, 3.449398016765625*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"6531ad60-e43d-4149-ac8f-687529a06dc4"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Ixx is correct.\"\>"], "Print",
 CellChangeTimes->{3.845055679988248*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"f398b06c-c11f-46bc-8a5a-2690831bee0d"],

Cell[BoxData["\<\"Iyy is correct.\"\>"], "Print",
 CellChangeTimes->{3.845055679998003*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"f0a3b786-8066-498f-a6fc-dec442b770bb"],

Cell[BoxData["\<\"Izz is correct.\"\>"], "Print",
 CellChangeTimes->{3.8450556800112906`*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"bbff52ab-02ab-44b2-91ec-e63082d6fdda"],

Cell[BoxData["\<\"Ixy is correct.\"\>"], "Print",
 CellChangeTimes->{3.8450556800150547`*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"41c5531e-4195-45b3-9ab9-bc510b6513b3"],

Cell[BoxData["\<\"Iyz is correct.\"\>"], "Print",
 CellChangeTimes->{3.8450556800190525`*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"d4b76406-3887-42ec-83bc-cc99bf85e8fb"],

Cell[BoxData["\<\"Izx is correct.\"\>"], "Print",
 CellChangeTimes->{3.8450556800232034`*^9},
 CellLabel->
  "During evaluation of \
In[94]:=",ExpressionUUID->"35377063-a488-41b6-b157-b06ff2413201"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Written",
 StyleBox[" Problems",
  FontWeight->"Bold"]
}], "Section",
 CellChangeTimes->{{3.441220828720395*^9, 3.441220849173782*^9}, {
   3.441220923018477*^9, 3.441220923518483*^9}, 3.4428717138731413`*^9, {
   3.6381366370179396`*^9, 3.6381366460191555`*^9}, {3.7997837371951156`*^9, 
   3.799783738371183*^9}},ExpressionUUID->"6fdf6373-49b3-4f70-a72f-\
aa25eadebe02"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3QmYFNW98P+JTkJuzGP+8b3c906uOwJmHInBqMGY2JEEEmNcQxQNxGgU
gm9AohAXdCQuuBtQ0LAoioKOoEZFRTEkUYRg9IqOgEpEBAYDs/fs3TX97+ra
q05VV1XvM9/Pc5/73Ds23adOne1X59Q5h1005exL9ykrK7vii8n/dfavfv/9
3/3uV1ef8/8l/58xk6/4zYTJl/z6x5OvvGTCJb/79kX7Jv94cPJ/vVpeVib/
3wkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAD0Q7GaOwaV+VYxcOr91dVz5tY2i76rq+6J4YJ/NOiOmli+LysQaefSRVMq
Utc3fszzW/YUOj2eYtHaB5YsHjO+wnpTnt7kI9nyv102JxLR/2lk+qSFL61p
lcIkpHXNS4vHjCs/acz6aOB/u6t6vN8iN6F6Vyzw51EC9rw5a2B+m4tMyn/b
rtdut9a7pFGROY/e+HrQAudy4cJi7LPkj19Ra7vU9WMc7fqgyppPg6XUqqTa
yZzJZo+Zdy7FacBtb3bl7RsAACWvbdcbU6edVO6/O0yOuCavE4yXpJ2zr7J9
T5GHjdKGFeP3MyW3aljNJ8WZXmnnQ3edt1+Zi/Jx9y3d2e3+j2vX3VJZIfyX
FePHrq3zfcnJ8fOs+VP0b4qECRtVdVueGztemCbxuDTo51Hs8tdchC//sej7
d9+q1rtkFLBcDTNbVz+p1YI0VU/Avb2NXF29yRZimBNgMyqybLN7sW/b9fqF
an0RfG1ApdNO5kXWeswCpHzVqRFr0gIGfZl/AwCg1MVaXh5pH1bpQ7jU1JJj
xF5Vef+7jkGL41l6cYeN0uZJo2yX5Xh0XwRMI0CvkcndNVHR1Im0cfUV3v94
1MiXd6a5S+IykEnYmNTywQPOZ/cVFfM3uyQm6OdR5PLSXIQv/8mQbbJe5ssv
WrHRXL3MkVTFZdU7AkWOovY2+RPTXq0Tfjy69HZnkFJx9dxm76nSra9esX9Z
2U/GrG8KkjaBEO2ktKN62LCatG2pz48Vn2z1mHnnmDANHPRJqxeNLM/oGwAA
pc65/sQ6hBNMDQieORM2Zp08dr1gwAVjFr+sLaiLRWvnmqb8jHGkKICq2zxv
WNqI033ca5tetMkwbBSupvP6TtHnj42s2ptJGlA4eWguwpf/ZERzkfEvncXS
EjjYg8q0HGNv2ahFa8Rf0rbzieMcVzFm0uZOz99IhY2u3xkksYHbyR1v3nyg
j7bU58eKUnZ6zLzLPGxMvLX8ggGZfQMAoMSl6wTFz1ftT7xLLGwsgcVX0aXX
Re4QrIITzqE4BmDWoa8Hlzm75rm/GTZzxp13VldXW94LUxVD2JhpGlA4OW8u
Mij/qYjGIHpttnnudOPL0wZxNsJI0P0ZiOW3VK6zk9o/mVZenp25+GDtZCy6
fmykLG1o6fNjxSo7PWbeETYCADKXvhMUDl1s45xSCxtLYKuHlj17XHLQeTvs
AzBl6FtVObOmRp1McZup9HOnnGtECRuRiVw3FxmUf/voWlTMLJ8JvudMsEjQ
FsameMUgcsxSXn5VtoIU/+2kEap7xoM+P1a8stNj5h1hIwAgc346QUd/4Rjn
lF7YWMpst8MxYyJPN4wUvLclftsr7Takzs1yCRuRiRw3F5mUf3t7WDFw1np7
rJRh2Ch8V9c9EhSsFPWKQeQVqmmmI3PB/BqmRzzo82PFLDs9Zt4RNgIAMhe2
E7R2+oSNeWR7Pcr+flasZdXoilscY12F4DE4YSPyLKfNRWbl39keOt9/tHxJ
mFkkUSTovsVTkNch5bm88qPzPbEVXbnAvOmrWzzo82NFLjs9Zt4RNgIAMkfY
WGqs72352A3VwnGn0r90Q9iI7Cpgc5Gu/AtjNOtmxZagL9w7a8E2xlF2RrUR
vlOZmsfM72t0ghOCRPGRz4+VAMLG8N8AAChxYTtBa5fhPg607Ek+KjJnlfWg
be9TsE0LwNKn07b5Z/K3lskHLksbnjzzUCPEcDtK271Pl3bULFk0wXxcV/m4
22fMW1vrsvmhr2SEZ7zrVD7urtnvBz2XzREDph/MlGjYKJ/zbj2rvapy5sPV
T28SzkOJfqLMmIqSatct0cuAfJy348D3uk3PXqUftCeXkGfEP2SWLFrLzCmM
TJ/0yDprufKsIPK9iznujolWRxxXJ5xiDpRjzlJh+2bz64S2owa9w0bRkDv1
oQxPrhcnW/xesEPkhrnq/lTmJaaht9ISnsThcmSG6F1I8exkKhp1LIYMdad8
tZOx6KbqdOcYJn+l29/HBBnpo4K4X6BWqKxfYn7jNZSMesxMao0p24O0bNo/
cgkbrYeGeDZcwcJGf/cuzw1vrntnAOjrcrgljiQeLRgDsBS3I7ltH5PpJw6b
DuBW6fvta7Nvyd5wpv61thBDdB6iOHqq27JsZETpX+QeXFL3AHRNYaBkhGA5
ViAbYaOf0w9LMGw0CpVeVEyH8bkdg25bRCeTRy+iHfXLzCGDYCYl9QGv89qk
2g3zlC1q1Y8Zv2JLnriCmEMM4fmejohGvbpkhiwWDJuzmmOiw8HNCU4722g7
V935uCm09OXfdRfW1J4wzcZ/zew8Pr8b4ygTiOdPmeT4tGN2MjUN6rKza5g7
laadFC21dZowf+XFfj5mDxv9VxDl485KKheqbvHRt4Km27fMe8yQtUbNljD1
NCEMG1/f7nIucPm4+wSbePsPGwPeu3w1vLnunQGgHwi3nbj9iHnnOHDW8+9M
djuq3nHYmeAJv3gDAaXvs/96TI/mrP9K7yYcPYJzkZggbDTN6xlfa+06LSkJ
ngzfnDOeGrcn0m6sd8rXeeWlFjaaTw2w3iBTSRYu7nVe6YQZax8RDV2M3HMZ
2yhc5o9Me7OY6oJRfuz3xX4OQpnjuY3zWAfnO3epqxPe8azmWPUu5+i3zBqg
+Vmkqn8m6DJsb37KvzD9VpHpk9eleSU4HX9bpEqrF35/wMBZ65vTb4yTCjBd
V7qGulO+2knHzJr4EZzPjym/G7CCyJyF6oalz7nex8AHbuqy0GOGqzWZ1FNB
2Fh+0kkHDJmqFmPnsyl7J5vwGzaGuXd5aHhz2DsDQD8S5vBiZ5ssXEpXVTnz
BflxqGADQ8cjcefjWeGITt4jcYh9GsU8trGNmtR+1tkjpB3DmMfh5uGZ7Upd
hlh+k+GP24IxPZ8DzHqYL1y0S6RAfsLGoNzSYBmN2wc25mLma/Qi0569m57q
G/9p6tSTyrVpX9EHBE8/zCm0jvxNQzvbsNY5s2P/ZvMelQp7BLF19dQDRHc8
uzk24c6/XyWarQsYNiq1qeKiSYHn0735LP/ekWPQZzViotk62xyxMtZNtZai
1yEtZSC69LYRA9wXD4S7U35ivayHjWEqiEsfpE3J+emDfMpCjxnuXmRSTwVh
o2PZj+3ZlLN2+Akbw9273De8ueudAaBf8egEpdr1S8Y4ZgyFDzOdXba107H/
inMqxLkpvXP9mMuRZJYvt61fVcZdgcNG60I18wIqewdndJ1hkuFb65pn75t2
q2BBjsJlVsvJMrrwuXVGKYWN1qG48204y333M3opH7d4tXEfBZuTpPmAeCWh
xn4LzMmz1RHHN9sGh4J1cdaBsfzI5WznUDnbOXbsiBED1PGeJZINtEhVGXxm
d55RzQTf5V8wFjXJbIWqIv3GOKnTNNQ89z62Q5lv8giFwt2pAoSNYSuIIGw0
101HkB72IMUs9Jhh7kVm9dTPljiOSVJ7+Jk+bAx773Lf8Oa0dwaA/iPNTJat
oXZ7mS7d/oT2Ma1odwvBhKOt35GnS5yP0wUxiPkFCmn1/IqKgGGjdYRme5hs
iSiN2DZUMoKyvfNlujW+DgUzT6H6H5OX0CJV2+Ah7eMC2zDbeaW2DziH7rZ3
stIGRNYU2v+rdexnuafOlW/m5yrORaqCD5SPdK5gzHqOWUab2stHtiDLO5fk
ZWPl5ePGrq3L9u6qQcu/MFeN6/Q3WR/0+40ctp2m4XmAoznAFAp3p/IfNoau
IM6w0fowzd7Thd1hKQs9Zoh7kWE99beTquPQUmtvmzZsDH3vct7w5qV3BoB+
IH0nOCoy59HqatE2GoZ0o2Vfu387X/axLtlymS5xuYRRkXnKvm0tH9w3IljY
aEutc78OdScB60PLMMkIRbCBgL+pQ2N2I9CIt3TCRvuTB+dn3NcYi6/UNjgJ
/gFb4bGl0D5ytibP9sDc+VxF/4C0esG3Doi84Ji9Mn1g4fdFKxizn2N+nmC4
NxfqO1a+Z88DCVD+Y9H371Yn9yvGj1ngnEJShN5JVeO1MU5qqGx5xUx0Eody
i+W20fu4xnB3Ku9hY/gKkpU+yIcs9JjB70Wm9dTf5Tvff7SkKl3YGP7e5b7h
zVvvDAB9m6/txNPKTpcteJxudC7yIEr8OF241ivFZUe4hPcYxp4MnxkSJhlh
OV9kc9nB3sSY2rAu70mrZMJGR/lJO7hK+9A749GL9QP2FHqPrOxf7nzkrj6T
T37tSHnxtnNG0viAcI/NHOSYn7V/Ls2F8QJa5hN5Tv7Lv/nFRjUwdNmz0eem
Uh5EkaDyCEgQ6QuP7Uje1jbx6n2LcHcq32FjBhWkcGFj4B4z8L3IuJ6GDBut
wV2asDGDe5fzhjevvTMA9GHFFDaKBlFaf6rMp4j7VuFoSiPeVcNjDON8xcPn
O4AhkhFazHIUiCxNKGesrQ28+XyphI3O/HeG0o6CmuuH3tYPBHyp055+x+hR
Ca/a5ScqyijRMXuV+nuH8YGc55ifsiFqLrq3WzctyfKEo+/yb61Z5rovnOX3
dYSNZ8LES0//nYoEf2OPSQWzkxUV8/5cM36/dFOH4e5UvsPGDCpISYeN3vci
83rq8/Id98jzQFXbN2Rw73IfNua1dwaAvqu4wkZnNKS+3a/Np7iFb5YDDX10
Ch5jmLTvWXgImoxM2EJsz9lGfZe8MGkolbAx7cghka6g5nr0km4lVVrOZ+bJ
uKbxbdMTFefOObYP5DnHhJyvQovOJRQcARCW//Jvm8e3hTaCWX7PgyR8pU24
Mc51t07eXxQJimYnZWmnDsPdqTyHjZlUkJIOG73vReb1NA9hYyb3Lg9hYyK/
vTMA9FHFFTYKB1HJqG27cDMcq7oty0ZG3DoF+4aWgcLGQHvuBUpGJqzp9JoS
1ZbnhewZSyVsLP7ZxtAT2TrnOtVjT7r2YtMTFWcmVEVGHeqygjEPOSYkOish
Mv2+mdaT47K2VNV/+bdniHO3SedzrVANpih5dsL5VlEC7DdFqCTCxkwqSB8O
G/M12+hcpGq5R95hYyb3Lj9hYyKPvTMA9FHFFjaKFpOUjx03VrgZjuPfRjdV
CzcadcwYeo1hnEGKv31KQyQjI5Z0uk556OPM0McZlErY6PyYc+TgmKyx5Fv+
F6kGzknrRr4Ka3iV9oC/vOaYkHO2MfWGoP3kuLJs1JdA5d92OcLNNh0ZkmnY
KN4Yx3UQK7i/fhbKlkTYmEkF6cNhY+b1NGTYaP1M0EWq/u9d3sLGRN56ZwDo
m4oubHQZ93rsLb/rxpFzNhm/1rrmJfu0RZljBOg5hnHmiZ+NL8Ikw412ZlzF
eI9jCEzdtOt8qHb2tMeYuW3nspEjXw60B2ORho2O4bdz5GC777nfSdX2AUfR
CvhEIiFapph2s3r36fKc55iQa3PhDIo9D5VIL2D59xM2Oi45C5MUznvqEQm6
7ozkqTTCxgwqSF8OGzOup+HCRlu7kW4n1fD3Lg8NbxZ7ZwDox4owbBSs2vJc
Jrqr+uyBt1tfg9LPyHDrETzHMIJZDx/r5cIkw4XlFSq3g8VNo0e3t8DUC3Ef
M0u1G+ZFImmGnaUTNmb/FMLcb+jn9kRC2rD0F8KIyTEd7whb7LuseK0Wy3WO
CXk0F866n8EhF4HLvy1vxbGbtTRmuiWO8pX2paeeC/zs99dX3FoiYWP4CtKn
w8b8nNtoC07thTBd2Bj+3uXjeV3WemcA6M+KMWxM2385L8E5trSNxAIsUnXZ
dU0w+JR2zr6i4vdq2sIkQ0ywYeaVq2ptoYE6jVLmvuek8xxMF2nueAmFjbbc
djxtsJZDx0xWHtZKiV5kE0T9qSPvT7pL/DTAUjtEYYvluYd3XJPrHBPybC4E
D23C7aoapvzbpjt9bD+bpYVt1iF3mmkay4d9htW5Cxs9lkfuWD92utZ0+/xY
6ArSt8PGDOupr8u39jvOcpUubAx/7/KzzCM7vTMA9GvFGTZaFmKlm+lTvlzw
YNPUzQXYEidFMHYtS53jvGqNeuJb3Zbnxo4rH2L0RGGS4UJ4NnFk+qSVm1P5
0Lbrjana2xluc5Fu+2wIBN+6P9AeQU7CqDwrYWPCGiw4IiZzwCW4U3l5xUa4
G6dxcxPSzqWLplR4xkrmaxQOdcw5nHYslNMcE0rTXAje3wy8q2ro8m8NNgUV
NkjTFID5a9PeMtP99bvxSO7CRuebqsrWQ/L2IxVjntTiF58fC11B+nbYmMis
nqbd7iZhW/wsWhyeNmwMfe9y3/BmsXcGgP5LOID304XZOIcE1sGMY8+HtF22
aeiYbhCldYiOc3v1HsExAncup3EMh0zTeW6sIVuIZLhevOvZxFajIss2i0at
2quRvqRdmRPoxSs/nC9neX9nwM+bz9ezjATMpV24cDHz0Yszqc7a5OfupJlC
0ucFXF/902ucn7FQ+Bxz7onq54l9uhG+IBsFE+7uMiv/lvMZHTfCGBgHSpIP
gW6Z9uHwr/75uVM+2knXzV1l5hbP58cSYStIukIVvA8SyUqPGa7WZFJPRWGj
LYYy32vh2aaOwiCciw9173Lf8GaxdwaAfso8aWVRPu6u2UFOahBFWObOS7Tr
dfpD57VoJe0gytwhGg829R91xlbOlxrEm/NLOx+6S3DAt3qB9q8NnAwvaYNW
j3vkI+A18xyxiLcOCHw5JvIsrXhcUTF+zPNbHN8pullen1eSvfrJKcq/qRg4
dXlqgtj0PW4bDQnOc7c+GUj3AVGBEY7iPHbzS7MPkvZLyhDOY9pXqT6+A/xQ
OSYsaY6BmZ9/Zcsl4eC8qnLmC9pcv5cslH9LsR8VmbcuFR4mh8R336re39Dl
34Nyy3xO5Qf6cLg75beddDkRz7kQwufHEiEqSKg+KPAUdlZ6zHC1RhWuZUuY
46ZkUj9RcsNItlHg9a91XPuqUx0ZeHX1JudVB2/c8tDwZrV3BoD+xfng0YWP
57HOx4Amg+6o6fT4rTTzXKkpFR/joljNzQdeLQehrWueuXPG/Cn6wGRUZM5T
NbZFKcL1n+YE27u0uk0rblxmDp2Snc7ClwQda6Bk+CHVvrFw2q3W3rB83O0z
7pw3t9Z9iCJeXutOuMjNdwkJ8J6jd85bpB4UB/284xqitQ8sWTzGNO5Njoju
r56zVjhDJFoHq0mVCq8PyAnoTFMRBEGX4/66FS2B1NN1rwWKyuROoLd1AuWY
Z8V3bTpEJzbq1Jks729ON7OTlfKv5caiRROsA+BUhlQ/5+8eBSUHyy4nbGby
4VB3KnA72bZrbbVemJPNVPVa4X3y+bEUvxXE8wLHr9jh1Zr52wUlaz1muFpj
T02glk2/hNsGfN8cHEk7amrmRCLGd4wfs3iZuGcJXBgCNG55aniz3jsDAIpM
Mmwc6XcQBQAAAADob+T5lOCn2gEAAAAA+gd5Uc3XM9uxEwAAAADQJ2iv+Zu3
BZA2T6qyn88LAAAAAOiHLOegaRs/bl099YDMTnkAAAAAAPQN1kOEld0Um+dO
GzBRcGYxAAAAAKDfsZ4mP37FR9LG1VMPHDhrPecoAQAAAAC0A+asAh/EDAAA
AADow8xnQFdVznwhN6dpAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAADQ10VXLjhvv7KKiya93+zvH7Ttem3W/CkVA257syu3KfOj
bvPKSVMHVo1ZHy10SoqCtKOmZmZl+bgVtYVNR+BCVcz6fBmLRWsfWJaTYtO2
a231rDEHVNZ8muUvRv70+fIPoUD3PRZ9f/L4irLycYtXt0q5/7ncJSM/SiWd
2SDVrlsyoX83IHWb5w2rKKuqvP/dPbb/ItWuXzJmXPml1bti9v8SYCyXux68
T2td89JicebnXTKqun3ZnEikzFA+7vYZd86bW5scQrftXHrq2GKqPrH1Ywal
EukjDKzb9OxVtybDAb+fz6VUWzTtpPJUWiL9uEVSqO1GhXJvxhe49QhSqIpY
3y9j6iOgsuwXG3NbMahEwsa3ll8woMyvUrmoDPT98g+RMPd9z5uzBoYsJ9ks
ZhkkI69KJZ2ZSQ3Lx6vdS5++Um+xmjuU8dCgO2r0AMWSORNMkUugsVzuevA+
zJpplswvRGLemJpq/aoqZz6aChL1RN5uFINiqz7+J4Z2VY83DZsKGxHogUkx
ZmkBWEe8BW89+sRsY98vY81zp1eU5aTYWNqKkoqwpNoN87SHfuZeXv/vqYfA
FaV1UaH0/fIPkVD3Pfz0WVaLWanM4pVKOjPRVffE8DIaEJlzttGWOebIJchY
Lnc9eN8lbZ487OL7lohj9jxTCkayclxdvUk4VG7b9fqFqXSW+HhDK6j5Dhul
1ddP3mD7Ra3HyV+LJG2qnryuWFs/afWikeW0HtmV/zKWbzkrNtLmSaNKLmxM
uDwcNpM2PHl+f1l52/fLf4ZEHVO+vyEH8nzf+24xa9k89U5xM9IvxFpeHlmR
1ztbQhne8sEDg8SRS6BOmYFfGO6ZnydazFhxWfWObvePxaLrx0ZKbhBlo42p
8hw2Joegh97s+EV1UiN/LdIH940o4n5Ne05F65FF+S5j+ZezYqNmXam1eHov
7BY2psZC+91ayguw/ev75T8j4o4pv9+QE3m+7321mEmr5x96a4lEMTmR7wcC
pZTh+pyjM3IJ1Ckz8AvBI/PzQAkG5aCxYv7mdD+/dfXUA3x8rIgVJGyUNqwY
v5/gF/Pb10g7qi8qP6mI+zVajxzoq+MZA2GjjZYhrmGjvOhi9DVFN0OUE32/
/GfArWPK5zfkCGFjFrTtfOK48q/dXiJRTE7kN2wsrQwnbCyggoaN0aW3K29z
V1w9tzn9MvUifbToXwHCRnUyt8Bho/K+XlH3a7QeOdA3xzNmhI02PsLG/qPv
l//Q3Dum/H1DzhA2Zkp9gbGfNyN5DBtLLsMJGwuogGGjvnK7rHzaq3V+/oW0
+q6xL/v6ZHHKd9ioLQAubNioxoxF3q/ReuRAHxzP2BA22hA2mvT98h+OZ8eU
p2/IJcLGjGghTL9vRvIVNpZihhM2FlABw8atr16xf5nfFarupNo3Fk7Tz7Yo
qxg/ZvFTNYLXJGPR2rmmMxPrtjw3Vq0pkemT1zkuvnXNKvUokIqBU++/8fVd
kmBtlbxVvvvZauaN9KsqZ77wbuNS17DRsqVw6tiRZzbZz6lJJWnEgNvket26
+kl5F9xk2pavEe4npn7AQa8dtr4mmQB1x9rkdy4WZaC/RFrEopuqte3BzZKD
4b/ad+xX2ivrlrNl1jbTsnGctZpLO2qW2dI2b21tgI3W3FqP1JbOlkNhRkXm
iAqY9SAbbdNI9dYb98goV3Iiq9c6a51bobIezpXmfvlOdupr1XsUmT7pkXW1
0q5Vo/294JC2joQoY/bNk5O593Dym03JcZz1ELrkmCuU3HXerdXWUZF56/wV
HmuxSX9z1d9NX488w8Z0pd2215yeFYJjMoy2SN/NRha6O/AIG/es/8UtLvvk
hGjD41rbMiqybLNnK6SwHIGU+omXHS1n3aanq+ebm021Rgi/0FbFkgW1xp7m
MOXfRY66Of1CLDXOvJl5KB4tQ9qOKe1dSP8N4S4qe7Um6H33OgQtj8VMnIwc
lSi3urx2w7KRkTInU4vkml2B6q+d5bA/U0vucpl+2qK0fZmVuV9IVvDntzRZ
wkb95BFz4UxJv/m2NWeSX75kvZYtdVvSZLh6pak/KqOIzpYXx3qehZe9Ptr1
XMXchI1Z7MH7ssKFjUZ7G/pZihqVlI+7a7ZyWoHRYI4a+fJO7XosR40kq3lM
0O+MmbS50/ji6NJbv7F/5S2vKTVL2rl0UerzpnDPNNgW1lNlik1vcFJb01f8
5IzzBTupyo96zqiYojVN+lkkFQOvXKUmINmgzTHtbN+4doE+fig7NrJqr3sW
qZXCe7ZR2jn7KmtwV37Rio2WxjZ9Ir2IH4ca7ZV1urlt16pTI+JkJORXXKdU
6LfG9D16dGYa/0dumLvTZ6cpbGrUlJSPu2+p8j16yTHt4GS5O3I96jae3Vnz
05nP1p2gXAqV/XCuZkEwPmrRGilYslN2vHnzgcbH9AMU/DxyTF9HgpYxLZ2p
HjPVCOtDFFsxy7Tk2CtUrNnRdfp8lmUUm0+dN1dwSLHveuQaNvos7aYnNtZX
AIwbIdiFTF4BMuACrTyE4R42ivdbCNeG/6PJXMXSvuMQXfnAyEH6owC9rFpy
TNq4+ooK+ZapRdrIQFFZku/CSeXjjIKqlB/buTlBy79Yzrq5VMo3zxteMUUL
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
dr1+oWX3nsh07e3LdPzUEd9p1iusuE02XnMQrOMKU3JkuQ4bbd8TsB45i0G4
0q71+8bvShueGD59bvNudVZIX4CUhRWqCc+wsWXz1DtFbypl3oa7U7LR37nA
Kep+F8rmtLt2OAqw2wpGj18PP57PaTenfDJE55uOr97T+1amuwuu35Cli8qw
1mQeNua1mLknQ5ajEpWjsNFPyfFKj+/wzTX9AfuyoL8bIGx0WSMq5Jrhpv0Z
FKMic1b5Dx4z66MTBQ0bM+vB+7ICHsBhLGkIHr/r/alLG6U98An1GFZh3pBf
qy+2nd6zFDb6G9UUOGwMMvRySLNWRFvXpN6slg/mRFIr/22vTjue6xrvFwjT
pt+LDGYb1Y3gzCcyBFykWpCw0W+yU4yNGRXup7rYpasjwcNGlzZZuzv2Gx22
5MgKEzb6rUceYWOw0q4vRVb/lbR58rCZ6/YkJOt+EVlZoZoIcm5jFttwd+qX
+BrKqnt+mvfbdxZgrxVobr+eediYi25O/WRuRkFpe0/XW+nrLrh+Q7YuKrNa
k7WwMT/FzD0ZshyVqOyHjb5Ljld6shg2+uvL8hA2+mn9vIeX5i1iUiJXV2/y
eUZPJn10ogjDxoxGwn1EAcNG01Jhv9td6vSQ0+VxnHOfkMBho8LW/Y0RbZgm
DBtFVdVl/af7Ljex5men3ViYdxvDJdJFmtbb2kebdtOyPC5zPtc1JqyFz9NC
7W0i2BLHduFFHzYGSLaJJXgMtBuGex3xnWajKRC/VC7YfkH5opAlR5a3sFEp
EgHrkeuLKsFLu/pcV2mRTLs+mmY0pOysUE0ECRuz2Ia705aEuW7C37xw0iPb
E/qWGrYNLgQFWN/zx0erkul4PqfdnDZsc91faOvKSU9ldgS2R+/puSVO+rvg
9g3Zu6hMak3WFqnmp5h5JCORsxKV5bAxSMkR8t+Sp0l/wL7M7Ymo+XczXKTq
Z6sWP8NLa/Dod/uXTProRHGEjaF68L6skGGjaWdmn7uDtu1YevdTUeXpn1fd
1G53+n5K+NBs2cg/Wb9TPy4h/Sb5xs6Z7hsuCUbL9v27lP+8YenohVpKChU2
Bkqki7Stt9FH/7v5pdOHP6EVBuOh63PrHxjqGDt5D6u0O+urfXO2HlorYc/w
Ig8b/Se7q26JY4sz/diyNJnmr44ECHU9YyKPvR1ClpxE7sNGbU2LFrAEq0ce
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
r24Vxnrmb/a+fCXHRBXZaANNkaAeNtqbCP2nhUXaWi98t4TawZ3OeUw9V23j
Ad6mBAAY8yyOnWS0bsWV3n14bGWg9UH2J64peu8p/K8ZX5G4y7Z8VL1G0ayH
Malh/NcshI1KhggT5tyVJVu553qDtOGxPpwO/otBw0bXQaPj8n2XQH2w504Z
WAbK/KCXkKWbpV61M/YUFb+gBTgA4TX6L0ja1ai3xha6pt44HumMTUTcBqtu
BU9YScUf1kfI7rQarV2I4+fEs4QhdndxqReCy9fubMX4sWvrTF+/1d/rewnX
QCxwcQq3iY2fRarW31ZLl61SCK8is8xxj4yMjtLf5bs8T1ATo8Xgpv/qEZTp
rYe5f3Gdhvam55Vbn6XfaMdMNFtyAUA/p+8x6HynRumqfI0HPHpP70kcUe+Z
BfpD4HSxjGD6xsQ51M88bFQHZsIHts7IJVu553+0H/wXcxc2+i2B6jgn/WAm
WOYHvYTs3Cyvc9idxS9oAfbDuoNHhmGjPvtveSolXHvsJodho3JTfBVd1yhA
/bkMwkavDHeJDownYx77PnlwCRsDF6c8h422OyW+iowyx2tCzVnBPS5fT5uw
dIlicK+f1loP8w+5P0/wF9a59lmuZ3oSNgJAv+bykoVC6ZV8DTjde099bYx4
XKHHd9ld9+I3bNTfZxH3g3ri9Q4087DRa2zgiFyylnu+x2MhfjF3YaPfEqhe
Xfo5tUCZH/QSsnOzPPcqcRS/wAXYk7LLx0nl41I7Pb6fldlG03tVxlRRMgQb
KVh77CKHYaNyH/09s3J791C8eNVXPOUjw90u3/QOmiIyfdLKzb7jI3ExC16c
ijFszChzgjURHpefpg8yXqXUu4ygrZPr6mWfqwsIGwEA/qXbNEPtlfyMqXyE
jeLBv97vF2a2Ue+7XfpZrWPN4mxjuLAx09wLHjb6/8Vch43+ry5tgJmfsDGj
mxUybPRbgN2ou02ajznIziLV1Jfblj7KS0MDrJvNedjoc5itvQNu2ZlEa0Xt
LwOmi6f8ZrhnoTXvl6K05G4nX9ilCRt9F6fiDBtTwmVO9sNGl/quTez6m20M
Fjb6e9hL2AgA8Mv1lUadtiTJ/QMLJz2yPfV/ufeexutpone1XHfSyJDfsNF4
E0SwBURCsElL1sJG4cDM4+W+DHPP93gsxC/mepFq+hKor/hy25cj1vzstBuT
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
Fw5ntrG0ETYCAAAABSPvgjIg2GY4RUTdtdJrG1V5H5KKKatL9AKhImwEAAAA
8kfZLVPZzKczyImHxcjY5rdi/JjFts1h2na9dvuymZUDLvC/Uy6Klce5jQAA
AACyzLpbo/O4gRJjOdbHQT+BESVNeMYEAAAAgBzRDwf0c5JpiWhd8+x900zH
UggnH1GKhOfLcBYhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAABAeGeeeeY999wTj8fNf9y0adPRRx992mmn
NTU1FSphAAAAAIBicMYZZxx33HFtbW3mPyYDyS984Qvjx49vb28vVMKA/um6
66675pprnE9sFi5c+OKLLxYkSQAAAOjnqqur991333Xr1ul/qa+vP+200778
5S8//PDDvb29BUwb0A8deeSRn/vc55544gnb37/+9a8vWLCgIEkCAABAP/fM
M8+UlZVNmzZN/8s777xTUVGRHKNu27atcOkC+qnrr78+WSXPPPPMjo4O/Y+7
d+/+yle+8vHHHxcwYQAAAOi3du7cedhhhw0aNOjNN99U/nLppZd+7nOfmz17
NlONQP59+OGHxx577H/+538+++yzyl96enquu+66k08+Ofl/FDZtAAAA6J+S
seGMGTP23XffSZMmdXd3v/vuu1/96leHDx9eX19f6KQB/VGySi5atChZJU85
5ZRklUz+pba2dujQodXV1YVOGgAAAPqvDRs27LfffoMGDWpoaLj55pvLy8uv
uOIK5jWAQvnss88OOOCAz3/+8x999FHy/3344YeTUeSKFSsKnS4AAAD0X7FY
bMSIEfvss8/8+fN/+MMf/vd///crr7xS6EQB/dr5559fVlZ29913S5J05pln
Jv/vDz74oNCJAgAAQL927733JselRx555AEHHHDiiSdyXCNQWE8++eSXvvSl
U0455a233tpvv/0OPfRQ8w45AAAAQP698847hx9+eFnKTTfdVOjkAP3dtm3b
TjjhhIqKinPPPfcLX/jC5MmTJUkqdKIAAADQr0Wj0QsuuCAZM37pS19iLRxQ
cPF4fNq0afvss0+yVn71q1/Vd1UFAAAACqW3t/emm24qLy8/7bTT2traCp0c
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
8FD80x25/XUAAIA+ree9WjVsHHlq/KOthU5Oej0b32s+94L61DtN9UO/0X7P
vVJnp/5fCRuBvOrtje/a1X7XH5MR4t6DBysvIDccflTzj8/quH9BbNNmqTWa
13Mb41J8V137bXfXDza9+XhYZfOPT+9+dY3UnmYrZgAAAAh1r/mbGjaedk58
R2k8kI83N7deMkk+mEPeT+OI9jvu0Ve7ETYCedPb3Nz15IqmEScbM4yDq1qm
/r775dXmHWnyGjZqet58q236tfIGO8ZrlZWtEyfHtn2Sz2QAAAD0DV0vrFLD
xnPGyptRlIh43e7Wy6fXHzJE2T6x+29/V/5O2AjkQzwe2/qvlosn1h85zNgQ
dejRHYuXOGf0ChI2JlIvbnf95W8tv56o7MOszIQ2n3Wu3Fyk3XUHAAAAJp01
K5QBVcu54+J76wudnAB6Y7HW6TPkffuTQ8Hzxvd2dCQIG4HcS4ZjHQsXN3xz
hPH+4NBjWqdf01Mrfjm6UGGjqrc32co1/eRs85Roz1tvFyYxAAAApanzieXK
UKp13K97rdvLFL9knBv9/Yy9hwxpHFzV+fhyKRYjbARyKr77s+iMG+q1rW/2
HjxEPkr12RekaJvbPylw2JhQD+xomTS1/rBK9SnZ+b80vxMNAAAAbx1/WqSG
jb+6NNFeguMoSep65rnGY75df8jQtutmTjj9TMJGICd6e7ueXdkw/ER5ejHZ
aBw1PPr7Gd1r/pbo6fH+d4UPGxXxeKz2/egVv6+vGi4vUTjjZ93PvdCbLvEA
AABI6nz8SSVsbD5vXLy+odDJCanzsSeUvVX/+n8POqi83AgbY7HY/27senVN
r+OERwD+SW1tnY88pu5Ddcjg6NRp/nfQKpawURPb/EHDMd9W2r3oZVOk3bsL
nSIAAIBiV7rvNppJe/Y0nXqWMgky54D/+so++yhho7R9e/OPT6//+vDOZTVs
ggGEI3V0tN8zp/7r35TbikFV0T/cHG9o9P/Piy1sTGq77U71rcxDj4z+9vLe
Ng7mAAAA8NK9eo0aNp51rrS7hBd29mx8r/EE+SCA3f8z6Pqv/J+GVNjY89b/
KpsoNn7j+J5X1/TGYoVOJlBi4nW7W674vdJKNB45rPOpZxMB61ERho1SU3Pj
qWfu1TbJiU6aXNKtHwAAQK51v75OHRCeelb8008LnZyMdC6raRp6TPJatn3t
8I7Vf4nH493btjX96Az1VaxjT+x8dJmknfAIIK34nr0tv7q04dAjlVaibfq1
5gMZfSrCsDEptvG95jPOqdfmHOVLY5McAAAAFz2bt6ib0p88Krb5g0InJzOx
2Pr/d/nu/xmUvJyPvnHsmG+dcPrpp3+0+tWWX/xKefNx78FDWidO7vl4W6ET
ChQ9Sep5+52m087Rj2VsOv0cqT7MOvbiDBuT4p991nLWuUrjIAfFV80o3fe7
AQAAcipeX6+GjSd8L/a/GwudnExd+ZvfPP5/KpKX8+8DB93z1f/6zy9/+bHH
Hot/uqP5x2dqo98jWs69oCd5pbzqCLjr/ufbTaf8eK/yvCX17nPM5VjGtIo2
bEzqebe2+VS1cWg4oqr91jsTLEgAAABwkDo764d+I3Vg97Duv75W6ORkauLE
iUeUf+Ev//egenlh6qArhhz5+uuvJ/8ee+/9xhEn668y1R95TMf9C3ubWwqd
XqDoSF1dnY8vb/jG8WowdeiRLZdd3tvSGvoLizlsTIpt+6Tpx2fojUPbrDsS
7mdQAgAA9E9Sd3djZJSyCK3rqWcLnZxMJcPGfcrKIgP+45OD5RHgtsio9rrU
7vqS1P3G+ubRpzVog8OGI6paf/u72LbthU4yUEy6uzv+tLBx2LfUByyHDI3O
uCH+739n8pVFHjYmda9b3/S9H+jPlDofXsJqBAAAALPeWKzlgouU8VL7XbML
nZxMJcPGspTtjy1r+fXEjvsXmpecSfUNbdV/qD9ymB481h97Yudjj8cbmwqY
ZqBISM0trRMn7z14iFpBvnF8x58WhdgDx6b4w8akWO2mxu+M1IPl2HshV+QC
AAD0Sb3xePTq65XBUuuUaYVOTqb0sPGzzz7r7epyThlIrdGOxUv0w77l/xl6
dHTCb3verS1IgoHi0bn4kb0HafXi6GM7n3lWysbmoiURNiZ1Pf9io9YyRKtv
ZMIRAADArLNmhXK4YdOxJ2Y+s1BY5rDR42NSfUPnspqW8y9sHFylzS8c2ZoM
Ht9Y18uGGOhvJCm+5cPotTc0HCFXh+bvjOy4735JWd2dDaUSNibFP/ioefwl
9YcMSWZFx4MP93ZwJAcAAICqZ+N7jSdG5NDpoMHxd98rdHIy4jNsVEmStH17
dNo1+hTD3oOHNJ16VvfLrwY90BwoUVJHR+f98xtSz0/qDx3adsNNUkNjdn+i
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
5dwL4tt3FFXMmCjNsLE3Ho9ecZVy7kbjCSfHPt5W6BQBAAAUHam5ueWiCcpm
qsWz1M2PPIeNvd3dXTVPNQw9Wl6qeuiRXU8sz8OPAopk8ev+69+af3SGvDD1
yGEdDz7c29Rc6EQJlGLY2Pn4k/WHDpVjxm+f3L1qNXteAQAACHU//2L9QYPr
q4b3vPd+odMSQJ7DRllvb+eihxuGVMkjzO+Piu/Zm6ffRT/X29tx5x8bBlcp
k93td/6x2CYZdSUWNvb2dq/7h3LwZeM3R/S8sb7QCQIAACheUnNz/dBj9h48
pPPRZUU7HHUqQNiYSMQbG1suuzx1GMfgtrv+2Ms7UMixZPXs+NNCJWasT0Y3
x3w7Xre70IlyVUphoyR1r3ql6aQfKrnaubSmtJZbAAAA5F/rpCnyDhs/HycV
wdFvPhUkbEyKb/ukYbh8aknDEVU969hxETkU37O35dcTGw6rVLdjOu7ErhdX
FTpRXkombOyJda9anYwW5Vw9rLJj2ZOJOGtTAQAA0uha+ZL8ds+hR/b88+1C
p8WvQoWNSZ3LnmxInbTefNa5cY5xRG7E63a3XHa5evJL8n8qh8sxY3HPiJVE
2Ci1tXf+aVHjMSco2+D8/+zdCXgTZf7AccAqKoq7uuhWkUNOa0HAExSpgriL
ByvICijI6goKirIIoogFT8SVVS5ZQEBA+Is3ioCg4CKC4IVyeoFAC7RNjyQ9
0mTS/yQzmUySmWTSJs0k/X4enn3cdjrzzjvv+877m3nnfUtGPFiVPI/LAAAA
Esh19FjhlT08PahRY6rKk2OO0ASGjUJpefHf/u5dOK+19b6HhCTJMSQRd6XT
+tC4/GZt5LU2et9YsXqN+ceQmz9sdB06ZHvsyYJmbaWMLex0pfPHPYlOFAAA
QHIQBKF46L2elxqdu1Zs2uw2fe+0KqFho6hs/iLpVUVB83blS94w+TsgJBmX
q+Kd9/Obt/M+mmhT1Osm58+/JsVigmYOGwWHo/K7nUU39c/3xoxi/S287q8V
a9czdSoAAIBxpXPnS4/fS+78R1K8cExs2CgcPlLoWx/cctlVFZv+Z/43QUgW
zj17LddcL78Ou7Z35fc7E50io0wbNrqtVvuM2fJXyWLM2KJd8R3DnHv3JTpd
AAAAScb57fcFLdp75whtV7F6nfmDoMSGjVWCUL50hUXKsaati/7S1+TrcVTv
DbLL5crJybHZbOoflpSU/P7774WFhTFKGgIJgv3xbGl4an7zNhXvrUqK94wS
M4aNglD57c6Se+6Tvkf2/GubWfrcNNfRY+Zv5QAAAEJZrdZPPvnkyJEjCTm6
YLeX3DFM6laJQZDztwMJSYZxCQ4bqzzdUdu/xkkzloj/bOMed1ttkf8qQb79
9ttNmzaVR/keWYwNL7zwwrFjx5aVlUk/Ef9j2LBhYrZPmzYtDslElev3Q9Lw
VM+r/7tHJDo50TFh2Oj4bJMl8xI5YBQbt559Kt79gIGpAAAgGVVUVKxatapP
nz4dO3bcunVrwpKx8fNC7/Jw+c3aWidNESoqEpUSIxIfNlZVOX/5taTfQHnY
W7tO5ctWmHYlx4ULFzZr1mzAgAHbtm2z2+0G/0oQhH/+859nn3325s2bq7yv
LN9///0mTZpcccUVP//8czzTaxZioF1QUCDUYpRROmuuPDz1yh6OL5NshRdT
hY1CeXnl1q+kyb48nyG372gdNdq5/2fzvL09evRoaWlpVH/y1ltv9ejR4557
7jl+/LjywwMHDtx4443z58+PdQIBAIApOByO/fv3L1q06Nprr23QoIHY3Trr
rLMmTpy4MHEW9+3347ktpYk4jo+d8NGixQlMTHhZWVlS2Pif//wngclY8PzU
D1q2PX5eK0/XtF3HQ8++sGLhogSmR8/dd9+dlpYmZtdJJ52UmZk5cuTI5cuX
HzlyJGJA9P3334tx4oUXXrh169aPP/74vPPOu+SSS3buTJqv7arB6XTm5+e/
++67Y8eOFU9WjLWVl61xJAjOn38pe2V2QfvOBee3Kep2reOLL5NuFKVJwkah
uKR8xcqiG/tZWmYUNG9bdFP/0ukzXGYKGCU333xzx44dR48e/X//938lJSVG
/qS4uPif//znCSecMGTIkLy8PPEn4k1EvIOcc845YlWNc3oBAEACWCwWsVMq
9eRNJavhKQfPu0B6Pv9hk6bnnmC6FJpN4wYNXvnj2dLEqrnntRrf+MxkybKz
zjrrq68ivM9yu91i1Nm4ceOmTZuedtppbdq0+eGHH2qnjtQ+h8Oxbds2sVv+
xz/+UcklMcqePn36zHiaO3Pm/udfsLS+SFqi8cNW7V9+ZHxcjxgnJ510kphj
F154YWKTsWvI3flNW0nfHS+4vNuMGTMSmx497du3V4rZpZdeanAYeVFR0eDB
g8V7xz333HPgwAExZhQr5qJFi5JiBmwAABAtsYO6b9++Rx99tFmzZtKrRtEJ
J5wg9lebJNQ5TZr8u0XrPN8c9S//8ezzzjgjsUnSdMoppyixT6LT0qTzOX/e
3+pCKdb++dyWV5xuuhw7/fTT69evr/RRxdzr0qXLsmXLrFZrxLIqbtO9e3fx
r8Se6qRJkyorK2uhgtQ+m8127733Nm/eXJ1RtUCs/Ledevo+71t+8d+X5zRL
51lNzcw785y8pq1/ObflxDPOaly/QaKTY9R55503dOjQX3/9NXxBFcPDrVu3
Nm3a9IwzzrjrrrvEWtm3b1/jI88BAECSOnz4cL9+/aTIUQwhE/hto8JdXGwb
+5g82UuL9tZJU0y4JIcZvm1Uq3h/VcGFXeTF2f8+xG2P7pOleFu4cKH0Jujk
k0/Oysp64403guZHDWP//v3t27c/4YQTxFI6YMCAVJ1Dtbi4+JFHHmnXrl0t
h41dG57yy7ny+/0D517Q9aRTavPoKal12kkTGp/54Ol/yD7jrFGn/eGMBskR
OXbo0OHJJ5/MyckxUlyff/556a/S09O/+eabeNcOAABgBsePH58wYcL5559/
wQUXmCFsFAlHj5Xc2E8aeGlpnVk2d4HZZsgxW9goWG3WcROlWLugVWbl198m
OkUBpIGmnTt3XrZsmdgvNT6ezel0jh079tRTT7399tvF8in+x4oVK1J1OJzD
4dizZ8+YMWPOO+88MUyWCtiVV165Zs2aT+Nj/cq3vu16jTLPZ95D/9q4fn2c
jlULGjZsKObYZZddluiEeGy9uX9e01ZHzrtgXcu2H48YueH9Dz7dsCHRiQpw
6aWXSmUsLS3tlltu2bdvn8FX+WIFFKuh+If169dv167dTz/9FO+qAQAAzOPw
4cMzZ87cv39/ohMic+7bX6REjm0zS//9stvpTHSi/MwWNopcObmFV/WU+v/2
519MdHICfP7552+99VY1RrKJXdlGjRp16tTp6NGjixYtEvu3rVu3/u233+KR
SPP4/fffx40bJ715vOmmm+I3JU7l199arvCHjQWtMh0bPovTsWqBSabEkZT8
Y7iSsZ4xADffVr7iTZeBUdm1pnfv3mJ2dezYcdKkScbf/ld5y2dmZuaZZ57Z
uXNncQ8jRoxwmqlxBgAA8SYIgss8c/0JguOb7wqv6CFHju06VH65LdFp8jNh
2CgqX7KsoEV7z4p7N/WvMlNHrtrlaubMmWKoKAaM4n/n5+f36tXrxBNP/Ne/
/hXtwgFJx+Fw7N69WzzTe+65J35ho2ApLB56b36ztvlKdPPXvwm2ZP1OzVRh
Y/lb7xZkdslXRY6Wth1K7r2vcvsO8eomOnUe//jHPyZOnGj8JaOkvLz8scce
O+WUU8Q2cP369WLw2KRJk7Vr18YvnQAAABFVbv/acs31cof21tvN06E1Z9jo
slhK/nlfvreD6vj8i0Qnp6YqKip69uzZv39/5XvGDRs2nHPOOWedddZHH32U
2LTVGjFmjOugXLFOlS1cUtR/kBTgFDRtbRszznU8L35HjB9ThY2eyH/j/2wP
jyto11H92jG/eTvbuMcrt25P+IOdimqN/P/kk0/OOOOMCy+88OeffxZPcfLk
ySeddFJWVpbBJTwAAADiwums3PS/wi5dxd5sQfN29qenukpMMcrLnGGjyPHF
l5Z2HTyd/7EThDLTTSUUlcOHD7dv337Tpk1K3FReXv7II4+cfvrp999/f2LT
llIEQTicY3/yKbHkeCLHlhnWhx9xm+xrYiPMFTZ6ucvKK1avLbptsBgt+iPH
89tYLrvK/uw0MduTa3HMoqKiXr16NWjQYPr06dJPfvnllw4dOpx44okm+S4e
AADUZZXffFd03Y1iKJTfrI11xANCbuIjNdOGjSIxYPT0Ti+4qHIHMxzCKMHh
KF/4ekFzee0be/bT7uLiRCcqOiYMGyVuQSh/+73ifgPFFkz95rGw0xUVa9aJ
UXuiE2iIy+USo8VTTjnl+uuvLygoUH6+cuVKMecnTpyYwLQBAAB4uFyV331v
6Xip51VIsza2+0a7cnITmyIzh42OL7dZWmeKeWV7eHyVeT5WhekJ5eXFA4dY
lHmoXny5KkkiGolpw0YPQXAdySmdPsNySTd5dSHpX5dujg8/Fsy3xlAoMbz9
8ccfP/7443379qkHTpeVlX366ae7d+9OYNoAAAAUlZu/LOzao8D7+ZXliu6l
s+YK+QWR/yw+zBw2uisrS+78h6dHmtGlYtXq5BoFh8Ry/Xaw6K83F/jiGtuD
/3Lt3ZfoRBll6rDRx223Oz7fXPrCS8V/udnSsr00ZrWoey/7cy86d+/lOQ8A
AEDNCfn5tkcmFPi+EhL7Wo5t2xOSEjOHjaLy5SvlLLqlv1CUZEMNkViCxWJ7
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
okL6bUlJyWWXXaZEncXFxaH7lyZGbtCgwRNPPMEXxwAAADBCDAall4Z9+/YN
HREnCMKjjz4qRo5/+MMf/v73vz/mdfvttzdt2rRVq1b33HPP2WefrRk2Op3O
7OxsaWFHcfvQD6wAaCotLZU+Charz4IFC4J+qw4bH3nkkZYtW55yyikdO3Yc
NGjQ8OHDu3TpUr9+/RNOOOHWW2/dvXt36M4LCwubNWsm/u2f//znL774olZO
CAAAAKlAWl1RjAS3bNkS+lsxAJw4ceI555wjTekv9lHFbufYsWMPHTqUm5s7
dOjQyy+/fMeOHUF/dezYsauuukpaR2Dt2rW1ch5AKhAE4cUXXxQrjlh9rr32
2qDfikHlE0880blz5759+zocjsOHDz/wwANi5T355JPF7U877bRLL710yZIl
ZWVlmjv/6quvpC1vuOEGXjUCAADAuNdff12K71599VXNDcQu6GeffTZjxoxn
nnlmwYIF33//vdizDb/Pr7/++vTTTxd3265du99++y0OqQZS1pYtW6R3gmIY
mJ+fH37jyspKsbrNnTtXrJ5iwBh++5UrV0pvKv/973/HNMkAAABIcV999ZX0
leItt9wSq9Gk06ZNk5beGDVqVHl5eUz2CdQRxcXF0heIaWlpK1asiOGen3rq
KXG355xzzp49e2K4WwAAAKS8vLy8zMxMsTPZqFGj48eP13yHZWVlV155pbjD
P/7xjx999FHNdwjUNUuXLlXmOy0tLY3VbgcMGCDuc+DAgaEfMgMAAABhCILw
8MMPS33UuXPn1vyF4+effy5NldOtW7eSkpKYJBKoUwoLC5s3by5WorZt2377
7bcx2afL5crIyDjjjDNWrFjBLFUAAACI1u7du6Vxqr169crLy6vJrsrLy8eM
GSNN6PHGG2/EKoVAnSKGeJMmTWrQoIFYlaZNmxaTfYrhZ6NGjbp166a5MAcA
AAAQnthHveOOO9LS0s4888x169bVZFcHDx5s3759/fr1e/TokZOTE6sUAnXN
d999d/HFF9erVy8jI6Pme5PWxGnYsOHSpUtrvjcAAADUTfv37586deqUKVP2
7t1bk/3k5+c/++yzkydP3rJlS8QJVwHoEQO9tWvXPvHEEzF521hZWblq1aoX
X3zRbrfXfG8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
GbFaxTvzw5HXsrn65ak9J32pzOcjZVfauBWrx9zqvxGEeeKkITSjorxGcjmP
fpJb3fys0gkbpUww8nFxmAXWqx02Bs6CkrCwUfmTKO4mYWmO6fpl/bAuAeXH
cMsQ67DRt33k+5Hx4qF8/qM32ZeOqHsveicVhcBpYQw+UTR2rJiFjUqbICXP
8IUIdwq10W9JId7O/x0Gn9LHg+qls77oJsapXtio+1ZRZ/BquDtgPMPGwP0o
I3K1d+v/mEvaVbjSHq4bKQ+OVT1WEjbMv/RMw+G8znH9317JrWqTMfMj93B8
bz8jPt+OMnOqaiVsDN2+emFjxNyTd2ug7sSi3CqZqX0WylCioDyJvvmVimLQ
uFD/V/NGHjEZrwVKsrUbE/83MupdJX/YKM014ZnlwDOV5W6NTrWRmhtxGynN
hlZZUn0nKMka7/u+OIxqXb5Eh421lPlhyA1sVsbw+apaJt0HMzOGD++54oBy
MtGMUK3SyqjorpHvAVcUc/dFzs9wryANtCfRtfYRk+uZ4co7H8vrT39x8EiC
3zYqf2L8bhKexndzwuHsLl3eDHj+HEXLENuwUX8YbTDDxaNKPTeCpLfvG/Nw
ou+96J2UEfLUXtL0oTmHjRUwwz0xdYJrHDYGFc4oLkSYVMW935I6nOovFBLE
832c1sxaXv5vRqJZwLGaYaPyTDtwBIUcMYXep8wVNuq0575EyhlY3bAx5FW+
f5FNQ8I9O1JN9eNrVFeE7RCGG7yheUYGM6cqycJGb7L0c8+328h1J6Zho/bh
lEPU8Kmd/BpFo7OtRI6Rd1WNsFHnruR7IJw6bxvlOejU0+/rTRhipOaG3UZO
s+E7vnpSKW9RUy1So6laly+BYWNtZr4+7VGjvrcbgV9pyfcFwy+hwoSNhq5R
2BGtoWdiMD/D/TByoBSzsNE7x2bXhqpFmhI+SDU4bIzBUtrBsUbIZDhVUbUM
8QkbI5+m4eIhU0/n4qVeEk5L9L0XvZOKQJ6iVr34lMECZrgn5j2fuIaN1X2g
UUv9lpQhzaX8uNbssrUnaN2NEMq45Wgmxqlu2Oh/pq3UaHnKO81ZfMOEjVrN
XYzDRrlZ8H9xoP18zJdI+bc6TY204/CD1lTToAmecf4topmqKGItC+rhhH+Y
rCz3E+GZc5SZU1WrYWNosalO2CgnTiv3lOe6OjPtVDmLV4172nOasSi3/q9R
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
hNxcIvFF6cFfXRv9auc201foihG5vuu7n7wyKUdAhLONzIjF5KMtAdeyDr4k
bLIyjFbOVtfN7rkaW6fqNNksFFEMnwSrSLWueX0JujSiJ03NZJqeyqD/6WXI
0R+LazXym11cL5d2TPXExBcbYsABCDHOF3H4vKI2Jdi8sJHrdjTKZM3ZxT5E
yiBXVNjIR8awFjmrEEdNpLBsYSP/SehjZDZHyfNgJj8qZ9gYm+iOT1aoBWt0
2JipQeNjdzQcG7tn/rDRqZWbFjZKPwmtViGJfyNJxs+IZcZiiLwbr27cQ1h2
SUPNapI1bGQdxGQtM3odwapo1pgxsV+wZ/iWOes5NbpiiK1cTpmUgp/aorC4
L5pt8E0hWVbx0crd6mYLG6nG1khmz79Ys1BEMXwSrCLRuub2JcjSYPpsCkKT
wkaC/jelPxbXajJFuV5O7Uj3xBpgwAFg8G1+Zr0VmUVVo7EMYWP0ZKap15ro
R6RjTUWFjVotclZBIsiREuT2eWn/1Y9ml3m1kf8kFIVx1poC35piLrNInGjL
rmmtlGWTqu6x2PZTNT5szNOg8TEuqXvmDxudWnk5wsbwSTdn20bCum02jL1p
afZMZeOruSLTMGfC5lJ/kP3yg3yrjXSbRixc1piR0i/Ew8y3NO3983FRDG/2
xWdEHsiOIHnjRZKzGl9VUf4uOk7GwddaYoqs4i3rbnXd7J6rsTVShOdfgFlo
QthItK65fQmqNGxjX0DSZvh0/W9Sfyw2bCzY9XJqR1dPDGEjaAjidJhZb5n6
Lf9qI3syo9l3OknR2LAx38gVZNna1CkliF72Taq6sco6lnEHxjJossn53KuN
3MPUjiqEx/bjMUJDw8bcDbo8YSOxlZcvbMw+fSHD1rBI000kol4jy//OyF9v
fDX7wcko0aKcgz3nJtVCvY7w9KV+9DsVcr8QH5KWJIyfc1YMObNZ+Fr5ch9r
ySOdUcrAjrpLipRx8DV9kSyrhLCRbHVd7Z6bsTVSXNiYyyw0LWxMta65fQmq
NNzDRrL+N6s/FtVqjXC9nNoRYSNoCcTOarNfZEnusXybVO0bxqp3Xt+93zor
y60fZZwqPGwMn89ZhZpItq+cDW+dsJEdhLHN9tdunx88Z98kzI91WNoonvsl
c9goZi+1JOHG1OWNCxuLaFCrg2T0PYrapEps5eXbpGpPlFS7c2Lw5X+llMab
2b/t/s2+o1LM2mVQXsUm1JmZGPpu9oOTUUoczaQUFDaaau3mdUQxI+V2AxmX
fhER3Fmw663p96NctYaUOBkVQ3VWKRMIUUpnnmqD3fSkyiHj4KvjJKv4aOVu
dd3tnouxNVLcJtVcZqFpm1RTrauX15egSoOPfabgzrYqR9P/ZvXHQlqtQa6X
k0/oHjbmN+AAxBGnkhOOPMcGlGUIG6VB1njXtndjdOuJBAOS8vPa0szxvcei
LlZU2Mh2IDBTk7MKzMxq/b11wkZxnN+4Ia3uhG8dmUoIVpL9KMNZmBxhoz8Q
XPt+5b88yi9AtF+U3LCwsZAGtZ5tNI4aRabEIbTycoSNwqbFb02t+ZPhL/ft
oGRS9c8bbh+emQkcuULWLgOiioRqnHN7KvM6LNFB3rONplq7eB3+zaGlzcOO
MaNjvwgKtTjR19V1KFjd4IccY54YXTHm9vccUS2VuGqQeB/riz+vDDzJbyc0
HsjKNvhquMkqISUO2epmsXt0Y2ukCM+/ALPQhLCRal3z+hJkafAPJWT7jFfE
Uf8b2h8LnHMo3vVyaccMnlhOAw6AET7I2hMsxye+soaNMctjXaM36LaSd0vZ
2e6f69m3YW3y8Cr/vG7EotumIiHMXd2+4Ydvs7JZdrSGN95axlB7JlUpg3q+
KlgOm1tS1bnuALE+79BGSlqwyp7B8/zCjrrbMLyv++spFl5sM7Mmjlam+7KH
jb5DG7sby0ajwsZMDUrPpNphuK1DnP+iLZ8ZL+BwaGXXfcv25236mVT9QAJD
L4xMsuHYm5w43futtZR7Luann9tUD+i8+PHGhStjN1N3RtmR2tGbGd6YZ3uq
zVIxO5M3k2pHPL0MHy9SDYstZpQn6My49Yta7OIz6yFHsmLMDX+nHFOSyHVM
dVP9tK7b9IvYjGQafFUcZWUarVytrrPdczK2Rux7+ZpqFgopRi15Mo1qXXO6
Q3RpiA9p9z6IW4BVc03X/+b0xwJarYGul0M7ZlpkyW7AAbCTMsgaVs8t1+El
wLZehDrs3by49RdBF7bciGeeEpFuQoyTNrym/Fy5Hku6Iy/aZeFva3+oe+jY
394n/SQsm+3exnBXgzaNlq8KbPMh29JfXZwcOfr9Dfff38Ws4mfzV3YPKzcL
R4GDN3t464/eTnLdrc87tRG/ldiAdS+KhBiJ9GtqA+uqiihVD233NgatQLlK
O8QiAZ6zQp8xIK/ouTQok3asskbPhN9kJw3H3uzosf++6YG/lBMLpIy5TICa
W0tvZVvHt2F93trWKdWPk5AWNaiX/+nFeuct9/5a2SQQrsV4N9/q+xkbiNkV
5+WBvmvz1BXDqMBfqbx5/UzPU4YjeOy+6VL/c6Mp63Ri7z2zVPPT5wcf6u7u
Z3epf+JNXt1+6lzVVV2lJua+qzf5j89946Et90qni2xrYUHMWIrPn/supTRB
Z8HJ0C2OHvzyGq1NhRnRlmyIiuEXILYCEgow9ZBm+AniWU73wTeXrLiPqi4s
OlldR0VyNbZG+IjsRy5ebWn+rb7eC4FKNsMsFF0M3grmvO5E65rTHaJLQ/4Q
j2t8j+iH/Ru+J580DJXKSf+b0B8LabUGul70duTHkB09sSwGHIA0+DpaZc+O
66FGhqcPTJsHxPYAe6pzHSk7umQQ6h1q72bTLgXmOMWWS5ifpncu475TQzHM
P49XM27N/Jr+B3PS5GnAUFA+pf5Dw9dk6fGjHIQykKrAb9GSf/VHUSpZXHKC
iA7COGJ53rmNxN8VyHkU+RVsZXH2PFQ5TUTShywBqbCc6tc/lyRmojzQ+8Yt
UVOhDLIEJGuvBbPMB4tPz8agN6hUF6WytnsHxE12EvV+9/5ENPRQ9onJQ486
OlNb2dzx7Viel9ta+YTUm7SDY0JvFQmYdkPx30gTv3J9o7+v7973/L4N/1Uo
och1SfPTtK9YurzIXUmZaeHXNChNcCuay/IJldBdXcXmCunlD579l3dY8ayZ
8LVG1KDMclP7BTs0J0/6hYUXBlyLvkmKEXmJ9RYfi0xQcFzLFAjH4B6mmfo7
31SE5jT45pCV6qBqEiNbXWdFcjS2FqSXB20a9ovmmIWCiyH90WY0yNY1nztE
l4Y/C6QXqF74Dy8xA1jX6leitUJH/W94fyym1RrpehHbUfJDlGFUfE71xLIb
cACIzE+9vvegULMtlSNnxJ6BiPckb0SGsOwYnZLmw0TVNJo8PDz3menvysa8
MNU862X1cp4bc0goUV2cPCYu3DFXM/jK7OjJKDrmhi4YAZV9I4yFy68/J65L
C/pjUqmyV2Hh8oWo8JIJjeyJnEoxrEKUs7rU/8xhinXVnzeO+JQ2Wpq7cuC4
mFvYM/jydVrqA6map3pF1FN/w4kLsn2TXWuBPHlrGLwkLY2STybgW+b/tErg
nw0dYeDsh8YOkrzmSGlQW11MA7RyhZasZoFT6gUzltL8hhWThLVuTmtlveOn
EX8+a/XDZOm7xarr8/uvJtc6jHf4yp1UU39YlzzqiNCbqv99eOjPv0De8xMq
iT2Cjob7Lff/dPPm0t60vcR1h//ZyPKIvffMt48a3aSWFHVVBBhpY10xvljq
Vzf5ayWSouk4xN3RlH6hfog3vUl11a3dqYoRnKXyFCskFSOFIOOidQ3FJzYb
QBl8i5QV14FJ7T2JVtfsAKQqEs3Ypi15+AdJBsI738PhuHlmobhi7H/q7wxd
w3jBCnUMzecO0aUhl4dZwurYU51/FusX7vrf2P5YK0Z5Gul61VLaMasnls2A
AwAA0Fma/dW3t140LwWGBrxr/QtF3bkAVjq3x4e66Dv2x4e+QNqzd2dkd+kh
0p19oJXwZvb3PPCW2SsLHLmhrm9T8uqsFGBsVxfQfwAAACsIfy2mvHM86YBV
dezgmoOkXKMAeOPHy98kOkJJPpX25PRgOZ4IArQ4i6NPln+SuKL68Y193asm
jSGM7SoD+g8AAGAF4Z90KH0pZUvhnZFHSfk2AVia/X82lZ8kZfzwZg8PVP6e
dMjXuzG25T79yB5ocYJzRml5g2+/vX3jKlltgbFdXUD/AQAArCii+xSSdgl6
N9/+H/chPTUgMH9rdGv3Q2OUxAL1mPGR7sdIOcQWxl/dvtGUUAu0NFFuxqTs
jv452ZTVt5UDjO3qAvoPAABgZSHSPPqpRJ9+Q3H4vcl3Tuw+cH8XMbEeWNV4
40d7fp6YjdZPUNlf+vMNY7dmr26n3WVWd7129+w55ZARBbQMImejnxVNS2uz
NHfl0Jl93Z3biDmlVwAwtqsL6D8AAICVBs/VacZ4bQoAGZDStpOz4oN2huds
NBJP0rvSgbFdXUD/AQAArDz8e1hOy9nmjfPhAOQiXG1xyhUP2h/tPibz4svq
AcZ2lQH9BwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAwKqjujg5cnxnufOpdz9f7qI44t/fPVDuKPXnvLJ2
fvroBj8zP246BgAAAAAAAACFpbkrB+oBY3iZTxuGjR+/e6ArKHuld2Ix+2uq
Y79cF7xm3S/HqsWVDgAAAAAAAADaHR4utWvYiNVGAAAAAAAAAEjm7vTQ0y4L
ZKbnWfDYhmEjAAAAAAAAAIBEvPHj9x50CBvNz7/32rZOhI0AAAAAAAAAsOJY
mn31q6UvHiKHjbbnETYCAAAAAAAAwMojOtZHzuKS8DzCRgAAAAAAAABYYbAY
kJr8M/l5hI0AAAAAAAAA0FYsXD5/8uHdm0ssxWm5a+j5/VfnWLQ3f+tMT6Uj
zsPDc8YAMvV5LWycv/XbvijGrOzZcd340uri5LEz+7qjqzs61nfve2Vk8g69
it7M2JlTvQPs96X+Qz87em3SkAx1fvr84FDX+uB+DVaRymPDU+xbC5cvnOrt
Lz1kqrtWSE2MhidL/WcnrV8PvhW9rf6qU2Mzf6LXFwAAAAAAAACKwps9vLce
MJYH+q7NBwEOD/rWbxj7SAp5Pp9/daPLVYMJz4uwserdHN/Fwqwo2HpkWI+P
5qePbizvZHGTN3njaCUo4ZaeS7OEsoQ1qkeab172b82oLn7w7MEH7gmi1MdH
Ztm3vMnrp3nsXOmdmA3uyGBh5u7ffbpw+eKRCguH4yHz0tzFb1T8+O616CtT
w1IkHjBQDxK9xckRfnNl8Bfj1+8Yfr7l5OU8l34AAAAAAAAAQBbY/fUD8rLX
7d/tWhOLUxoQNj4x9sYDPb2nJ4JVvzDs6ujQN6/6eXU6t792U4mYZt59Ym3w
bO/g9GeJxYheW4/75uU/L44eCoOyyrNji36Ud/dSjxS+fq2y99HKkZsL9Wju
ye6yH59OTYSCsoSN3szwg/Xflx8bucMLWl2c6Atq9JXKxX9nf1NurmRi175e
+e5LT2/ZsG/4WvANEVlL7wEAAAAAAACAJsHWyA5MSPfOs1hSifiKDxuVzZ/y
36UY1g/HSl+Kh0vVid4g/CqXj08nFefOyJ6yMbrkkZpSd/bajtKDZ28alvbu
/v7YOlPYGAXaenDqjZ/sKSX8XY3WpSL9+KKygXZueIBSWQAAAAAAAABoEsaI
ryGbVNWUOCxcFaucPEyzM6AdD5RhP1cWARlRRKn+bxSgVaLThbZKaWEjCwNj
NTKu29aMAXLS19kaJZIIAQAAAAAAAJabpbkrh0RSl+UKG8VPwrDLFsSlwqIz
c5lZTCdv/swXNuqrioZAWC0YwkYAAAAAAABAuxCkZNn15TXd+17af/Wj2eVd
bRQ/CZ/MeqaPHyQ0l5l9rmNd99gfor9lCxutq4qWzasIGwEAAAAAAADtxNLc
O0O7N3VKVzws9yZVPWyMh100eNho3KQqYsDcq408JU7HN3snPhV/jRLvxE9W
ImwEAAAAAAAAtAss0aiSAaZ1wka2ime4lSN64PzgOevZRp55xpxwlceA0v9m
DRt9SV7d7t8LyfP8LIz/2r9ow3hLCMJGAAAAAAAAQJsQpYXR4pTWCRtFSpxS
/6nxBX3F0JvZv3Vkyl4c/nNjDlLTwcPsYaO/0fedn/ds++nmSlhi/6bIV0Ym
75jeg7ARAAAAAAAA0B5404NbtF2aPizaMoaN5g2fcRKet209NVz8wUoYUNkz
eH6aXZaxNHdteF/315PvbWR7R+OnDnkx1m8Y+0jUMnPYuHj+hfu7lFclgbAR
AAAAAAAA0CZEcQrfWlldnBw5+v0N99/fxSK+z+av7B72oxh+q6C/69KrLc2/
1dd74WP7q+3Pm28trFnui5x594m1HRYstyvKLM2++tWgGOu1mC4MSLU3sChV
SpKjYLu3MSykerAxAYsE2K2Rsa8bw0Zv8vqT3eX4JY8AAAAAAAAAUCT8EgpG
+cHBD/7I1tQ65KvnxcodLWSzPB+dpmTfEns4vdnDezeHRxHV84DezfFd0ov4
C03bVk3MTx/dEAawlaPXg7pUF6eGd28u6W+QPmSuXZTixg9Cu59/X4qZ2eqh
Lbztf+awqGl1caLPJAERIKtf55FvPbp/fGSWnfHkIb9xxywAAAAAAAAAFMXC
5QvRRY3ru/eNRclUo/iIx1khLOuL/+Sbl9NDtvjzpvBq4OyHxr8ra45Lc1cO
HN/JgsfKnsGXr7sssVUXJ4+J+yjrsfDQ88O/mZLXStlKn142thr4uRRKc0S8
5s2OntxpiG0FUVYfswTmRAwo6u+vORr+ztYcsdoIAAAAAAAAAG2Ed+NMzx6x
FKgQxLyPrjWl5QEAAAAAAAAAsBqYubGvW00rpFOd6F1zEAltAAAAAAAAAGAV
4p89LJX2JiaYrd69uHUtVhsBAAAAAAAAYBUSpUVNSqPqzR7eVf4J7eISAAAA
AAAAAAArC+/G2YF7glw167v3vaRl2vFmxs6c6t3WuV3OGQsAAAAAAAAAYFXh
zb74zAP3WHOoRndiAgAAAAAAAABYzcxPnd0v3fFhXnwEAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AABYNVQXJ4+d2ddd6j87udxFKQxvcuJ0b3/poeG5alO+tzR3bfhA7xe6x/7Q
lM8VwcLli0cqmzqfGmuGhKqLH+wYKHeU+k+NL3hN+F5W5qePbih3rO9+/n1c
ZVIwC5cvnOodiO6M2VI5cvFyS2tCk2k7xVuJo4ZfqZHjO8udT737+XIXBcSI
VC4yIZU9g+ennTtLU0e9RrAi+12tfTwEAFYrC5ff3Fvpm/jj3JUD9VEyuvpv
IM0QVc8d3np4ZLLA2+SX5q4cOnOkUpHuqy/1H/rZ00eDryzNjn6jb2LR7ZWK
d/pw48PG+anX9x584J7gc+vaImz0ZsbGuMzX/bIpA+jH7x7oCgf7XtcGbSbV
sV+ua6ZYVgve7OFd5f7BD+5w9yDQhWfHFuEhBLST4i25jRrtgVIphI2tx9Lc
xW+Uv3MyiCnCOZY65a4DE8TIcTlGvWJZkf2O0yYeAgCrkaW5q9u3dW7rfePW
4p2RPdKF8QRDtDT3ztBQ119UzrjP8pletXtzKbin/hUpFA0CSXGRvasN+Xz+
1Y1SlRofNs4ND4jPtUXYyO1zMwfQdplLbLtFn3ZgcfTQ5lJp9+/mo38vzb76
1aCDf6Vy8d+XtWStQ/sonvOo0Q7wsB1hYytSXZzoq8jmwrtxdiCYqi0/NnKH
MqAsy6hXKCuy3wnaxUMAYLXhT9ltLj0YTPszvPGTPSW6IfJmD+/d1Nn144uT
2Ts3my2sPDY8ZVy79GPbYEkiWyB29/fH1jVrtdHHmx7ckj9s9MZ/seNGI9wV
b2p4x3Ut+mbDaDsOoEVgkkmjP9mo9m1tws6odg3v5viuckfl8ZHZPy1fwbKQ
X22WQfEageOo0XjuTg897WLKTM+z4HH1hI3toY2RsimjeaofsjJHvZbrdwCA
FYwfM1Y6vtk78an69/de29bpZIi8meEHS6WskSOLGcuPDM8kOI3hBGO2QIyv
OTYpbGRrjrnCxnrsee8TjXBX7v7+uU2xRVsmovYdQHNhlEljaVj7tjaRn9MW
C/Gp5FebZVC8xuA8ajQWb/z4vQcdTJn5+ahSqyZsbA9tZLOyTqP5Sh31Wqzf
AQBWLlGsZzgLkMEQVe9e6il3rN8w9pGj9Q2DQT9oLB+fTvvt7fGhLxAei9OG
YWOw66YR7krQ7ptX4gCaHYtMGvrJRrVvqxOt4KyEsDG/2iyD4jWKlnJf/W3P
pS8eIpsy2/OrK2xsF22sTvSucxzNV+6o11L9DgCwcgnPApgX+DIZonARIWXF
MEZwyol+JCHrAk3bhY3RCmzx7sri+Rf8dD3xI6IrYADNilUmjaNh7dv6FLEQ
3xLkV5tlULzG0TruK0uyRDVlCc+vprCxbbTRfTRfyaNe6/Q7AMAKJlwc7JCy
UshkM0ThkSWHVGa8GB3WksTwxp/pu0R6UqG9wkaeF65odyUaPTtW6ACaiSSZ
NIiGtW9bsDLCxvxqswyK11BaxH2VEvOSTFny86smbGwnbXQczVf4qNci/Q4A
sKJJOV6kGqLgYqNKGNz1Hxq+ZrXU0YkDhwXH27/btaaDukPVyPzUb4ZFDuqO
4PKml6/HjlgmDzTBzUfi1o/13fvGxlgV2H6YCMl/YFIK0Yy21TfWvtUR3Fh3
jn+utjD+a7k6tvcrt4oEd5T8w1RitF5dnBreHS7sKvASagNo3Zt6ll0jsqVy
NC7Smn5tlp4CN42gCrGbNLWL0uZv/baP3c6wZ8d1o+5RijE/fX5wqGt94DbM
3zrT48u/svun//dDiTKpJd2KtXD5/MmHpZ+Xu4ae3381zY8htS+lRq6C8iUQ
lTbqI3MXtxoOf3kzY2c01Tp6zdT6RpHaUlrV9P6iyFvx2RpWgAD5mraoLeoN
95p8ZWRaAVK7Ui3NLlHekHgdmzf5zondrHvWazDQe0qyIYIMvcksNIKqZxo1
0iriaH6ZGujY4ovU57WwkSJA+QKmsEaX3C4kVaVtlx7hQ8qlhDaTTtFGYr0y
dckAUq9XspQrWOL61hv1inc2MvU7Z//BVhsl4bBkyZMz2Ed2KZKz7/98dvet
Pv1utUZ5CLSRWiHFz9QaThKFmrDXYIgcxvoUcQHQSNiJ8t7B6c9M/y8M0R9m
D+/Vra49J3xkQ8gxoLA5mWY4w+yL9fI8eSXov2KMKD149qZi8BPCRn9021zq
733j1sfsn77VLcvZZcPcQZolrykz1aSwMXpPqf+50TBjJA8i9Fg7YZbb/+h3
yjuZheQXl5RJKYmigiXPu/6J15c3euzU6vz00Y3lnaeiIc+bvHE0HK229Fya
TQudxNAmtYh+UVrVEGHFNTatGN7k9dPcB6vXepav9HXwNW6zTGRbrbevF/aL
8kDftfmg9Nz/JB7vTWjfVMFmENTMu0+sFVrH36nPsYe1qI9cbwYOoeREyTlO
KSJNIGm1sYEF0K9p++TaC9wHFpn8aQVQKhLrSnS75K54/G2l/mcOhwaq7lxF
Xofc9bL1JpPcqKruOmoQK1JzN7+uS0gJz4t+Wo2aVSI+Qbp4/ljPOh5ueLOj
J0OZU1ME+zLZ9eU1Qv0izYlJL+1DsUsJ78QC5NgwbR0aCPXKZRNcOp2P+96h
Vhj1WE2Ldjbc+10e/8GEx7+r9SCxziu3lJ/Ooi4EZk94AaTWKdJDCOXJ5wZN
MwnJC7VEe17vAk+y6E+RQ7gNj6u3DEWdCOICoOGw2yisxwmZIap8r7v7EWZe
pFkdQ/JV9YfE/RJi8jBLFzCdi+e7XjXrYRtowgvj1OrwjNZbTl7m4rFmYrdU
2egbG5OBRLcvaYO4NazwZoa3d/5AdVdc0gqlD6CPn369t7L3TGjKLCOCL7fO
7a+psbkfm1hMt4xl/k29harziV+d3ril9/REYKjFSKp6IKnFWOK7oAO+Vtn7
aOXIzYXIwjPjbJSJNo+qtC+rgvJHtnQuq40VW/sSBOsuqGCaSGvxeA4QNqeh
+Xj89HHl2bFFT95YniTSBKxhY0MLwDc2BKzb+Tc/+EbdVfNmX3ym7thE3imx
AFpF9K7kYJecFY8HcZrp5hrCTFmW3mSErupuowa1IqpMaOa3AWHjE2NvPNAT
F6BSHu/Gaw906YEGVx6CWTAlqeNXR0mak/6hf1O1/fFXXqpsYKtawqRrwrdO
g6R+zsthExw7nU8jwsZGj3q1hjkbjv0up/9gxnaPiamlgiprVVMTFhXoIQRv
LmuqzutLuibYwZ6LmSVJ5oujB7+8xrTUQlOndHEB0ATYoG8dVbkh0iw27262
QZD1d+KVuyJszHLkMLLtaiFZH9cGCPNAE5qUmO/EPUzp4ULCxsiqUDwiS1gR
JDIyOHvc1Ux1TlIH0I4tlTPTHxv+LqQRWK0vxU0uEz5l9LHcpMmHBn2emclZ
qiC9GHwPSWwZOlkmtlux2ASm4uA5XQFmbl8HwToIKmzB2Mz5nZFd90ibVKMX
xp0fPkQq9U0RaQK2sLEZBeAOiWlR2LEANrVxsEvOiheaJlP/EvogfdelN1mg
q7rTqOFYkeUOG2M7LePfDeZhSntjAx9XubSwIkpSpw2dXPd4f6F/iA9kWuDG
TTphEsOlXlm6pGunU8pfXNjY+FGvYc6GS7/L7z+YcQkbg7aIacjt8UfWqa1T
gIfAxatXmVlXSkoNFz9TzvEYbEWou3xDa43pPqjqRBUXAI0k/X7YhEVDk5UT
kIfIkHxhY+I7KWFjlMPHYO2Dvl/qPzW+kM1vccr7YYwgLGFFtLs4gTRJkrbr
KP/B7BhvU27P7aQvN9uGftsyXHxgcilGgn+e8r/0BXQnZ9VYTSfB0gXFHDCx
zzDktnS2MXEHAh+p5f9NFmkC5q7RnAIktFGDC2B82FHxWPc3TpJzyyz/L11J
nDCK0WHUcK7IcoeNVgEKh5yNqlZSxoJIJga/PViA4PsYHT6UatIJ2uhUL+cu
6d7p5HoVvElV+Y+iR73GORsZ+l0C2Twxl7Axala+5zOqc+ywXn4PQWhv7GGn
rUEmrBol9hKXHvzVtdGvdm6TWlZAViequABoJHxmKUvYyOcAjUMD7+m0gUPs
Oihgn7Z6pp4SNobVpGV0bETYqKaDIISNkfBzpfXLPoDyn4QmN2eT5R8UXIrR
2LBxae7KIXGqPXvY6CRYh9Ez2qgTYMl+wKppLrzJky84bGxOAQjrSkUXIMku
uSlesnU1ZqUuPGxMUHX6qOFekZYNG/lPwrEse0JOVobU6SmHDxURNjrVy7lL
unc6uV7NCBuLGvUa52zQ+10R/oMZp02qwap6SFLCqCLDxtiqYmzah0yinxkS
7kYO/992qJmsTlRxAdBIcoWN9tV5H8ewUcxkkjaZW4gOSoe51+ZmyKuN0ddp
+/kLDRvDfAX+0Xg/beAH5NXGqBbUy0qMFDCAhmXL02S1IgYFl2I0KGwMEkEE
KSxe2n/1o9m8q41OgnWKCJbmrm7nefOCuu4ZPC9tyuI2wVx4vosgz8oCI+nY
b6MLYA8Qii8AwS65KR4vg/mLIptfliXpNNJVnT5quFek9cPGsCmJpzMMsNUH
4ikD0oeKCBud6uXaJTN0OrleTQ0b8416DXQ26P2uCP/BjEvY6G/7DE6UC7ZU
jlyMRUNFhI3WVUXL5tUkKH4mryGL9azXCjioE01cADSS1gkbpZX6bDNgUUo3
OfEyfZOqy/72wsLGKFmWnNybvkmV1SK7c1LgAJpz9CkqbKQVo/iwMUhotqmz
a4ilQStgk6qTYN0jApGpMkS6eILbBLNq8cZq2GpjkwpACBuLKADVLmUMGy3O
BtvzX/RqI1HVM4SN5Iq0S9iYfTItNU8dw+FDxYWNhczOxcnQ6ZS/Nz9szDrq
NdDZcA4bc/kPZtzCxgA5aU+Afny4kLCR77RRE0pEJxBpZ6kc/Ez+A2mJ0JDT
qeauTqniAqCRGJN3KVAMkdFim9K+JZeFb7Y3d67E30a5+NT5HIezjfwuJEJp
i0yJY05cT9+kar/loXrn9d37G3W2UduukzCTdvv84LnGn210KUbBYSPL/qcc
VM8fNjoJNmtEoASPbPZbrPsb+4Iph0axYWOTCmBvo+IK4GCX3BSPW1fLmkX0
Nvl/84eNdFWnjxruFWn9sJEduLBmg7lzYvDlf00vQ+qClMOHitukSqyXa5fM
0OmUvzd/k2rmUa9xzga93xXhP5jJEDaGqNGQ4pEWEzaKnTY8zoqu7SDemeLk
Z0aV8q/V2PXW9PvhIcd4TqdaVnVKEBcADYWcSdVgiNg+B/Mg4phJ1YcnHCZe
eLc0M/rsOT/AjGqhWw/nlDjBmNhvOrbs3XhxR7bpbqNvzIy2LvZMKXGUm55E
gUe3nsibSTV9AE2Rmzezf+vIVFpTFpkSJ70YxYaNkStl0bEiUuIQBEsX1Ofz
pzVfRbq7Khp6kj1500mQBqXEaWwBCClx8hbAxS5lTIljdhhiSTxqBYSNDqru
MGo4V6T1w0YRARnvNV6afblvR2K8kGLb6wPf8b3H6qOqw4eKTYlDqFfmlDj0
TifXq6lhY85Rr3HORqZ+l9l/MOOUSXV/zxFVUOL6Rdl2FRU2Bkkkft6z7aeb
K2Hd/SsUXxmZJC7VOfmZtTCBbVfXoWARhB9yjDu3ZHWiiguAhmLJbCxIzc2V
dm+j0zQIvxPWOvHCWZo7//Dg9eDTll0fzDDSLuCQEouV+g8NX5P/b/L645t6
LrG9MebPSTfwalU2+MaWbUjmZF+WPQxKXjtli7t/XnLfhrXUexvjm46sO1ji
PoaSkE05Jbc0d214X/fXCdasgEHBoRiksNG4EYue0JK1r0vYaNFeimBdwsb6
4KUrBpvEYHor0uYYOm/4LXXsKzhsbE4BkgKKrAVQ1cDJLjkqnrT3Ke4wGCf0
8oaNLqruMmq4VsTN/Lpuxkt43raXLDmxc7lr6AXhl3qTE6d7v7X2eMqYKNv2
8gC7kC7EXzHZ8MO3590+lC1stLQ1pV7uXdK508n1cg4bl3PUa5iz4dTvcvsP
Ziy+DXft1E0a3ynH+oLhHpaCwsZ6Ge6P3TpKx83PjF2LaT/kSFUnqrgAaCw2
nWcwQ6RvHA03LBlnHQOiWTLnS2PF7bpJG7bnp1/+q763+L4CvuuD3bi0cPnS
kZ7Nm++rsAHCm31x+6l/CmyLbfcsX+s0oVRf3IEVfc4/pdjT/cgzT/23TvET
ZrKYhGVRiG1I7EzZ/PT5wYe6u/s3R3bpE2/y6vZT56rS58JMXN7Ni1t/ERhk
6TKmOOlxNzc45a4fX6y7JXXJb/2R5o3oY7HJx0iSG+3SLsvnrAdvjYMCtRis
OSyJ7KwyqZlvq+EXx0TqWl2cHDn6/Q3338+X2j+bv7J7OMl3srUvWbAOggoU
Lza9HDSrvH/GOjUaSk9r1hSR2rH/sAkFSJ4xcyuAUW0+dbJLroonudl6YcLn
NQvg1ptMOKi626jhVhE388s34/n70Lza0vxbfb0XzENWKCbr85ZWMAuQX9lm
gLKXJtG2qxeI0z7Ez5BSTLpdG8n1ytQlHTudT+q8d4yWGPUa5Gw49Tuq/8Bc
Mu3eBxvSJZuRb+MfiH6oe+jY394nV9IXpm9SYj5kaKmUKhToIdiWOSi42PPF
0YNfXqOrMTd0+qoiTZ2o4gKgwXjJeb3mb53pCW2LNC0W/lG7FVd9azRqZJoD
EUeu6pbn+eHfSHcEBBdV7K08qkaUIk87w+9ci+IuSCn7sRj4YvvMo/OGcROq
udlxe+uPQR963KrIM7GSQTDevs2Ng29JbrE3dEj77aUczkHVJFsUnTZKK7AF
+bB2hxgpROSu2Sghn2jMTZabeQdOHNEi8uckIat+o3SFhHokgVIM6Rnz4G6R
iVoeWbx8WJeF/0c2LRCTlQF7+5IE6yQoPqMuljDC5GyxxpqfProh9J9ZyqZo
O6v+ZKpIbYgNNsbk5I0tgKzkFjeeXICaTW1c7JKz4tWkRYeyyFETSjXBZBF7
kwG6qruOGvSK1BzNr3LjDEVDLM9LllYtkqRIigClv+sKkBC1SlhsezzopnxI
srGKtgut00y6TRtpn8tsE5w6nbzBPt3MplSt2aNeQ5wN135H8R/4hENMeWzE
5xZ8K/cfwlDwBbXIEq7v3jcW9Xpv8vqT3aWSKoRiPIT3JOfKQKn/mcMpXhPV
nrN8p7EQVZJMqf+5UXnIo6gTUVwANBx9i5qBhcuvPyduFQyujDk3lrSYFb0z
T4JNb2bshPzRwAhUjryiRJECcUBYMphhyMZdEdkAcrSpxfmp1/eKj9bt24kL
pvzGQUbB0ALUpfHGraBI75194B7ZYxHZ4wV89rXuKT0bfUj48MwSynm6apFx
KCvfUgQ1dqRSESJKbhr1tyyfM7OZn0tOoCyiz0x/l2dfo5TUQm4vXycM4rbP
/bPBwg+c/dBo+bXbJezFMDWHYT9PTCY184jDfyhmOSR7Hg0QcprchGZIaN9k
wZoLZhdUNTjbuLQ4eUzcuKfvguNUlcficzhkkcawjeDa2kSDCmC0A8ZlkfQC
cExqU6PZpYQ3JCpeSF39xN1hRpPlqiR2yTmpuuuokV4RDsn8ioejG2fqZX6T
kKw+/nxWAQY3lYi4Zuj5/Vedkoxo6le37WfM57CSPpTRpFv0Ob1eWW2CrdaW
Tif76nrVUmS83KMep0hnQ+DY79L8BzalU/nRkzvLRI8uSjfqwztRIGTtsqfg
sJ6ndHzJsPgU6SFIpbKQvkeLYM/5GmgA30Br6hfaHr80dUoXFwDNIpp/K253
dPhCyj5JAAAAAADQuvhrAaV+evjfeng3zvTsiW1rCQlCtkfXuh6qAmDVEi7r
F3T3a7hkRsyGCgAAAAAAWpa7t47d185R1cyNfd3JV45WJ3rXHMxyaTgAq5Jw
lzv1/pokFkef2tRJPWgAAAAAAABaFW9muLd8qG3zrvgJBEqlvYnplKt3L27N
mj8WgNVJEZGjn2Z5DWJGAAAAAIA2x0899FD3kD2zfcsTJX5MSqPqzR7eVf4J
+ZJxAECIbx+Guv4iIUVq8m93fXkNLUszAAAAAABoWe7eOvLt3lOXCLmkWhiR
Pnd9976XtAxL3szYmVO92zq3Ix8pABlZuHzhUO/gdcebu6vnDm89bM7zBgAA
AAAAQNPh6XPNJN0SDgAAAAAAAABglTA/dXa/dLeLefERAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYNWw
NHdt+EDvF7rH/qD/jzc5cbq3v/TQ8Fw147vzv6EZzE+fHxzqWt874Xin5/Kw
NHflwPGd5c6n3v18uYvSvngzY2P7ukv9Zyddf7lw+cKp3oEo1/mWypGL7X1h
NAAAyCxcvniksqnzqbFWHrRbE5vDs3j+hQfu6Sg/OPhBg29RDIYnF4/L7v4B
AIDO/NTrew9Gd8WuU+yG4hs/nCXoy/+GJuBNXj/98O7NpfBm3JYPG+X26mi3
sPG917Z1Wm8l1lnXsFGsujh5TFxxNeAWNnqzh3eV+4Ohv7r4wY5IvSvPji0i
cgQAtDf+ZNqRSiWywb9E2OhAosNTnehd1+BRW2k7ksdld/8AAMDI3PCA2VH/
fP7VjZIPnyHoy/+GZsCNeXuEjUp7tV3YGOBN3jia5JaEi4DlBo5iavTqFDYu
jh7aXCrt/t189O+l2Ve/GrgJX6lc/PeGFBYAAJrEx+8e6JI8AoSNdNIcnoav
Nt7+3a41bh6X1f0DAIAkvOnBLWa7cff3x9blC/qyvMGbGt5xvXHh293poae1
0ZAFjy0fNobcGdlTbtuwsU517JfrEt0S78avv9fgPTPe+MmekmPYGCqz2k28
m+O7yh2Vx0dm/9SIYjrjjf9ix4221AqQB7R7G2MYkpYVFjwibHQmv8vU7ALY
3T8AALAQTTrF7QafQMtsAzO84e7vn9vUwPDNGz9+70F9NIwk0CZhIwu72jVs
5CGb1S2p3r3Uc8/BhtaOrTnSw8ao2C09vNZ9gHufaE+tADlAu7cxxiFpOWGj
NsJGZ/K7TE0vgNX9AwAAC60UNnozww+WNjcsfPN3FZa+eAhh47LCQrYEt+TO
yNb/2dDVE/ewMRJ7Cw+v3o2zA/e0rVaArKDd2xjLkLScIGzMDMJGAMAqoHXC
xnD/f6PCN5bDJD4aImxsKoSwsWlloIeNrT68zk8f3VBuY60A2UC7ty/2IWk5
QdiYGYSNAIBVQIuEjVHM2KDwTcp7ibBxmUHYWDhR7NDOWgEygHZvXxKHpOUE
YWNmEDYCAApBvhmnujg5cnxnOFqUu4ZOjc3Ek2nMT/1mmD0TBlJ7Bl++Pqnn
+JdvG5y/daan4j/52PBUmKoruGhAJGTuCO6YO2f4XMawUb3IoGN9975XRibv
uLxBetXUMLsFQ0YvkjczdkbkuO4o9R/62dFrMbHEYcLRYaXSwsaFyxeietka
qKbdhdFRHug9dcnl/j6K9OIfqj/25vufjNrDRu219fI/v/+qXfRKzvBAnv8w
9XHsmYuRFkVv8/LuIE0IGz+e+KsnbQceqRKjVMohbLTfGyLKn9wT6aWqZdGr
hfFfy7aCo1XNm3znxG71zSZroKMmV5SnVpIS8clWLjQ7n919q68vPi1DFUuc
5E8YWk3pL0rhw0pFCsau8vSNdiSuuqzeuPWx4bt1JRyLydBvQXEPWnCPW1jB
Uv8zh0UeRV9nIqNXf//pCbMdS5BParvLt+9FD9e78GuXF6bchZPQCrRRxloY
T35Grqw+6vFUWpHG8d6XnMSywOagmKBIPZg852/9to9d07Nnx3VesrQhid6D
BDGdD0Wk5t/W2lTJJR5pjhY21sPbZ5nd2FI5GvdDhJxTDFe6DtCHRUvrpKui
mzOmXO8rhkKtNTkJDo+qhxoLl8+f5BeB+d18+Frs5eozlsFdKwBBq5PDxuz2
GQCQDanb+h3zIzHByNFyMoe5GesG88krQR8XIVXpwbM3w16v3zY4y+ec/cf8
CwI+n7v4jYrfzZ8bDXM8ch+j/MiwZhuzhI3z00c3lncyMytuVdjSc2m2SnqD
iaRVv3Cc9eOmYJSRxjJqHkv7JKr0XW/28F41gBVi5yyeP9azjg+g3uzoyVC2
1JIQpcdWYPkIFTxZ/uZ3vmfOpLoUNDofiE3BuAgl/Lnu75R3srFvae6doeDh
ctePL4rBZXH04JfXMFUUNc23tGEPG63ZIYgSo1VKLkPO1cb0nuhSqlx6FdXI
PJkQaILwk8XESEzljERGKd43+WqXLJbq4kTf5lJ/37V5tb7ab+mNFYfyCbES
ZzB6NZbjyJftwtyVA2KazleJT+R2DFi/YewjL+piChazHAhE7KBghCUR8lTe
ryV4psnH0O767XufXJOKEV4WQxdOguItUUYZQmGCx0LDyydbDEGxP4gI+6xZ
DyFqNtYU3BypJmhJ1qJ6c1QNVegdnP5MeqdtSCL2oDgiGpXuCRIt1WEczmq3
x3eWuZFXS/WnmMLHJZNuuGg6QB4WDVBU0ckZkyNK3ybMxJWn7o08/74aQxkd
Hu27mpflG+dd9UGWOzbRqK28PFL78gBTCd7QWnNIBZj5MKbVdfmcGtdieav7
l8c+AwAyol4LuO6+X/zPLRv+Lua5KdeFs5/IZsdPLFkWgw7/Z8jXKnsfrRy5
uVAfJZ+sv9C3sZ4xfUd0cUO5fHxaMcLOYaN/ir9z+2vq6DPz7hNrO0Qhk99g
wRo2skFBGQqje/Q0AdpJDxu/+8pLA5WfRxN9NlfZu/HaA1360MlLsuXk5ZSC
kKUXZLqIOXX8rkA9QPCzCfnTt4+N3JEmbyf6KsrQLB7e3vkD9c38Ya4hQTZv
TVwF5N+whI2BApuyQ1AlRquUWoZcYWN6T6zSS5VXr6xhI3M5ZMWoSQL8Zu/E
p6m1t15SExdLEHEYlFNNdeXSWDFonxB11OsesDh64M+/4PcLdqNNxMDxNw9v
7TkSrpUszV3dHvmWW567cP7b3Q89Hy1/iKAg7FyaMqzrfv7skcpfD56f9n2/
SCWCqh19662/3lg5clGf21ELSZZPvN3VG9zW7fybH3yj7gx7sy8+489B8UiQ
JpwESKMMrTChrdPMFFN+1ezbrofQxppim4NgglQt6nziV6c3bmHrO1LUptTF
MiRR1dsIK5VuMVhDxC3J4ui+DcelP/JSPX769d7K3jNhHGcN2NMN178RdIDu
VJggqKKbM6YtbX/v8eF6a0ZbDqQVZN14Ghwe7buxDVT1Zi11HZiQwk9+iQav
NdN5ZbQyNigvQKW7++sskJfXi8vqt6zuXy77DADIB7sZJz7Vw62imDJik65K
HGT02bg5MswfRiGPatNsZ+Icw8bA0H0p7lGw8sgmpaCwMbL/8bGD+wYxY2gg
NWyMbZoySCZIfFfaG3O0+F6+lAGOLL0wPDTZZ7bpSG3HaBDRI2t224Xy98BJ
05+sSdvAopEo8Ej1uDX/7Rj2bZ+m1qFKjFoptQxFnG1M7InEUuXVK3vYGCqG
SZG4o0uYdXEIG4O/xERxe/yRdeK3bo0Vg/IJpY6Gtby6Gpd6pK/we2H0K7m5
FxdbXDCphNXaW99vMpIO8rG1O9cc0/KQq3CMOIwyyYVhZlwPYJnklb8Tw0ZW
xiKaw2HIE31KW6hlBsfo5Gt1oau3CVZlzWJwn1//+92LW9cqxoFLYEvlzPTH
hr/LEqYbriQdcHEqjHWmqqKTM2ZXEi5MrZmsDo/5esRoZlhTe+7V8IfZPiLF
yTF2BF6A2GQgD+Q1BTDvoslnnwEAObE7nNEKUdzbN79B9dmcE7lYHAy3sJE7
UXaEK15I2Gh0Hhh8mDb+r7E69JQ4kZGUl4TYOGIl+Wg5WXrRh0zBgtExYwWz
RA2KnedDp52wvVgoynf+MJk35myjv/EmOvniLjFypdQyFJISx94TqaXKq1c1
W+9mBdCXmwP4SpDxfxUcwkYWjEjb3vwXyCezHBsrBuETDKY/emh8e3zoC7QF
aO7FxYpk7IlWPWHSjqlcXLYu8rGFjZTEJnTh0DGWJ7kwrBixvZrqNpsQt7Cx
iOZwGvLSonijk6/VxUG9TUTGRAu1pEhHcTZuv719I23rLJeMvCWGbrgSdMBJ
wnRMbeHmjNmHiWh9XHM87A5PwhSTIQQLYlg9VtUwyjPB44pHo2kFS2K5cv4A
sDpIOnScklVSTQKTNWxUs2HkCxvD0ZYYqxYSNiaLiO76Zg4bJYmFA3r2FHNU
6TG7bZJbYtgYm39g7ooYm6Lhg7DRVGyIdcxOkExCg96+uFU720iUGL1Sahka
GzaSS5VXr2op7rpZgGIjX8q0ldsmVeZQddhS+rg2Voz0T0jPRt6gssZh2oJl
VQnTwYHwP5zCRuNOM/n9XLZO8skTNtKFQyBplKGFjbGpP0OcUljYSG8OpyGv
iLDRRb1NMHkq8cjtt7//1Z2DZV3Od0YeXXtcDVtSw0ZJFA6GK0EHnCRMIEEV
3ZyxhGHCaFqdwkb2sHNEvDR35ZBIHEQNG8Uce5pActtnAEBOkiyVbRCMzteH
yULnZjKuNoZH0TeX+oOsiR8UsdoYGtL05Qn7G+wYa8T3RZjHJr71JXU5poiw
MXwyfWXTBlF6iXIzbwOzHV2Jb16NXp4aKfiIQ0CRE9M19ELu4DEhbLw7PfS0
+kc3iZEqJZehsWEjuVR59apm8Vd57zBbCXHuJk0ODmGjv9M+OLUk2MLOjoW4
NpaBtE/IxE97+X517OutEzY6ySdX2EgWThKEUSa5MMZVRenvOTapFtEcTkNe
EWGjm3obYLMBUsahmeGNf/32HX1bcnyHalKpDEbAwXAl6ICThJNIV0U3Zyxp
mDCZRKew0RjdJ1fPz/IU5M95af/Vj2bdVhvp9qoA+wwAyIVj2BglIpMzPGfY
pBolIpMzZheySTV6Cc2kFBo2mscm/ommrDZGT2Ye4IjSyxA2cldBPdQQnWgw
5SmiBinygXrmwyhnXlxxurfRUWLUSjU1bEwvVV69qqWFjZY3s3OyRa42RsiJ
IwLEjSSujWUj4RMK+k5db/yF/y2e76XlwkaafHKGjUTh2H5MHGXSChOtr2mn
t8KQVttsuVxhY84o3i1sDKCqtwlttvDu749UgnFBm12M71BNKpU1bCQZrtSw
MV+cQlTFFgwbSd08SGS6qVO6JcR1k6pz2JjbPgMAskKxVMwusbSHah4S17CR
3eKhnj0vJGxk444xbXvwwPnBc0WebRSnJ4xZQfgnUnOGFLdJ1ZzGPHzgxODL
/2ovA1F61aRY2JbaiGd91JPY67dUsLl9W66M6p3Xd++PnYxQg8dUaSfgFDYS
JeY5Vqqpm1TTS5VXr2qW3s0PDVlySrBkUKkH2dzDxhDV9Y2c1WwaaMP4CQ3Z
W/YWJ/q61r8Qe6x1wkYn+eQNG2nCMeEwyqQXhq2v8Smp8IqBeLb/5dqkShzy
CgwbQyjqHUddqJVypSoJcww7VJNKZd2kSjJcqZtUiRI2QVdFF2eMFjbK+pZp
k2q6+WWZ5I3pd5zDxtSzjcXaZwCAO0mWSstzGNlPS2RHDBtZr9ftc8EpcQx3
APlrXvu3jkxVk95gJzkljtm6xs/u2SgibBQxbPzOppp/GPDlvh1J8RRVeiLh
mz2bmeHogTf5zs97tv10cyVyMswHEsWBd+Ohe+/G6NYTYSbVMz1/r0qVXxeV
JwW3U9joLLG0SqllaFpKnORS5dWrmq13iwKYOojp7JgZl0yq+3uOTCkNK+6q
iD7k2FgxCJ/Qis/ygXyzd+KWJd9L64SNTvLJHzZShGP4lcsoQynM0ty171f+
y6Pypeemu8WbHzY6DXlFhI3O6m0iCui+Urn4/9258O2Nr+rZQUu7fztx7D5T
W7uEjQ6Gi5QShyDhOC6q6OCM1RKHCfZR8/0XLilxbN28tjRzfO+xetQfNaVm
e93DxmhHsXFJwqVgqfYZAJCThCn90CDwjmxJbMJ6MTFstGx+sCXbdL2AQ86y
VdkT3YTlUx/3h/d1fz33vY2GSwYfjK5Oi7u+oWG3J5mPVye+9cK208bgFso5
39SDft7kxOnebxkmbxWo0hPDsX7ZsTX77uL5F+6P3Z9lLoSc/k45NeOfDdm3
gZ12eW+suzvmpdgvdCDCv07LAOMuseRKhTQpbCSXKq9eWTd6ifQacYeTnWGx
rRTIrzFnZOW3xkv6MDf8nXKstNodOm6NFYPyCb0CkRxKff19pftNz6RmUo29
OVsm1ZgRS/TGU+Vj2+BHDxspwonjNMqkFsZXpNi1fS7fFbexE+4X8HFoDpch
L1PYqNUlg3obYPtUh547snGPdgdlsBD5ta6u+MUZ9lKZ547ohitJB1wkHMdF
FenOmI/x2pSQULya4+EWNirdvDzAbvlkFb+6fcMP35632l5j/uHUTKq0extz
2mcAQE7YAaKY8QkNuGx5+JV2bK/OwuVLR3o2b76vwuyGN/vi9lP/9HnNchOQ
j9j8wC4inJ8+P/hQd3c/uz35E2/y6vZT54KvsvfEDWn82tkQfsORAdUFtb3B
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
/X/tChsAAAAAAAAAAAAArALXJaz4
    "], {{0, 798}, {1213, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{1213, 798},
  PlotRange->{{0, 1213}, {0, 798}}]], "Text",
 CellChangeTimes->{
  3.799785104621278*^9},ExpressionUUID->"2ceb6389-f772-423f-a583-\
9ca9f64e8bba"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{960., 478.5},
WindowMargins->{{
  Automatic, -4.7999999999999545`}, {-4.7999999999999545`, Automatic}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "PastelColor.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"25ceeeb9-dd93-4bb9-b9ac-8104915ca5de"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 153, 3, 65, "Title",ExpressionUUID->"600cdb65-4fe5-41e7-a8ff-5e00cd54cd22"],
Cell[CellGroupData[{
Cell[745, 29, 157, 3, 60, "Section",ExpressionUUID->"bdade399-bb26-45e4-b48c-7127ff81bdf6"],
Cell[905, 34, 49799, 821, 446, "Text",ExpressionUUID->"355e43ff-da98-4322-bc57-75a4523b7d90"],
Cell[50707, 857, 235, 4, 40, "Input",ExpressionUUID->"38c0c658-dbaa-4e63-8e6a-20b2787924b4"],
Cell[50945, 863, 172, 3, 32, "Text",ExpressionUUID->"5a0b381d-a12c-453d-a0e2-7483932a1fe8"],
Cell[CellGroupData[{
Cell[51142, 870, 825, 19, 98, "Input",ExpressionUUID->"f5f116d3-67c0-4071-8465-eb63964aecc8"],
Cell[51970, 891, 286, 5, 59, "Output",ExpressionUUID->"5733af2f-b417-4420-9e16-8bda965e6491"],
Cell[52259, 898, 269, 3, 40, "Output",ExpressionUUID->"f21ffce3-2cbe-4d93-82f8-641d4983a990"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52565, 906, 154, 3, 38, "Subsection",ExpressionUUID->"cbf42810-45d8-4901-b8d5-ddb840b08bd5"],
Cell[CellGroupData[{
Cell[52744, 913, 1301, 38, 98, "Input",ExpressionUUID->"8df73cbe-e2eb-4114-b416-c1f0772f4222"],
Cell[CellGroupData[{
Cell[54070, 955, 243, 5, 22, "Print",ExpressionUUID->"322cb54b-7952-4b92-913c-9e0300940c3a"],
Cell[54316, 962, 249, 5, 22, "Print",ExpressionUUID->"010cd524-f760-4b1d-86c7-a74b708d3cd6"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[54638, 975, 149, 3, 60, "Section",ExpressionUUID->"6a184058-c037-4dc7-9842-e59baad49d36"],
Cell[54790, 980, 338, 9, 95, "Text",ExpressionUUID->"57a6bd36-726d-4fa6-a64a-8d93f0c087f1"],
Cell[CellGroupData[{
Cell[55153, 993, 1451, 35, 60, "Input",ExpressionUUID->"3ebdfdbc-bf9e-486c-a70f-cec4b685e883"],
Cell[56607, 1030, 246, 3, 40, "Output",ExpressionUUID->"2e33f978-5fdd-49e8-ac85-530104a4e0d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56890, 1038, 151, 3, 38, "Subsection",ExpressionUUID->"96ffb82b-6d68-4458-96a3-308df2cc9a0d"],
Cell[57044, 1043, 246, 5, 32, "Text",ExpressionUUID->"7e3b9513-c239-443e-afcc-0ad8c5e50f69"],
Cell[CellGroupData[{
Cell[57315, 1052, 176, 3, 27, "Subsubsection",ExpressionUUID->"a41bfbb5-b712-4558-8004-8fefd765aaf1"],
Cell[57494, 1057, 810, 24, 40, "Input",ExpressionUUID->"333ccf6f-6c2c-490b-b2fe-241665efbce2"],
Cell[58307, 1083, 124, 0, 32, "Text",ExpressionUUID->"67d57d9f-eb79-40df-bbea-b0cf6ba8e3b6"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[58480, 1089, 121, 2, 30, "Subsection",ExpressionUUID->"a3961c73-55bd-4ca0-9802-97314ce400c8"],
Cell[58604, 1093, 177, 3, 32, "Text",ExpressionUUID->"4eef6734-2ed2-4527-bf19-dfcd0ff032e6"],
Cell[CellGroupData[{
Cell[58806, 1100, 3631, 100, 213, "Input",ExpressionUUID->"ff334525-f53b-4b5f-b98a-ff119bdb88b4"],
Cell[62440, 1202, 192, 2, 40, "Output",ExpressionUUID->"12756ad5-a52e-4e26-978e-0cd8c6f17777"],
Cell[62635, 1206, 192, 2, 40, "Output",ExpressionUUID->"3abf1060-f89a-4b6d-b46a-af3924ec20d4"],
Cell[62830, 1210, 171, 2, 40, "Output",ExpressionUUID->"d0836804-981a-4469-b10d-baec6108c22a"],
Cell[63004, 1214, 175, 2, 40, "Output",ExpressionUUID->"e9589830-d9c6-4a0c-85d0-1413cfb5b73b"],
Cell[63182, 1218, 171, 2, 40, "Output",ExpressionUUID->"71971e5c-2e7f-4d55-af5f-2e356b59f78d"],
Cell[63356, 1222, 173, 2, 40, "Output",ExpressionUUID->"95a5f800-cad1-48f6-b71a-10dd2843d950"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[63578, 1230, 144, 2, 38, "Subsection",ExpressionUUID->"45469e2e-95b0-41ab-8d98-cb5f487987a9"],
Cell[CellGroupData[{
Cell[63747, 1236, 3542, 102, 175, "Input",ExpressionUUID->"5b26feed-c12a-496e-a658-7c1fea05b17c"],
Cell[CellGroupData[{
Cell[67314, 1342, 196, 4, 22, "Print",ExpressionUUID->"3ddae700-ffb0-432c-a808-62a50d2d12b0"],
Cell[67513, 1348, 198, 4, 22, "Print",ExpressionUUID->"28c3b874-bf2a-41e7-aff4-0344274ab760"],
Cell[67714, 1354, 198, 4, 22, "Print",ExpressionUUID->"bbf022aa-2232-40e4-8912-7d44a9bfbba5"],
Cell[67915, 1360, 196, 4, 22, "Print",ExpressionUUID->"9051f721-e43b-4807-82d2-0d88dacb3c1d"],
Cell[68114, 1366, 198, 4, 22, "Print",ExpressionUUID->"691581d6-35a0-4bde-b8fb-95f2a297df8e"],
Cell[68315, 1372, 198, 4, 22, "Print",ExpressionUUID->"7d2e484e-4735-4448-9914-9c397700bb31"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[68574, 1383, 120, 2, 38, "Subsection",ExpressionUUID->"bd450b2b-17d6-41fd-994e-8bf8e41b42e5"],
Cell[68697, 1387, 117, 0, 32, "Text",ExpressionUUID->"a4881bdd-2286-4982-9231-1b9400244d64"],
Cell[CellGroupData[{
Cell[68839, 1391, 791, 18, 136, "Input",ExpressionUUID->"621ed09d-3fea-4dba-aa51-2f02b083797d"],
Cell[69633, 1411, 170, 2, 40, "Output",ExpressionUUID->"3a62e3d0-05e8-4712-b71d-188547d44192"],
Cell[69806, 1415, 170, 2, 40, "Output",ExpressionUUID->"ec4226cd-b761-4c62-9f53-4b7cfb84ffc6"],
Cell[69979, 1419, 170, 2, 40, "Output",ExpressionUUID->"8b8bb615-cd3f-46d1-873f-b5b6a3cc1935"],
Cell[70152, 1423, 153, 2, 40, "Output",ExpressionUUID->"6c3b987b-4375-4371-8a43-1bdc9563c117"],
Cell[70308, 1427, 149, 2, 40, "Output",ExpressionUUID->"511ee426-808f-4abf-904c-0e412a0ba11c"],
Cell[70460, 1431, 149, 2, 40, "Output",ExpressionUUID->"a3ffea71-b089-45cc-acfb-6fedea775148"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[70658, 1439, 156, 3, 38, "Subsection",ExpressionUUID->"03113ca1-a955-410c-b3b8-badb01ef52cd"],
Cell[CellGroupData[{
Cell[70839, 1446, 2338, 65, 194, "Input",ExpressionUUID->"f7eea6ac-a9d3-4617-8c2e-b55e2d897de1"],
Cell[CellGroupData[{
Cell[73202, 1515, 198, 4, 22, "Print",ExpressionUUID->"562e98f4-3214-447f-a1db-dee213adbf1d"],
Cell[73403, 1521, 198, 4, 22, "Print",ExpressionUUID->"d5e0bc5d-2062-4cf6-b97b-e668c858a9da"],
Cell[73604, 1527, 196, 4, 22, "Print",ExpressionUUID->"3f6a204e-017a-45d5-8a2f-2e12990e1cbc"],
Cell[73803, 1533, 198, 4, 22, "Print",ExpressionUUID->"6ab0e6d2-d4b5-408a-9ddc-e2e54bd70f36"],
Cell[74004, 1539, 198, 4, 22, "Print",ExpressionUUID->"d00c0249-62d2-4bc4-b078-4326900ac430"],
Cell[74205, 1545, 198, 4, 22, "Print",ExpressionUUID->"d506bf49-554a-4712-94b2-8355756de8a3"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[74476, 1557, 195, 4, 60, "Section",ExpressionUUID->"a33bace7-3f4f-42b7-9939-42e45b1c8ca7"],
Cell[74674, 1563, 430, 13, 137, "Text",ExpressionUUID->"d8f0c5ab-5c74-40b5-ace8-56a9472f8068"],
Cell[CellGroupData[{
Cell[75129, 1580, 1303, 33, 40, "Input",ExpressionUUID->"326e3ed6-a761-4bd0-bd3d-a880ba27a0f7"],
Cell[76435, 1615, 168, 2, 40, "Output",ExpressionUUID->"f5f941f8-dbec-4fb0-b174-25542f991959"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76640, 1622, 151, 3, 38, "Subsection",ExpressionUUID->"381b3843-5430-4848-8125-33ed936060a9"],
Cell[76794, 1627, 246, 5, 31, "Text",ExpressionUUID->"38e09e70-2b16-4827-8660-774b6b12ae46"],
Cell[CellGroupData[{
Cell[77065, 1636, 176, 3, 27, "Subsubsection",ExpressionUUID->"7002472b-ee94-4aed-9e05-914381553c3d"],
Cell[77244, 1641, 730, 22, 40, "Input",ExpressionUUID->"b2e3a1b7-4039-4728-97d4-f7853b11fce2"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[78023, 1669, 121, 2, 30, "Subsection",ExpressionUUID->"5983a963-3b73-4d04-95e3-9f5b968c61c9"],
Cell[78147, 1673, 177, 3, 32, "Text",ExpressionUUID->"5b9bdb75-9a4d-470b-8817-06a0fab17e7c"],
Cell[CellGroupData[{
Cell[78349, 1680, 2431, 67, 156, "Input",ExpressionUUID->"c22d16d0-2c99-4dbb-b70c-1370112f7cb1"],
Cell[80783, 1749, 169, 2, 40, "Output",ExpressionUUID->"43dc8a0c-603a-4fc9-ba3c-787449a866b6"],
Cell[80955, 1753, 172, 2, 40, "Output",ExpressionUUID->"92bee473-3adc-4167-8970-334b64094b06"],
Cell[81130, 1757, 151, 2, 40, "Output",ExpressionUUID->"735ef3c1-c433-44d7-b8d1-586e0daa9f12"],
Cell[81284, 1761, 151, 2, 40, "Output",ExpressionUUID->"f7d99dee-18b3-499b-8f7b-3143fddaa364"],
Cell[81438, 1765, 149, 2, 40, "Output",ExpressionUUID->"deffd4f4-d320-499d-bb80-a7cbd9aef704"],
Cell[81590, 1769, 151, 2, 40, "Output",ExpressionUUID->"65443396-943d-4478-ab5d-d3a7665b77fb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[81790, 1777, 144, 2, 38, "Subsection",ExpressionUUID->"932248fe-65c9-461c-8550-5428af74f32e"],
Cell[CellGroupData[{
Cell[81959, 1783, 3405, 96, 175, "Input",ExpressionUUID->"02a163b9-9519-47cc-90f9-cfad3f4c46aa"],
Cell[CellGroupData[{
Cell[85389, 1883, 198, 4, 22, "Print",ExpressionUUID->"9727c3e0-49e7-4da1-b9a9-e8e7d44a0a4c"],
Cell[85590, 1889, 198, 4, 22, "Print",ExpressionUUID->"d38769d5-92a5-4c8d-b9f1-22c3af3bdeb6"],
Cell[85791, 1895, 198, 4, 22, "Print",ExpressionUUID->"169f113b-0dff-4a5c-b479-d74c1e98f11f"],
Cell[85992, 1901, 198, 4, 22, "Print",ExpressionUUID->"637fc18b-6565-407e-bd98-4b600572a697"],
Cell[86193, 1907, 196, 4, 22, "Print",ExpressionUUID->"1a2c5a6d-8d36-4ad5-8f68-be23b69ddf99"],
Cell[86392, 1913, 198, 4, 22, "Print",ExpressionUUID->"9d86cf36-5e75-4357-bec8-794ad71133cc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[86651, 1924, 120, 2, 38, "Subsection",ExpressionUUID->"fcec1213-6972-45ce-bab4-817491ae24a7"],
Cell[86774, 1928, 117, 0, 32, "Text",ExpressionUUID->"8680dcd3-b5b0-454e-a346-a6bfa0c79c72"],
Cell[CellGroupData[{
Cell[86916, 1932, 708, 17, 136, "Input",ExpressionUUID->"5e11cf74-9a3a-44a0-893c-26a3dd775a27"],
Cell[87627, 1951, 170, 2, 40, "Output",ExpressionUUID->"025f8feb-1a5a-4a2c-abd3-02c632b273f0"],
Cell[87800, 1955, 171, 2, 40, "Output",ExpressionUUID->"5afee3ea-9d33-408d-aaab-7d6207e9aec4"],
Cell[87974, 1959, 168, 2, 40, "Output",ExpressionUUID->"b239d461-13f8-4177-b2e3-3cee87955eed"],
Cell[88145, 1963, 151, 2, 40, "Output",ExpressionUUID->"3d16df90-3b6d-472e-8137-486ef5032bb3"],
Cell[88299, 1967, 151, 2, 40, "Output",ExpressionUUID->"26439ea1-00d5-411d-a3af-ced124271598"],
Cell[88453, 1971, 151, 2, 40, "Output",ExpressionUUID->"f56e949f-d418-4eda-b21d-3bf7cfa6664a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[88653, 1979, 156, 3, 38, "Subsection",ExpressionUUID->"778775f4-529f-46cf-a588-98dde876dbda"],
Cell[CellGroupData[{
Cell[88834, 1986, 2314, 64, 194, "Input",ExpressionUUID->"8551106a-8d2d-484e-95f3-7e8ea627f4bb"],
Cell[CellGroupData[{
Cell[91173, 2054, 198, 4, 22, "Print",ExpressionUUID->"9af847eb-b3fb-49e0-8f22-f40efa8cf274"],
Cell[91374, 2060, 198, 4, 22, "Print",ExpressionUUID->"dad0d151-79c7-4ce5-abf9-947d025ce5a1"],
Cell[91575, 2066, 198, 4, 22, "Print",ExpressionUUID->"7fbd3bf6-fb02-45f2-8e26-73bb4756aab5"],
Cell[91776, 2072, 196, 4, 22, "Print",ExpressionUUID->"6f5b2999-2e67-4349-aa90-47132cab542e"],
Cell[91975, 2078, 198, 4, 22, "Print",ExpressionUUID->"cec9955e-cff4-49c5-92eb-30bb4cd61018"],
Cell[92176, 2084, 196, 4, 22, "Print",ExpressionUUID->"a6148d03-b7a0-423e-b9b0-3a31da184a03"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[92445, 2096, 157, 3, 60, "Section",ExpressionUUID->"a89ca133-6e27-4b10-96b9-d28a95156208"],
Cell[92605, 2101, 344, 7, 53, "Text",ExpressionUUID->"556dece0-4165-4079-a085-66bc45597a9e"],
Cell[92952, 2110, 269, 4, 40, "Input",ExpressionUUID->"f34fabf3-f217-49ba-b45e-3f997b6e1341"],
Cell[93224, 2116, 333, 7, 32, "Text",ExpressionUUID->"6b3f7011-12ab-405c-ad5f-b960b69b99ec"],
Cell[CellGroupData[{
Cell[93582, 2127, 189, 3, 38, "Subsection",ExpressionUUID->"1119b08b-58d7-437c-9a01-dbcf406181c3"],
Cell[93774, 2132, 144, 2, 32, "Text",ExpressionUUID->"3cee7b44-30fb-4bc4-9731-ab15d8491b69"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93955, 2139, 117, 2, 38, "Subsection",ExpressionUUID->"525940fe-742f-4929-bd1e-ab02af038261"],
Cell[CellGroupData[{
Cell[94097, 2145, 865, 18, 79, "Input",ExpressionUUID->"12dc4817-2132-48ff-aa95-c258001c5004"],
Cell[94965, 2165, 301, 6, 40, "Output",ExpressionUUID->"773fb0d7-fd58-45fd-8cb3-94610b5ae7e5"],
Cell[95269, 2173, 299, 6, 40, "Output",ExpressionUUID->"94c7e0f0-18d3-49ec-8925-c0178e874ae3"],
Cell[95571, 2181, 259, 5, 40, "Output",ExpressionUUID->"8bbf0e9e-1dbe-4497-aca1-30c4f386c0da"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[95879, 2192, 155, 3, 38, "Subsection",ExpressionUUID->"11c789b7-b903-4fbb-b1e4-56174276b5c0"],
Cell[CellGroupData[{
Cell[96059, 2199, 1675, 41, 136, "Input",ExpressionUUID->"cedb7e85-a983-4a2f-a6fb-462b3357aa68"],
Cell[CellGroupData[{
Cell[97759, 2244, 220, 4, 22, "Print",ExpressionUUID->"e90a5a1e-6287-4b3a-a57c-51b979b57635"],
Cell[97982, 2250, 220, 4, 22, "Print",ExpressionUUID->"0c63e9e8-28fa-4628-9417-9830c8254081"],
Cell[98205, 2256, 218, 4, 22, "Print",ExpressionUUID->"93beae24-7627-4e3c-acac-ec1951e94c32"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[98484, 2267, 125, 3, 30, "Subsection",ExpressionUUID->"b230ea41-813c-462e-9dc9-8c2af894c5ab"],
Cell[98612, 2272, 310, 7, 53, "Text",ExpressionUUID->"2aea00b2-cd01-4707-9e82-cbbcccf5c1b9"],
Cell[CellGroupData[{
Cell[98947, 2283, 1993, 50, 79, "Input",ExpressionUUID->"82567627-849f-4936-be7e-7659b0da989d"],
Cell[100943, 2335, 383, 8, 40, "Output",ExpressionUUID->"f90c63be-55e6-49e3-8875-391dd1146f4a"],
Cell[101329, 2345, 257, 5, 58, "Output",ExpressionUUID->"2b640118-8ed7-48bd-894a-b81ffbc3385d"],
Cell[101589, 2352, 269, 5, 55, "Output",ExpressionUUID->"a64fa3c8-ab84-417f-ab4a-3a2380464f11"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[101907, 2363, 156, 3, 38, "Subsection",ExpressionUUID->"fa415da8-4f23-43d5-a879-0577c8993dcd"],
Cell[CellGroupData[{
Cell[102088, 2370, 2251, 62, 136, "Input",ExpressionUUID->"f8ecc1ac-77ca-4cb7-969b-b4209275e31a"],
Cell[CellGroupData[{
Cell[104364, 2436, 196, 4, 22, "Print",ExpressionUUID->"594fdd0b-c822-477c-b9a3-758604156a38"],
Cell[104563, 2442, 201, 4, 22, "Print",ExpressionUUID->"7bdcf1f0-f6b7-42ed-abcb-c4d335f46939"],
Cell[104767, 2448, 199, 4, 22, "Print",ExpressionUUID->"1fe79966-d958-4a2b-b1f4-5f52e06a12f1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[105027, 2459, 125, 3, 38, "Subsection",ExpressionUUID->"93a48f1f-387e-4a01-83cf-f48ba3f3a457"],
Cell[105155, 2464, 172, 3, 32, "Text",ExpressionUUID->"e1c8f55d-b861-4547-b4c6-343d850f2541"],
Cell[CellGroupData[{
Cell[105352, 2471, 4092, 112, 136, "Input",ExpressionUUID->"f708ff33-2405-4521-b84b-49afb3e7a2f8"],
Cell[109447, 2585, 297, 6, 55, "Output",ExpressionUUID->"484e8abd-7699-4ee5-810c-b972796ce7b2"],
Cell[109747, 2593, 295, 6, 55, "Output",ExpressionUUID->"686e62d4-28ea-4d0a-925a-f786c0d66524"],
Cell[110045, 2601, 295, 6, 55, "Output",ExpressionUUID->"58b507bf-1ab8-4b5c-b400-f1f012c2af16"],
Cell[110343, 2609, 199, 3, 40, "Output",ExpressionUUID->"7aed813d-628e-4314-b3dc-c17566069f3c"],
Cell[110545, 2614, 200, 3, 40, "Output",ExpressionUUID->"b99b31ea-daf1-4cb0-bb93-1da719d268de"],
Cell[110748, 2619, 297, 6, 55, "Output",ExpressionUUID->"03a10b36-eea5-4adf-abb4-ed2d732da668"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[111094, 2631, 151, 2, 38, "Subsection",ExpressionUUID->"4b85d2ab-91e6-4785-8cc8-af0f300fd76b"],
Cell[CellGroupData[{
Cell[111270, 2637, 6013, 164, 251, "Input",ExpressionUUID->"845cdfab-3730-40fd-93ea-29e5f2180961"],
Cell[CellGroupData[{
Cell[117308, 2805, 217, 4, 22, "Print",ExpressionUUID->"d00cb6ba-1d23-4930-87f6-9e55ccd00264"],
Cell[117528, 2811, 220, 4, 22, "Print",ExpressionUUID->"8fe09a82-9b6f-4dc8-844d-e8e7cf21c3e8"],
Cell[117751, 2817, 220, 4, 22, "Print",ExpressionUUID->"d7e73a2c-1ba8-4850-8a32-ca2acce9c580"],
Cell[117974, 2823, 218, 4, 22, "Print",ExpressionUUID->"670fa94f-4770-4c7a-9ca8-029564f2c4ff"],
Cell[118195, 2829, 220, 4, 22, "Print",ExpressionUUID->"3c95baf7-4795-47fd-a925-9e5ba0300a74"],
Cell[118418, 2835, 220, 4, 22, "Print",ExpressionUUID->"4641b094-da8b-4b38-8f08-bc1d3476cbef"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[118699, 2846, 125, 3, 30, "Subsection",ExpressionUUID->"c5b22099-9755-4eca-8854-2775087fe9ec"],
Cell[118827, 2851, 187, 3, 32, "Text",ExpressionUUID->"2882a4ca-71cc-4977-b220-bbb151b5d5f4"],
Cell[CellGroupData[{
Cell[119039, 2858, 694, 16, 136, "Input",ExpressionUUID->"25f6aabd-4487-484f-95f4-16bc582c093c"],
Cell[119736, 2876, 246, 5, 55, "Output",ExpressionUUID->"e9a87213-46cb-466f-a322-645917f90b43"],
Cell[119985, 2883, 246, 5, 55, "Output",ExpressionUUID->"ad919df1-c54d-46bc-ab53-6eaae0fc8842"],
Cell[120234, 2890, 243, 5, 55, "Output",ExpressionUUID->"b6a57e3d-9096-47ff-88b0-c15024a57aa1"],
Cell[120480, 2897, 151, 2, 40, "Output",ExpressionUUID->"0bdd4793-6d7c-4c9e-bdad-5e9430ac2d55"],
Cell[120634, 2901, 149, 2, 40, "Output",ExpressionUUID->"92ebad6b-4cc1-4ce6-804d-ede8b466dc26"],
Cell[120786, 2905, 265, 6, 55, "Output",ExpressionUUID->"540227da-df66-4679-b5d7-423937ca440a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[121100, 2917, 157, 3, 38, "Subsection",ExpressionUUID->"3c4b921e-863e-4e5c-a1ca-22853727eab1"],
Cell[CellGroupData[{
Cell[121282, 2924, 2482, 72, 213, "Input",ExpressionUUID->"6531ad60-e43d-4149-ac8f-687529a06dc4"],
Cell[CellGroupData[{
Cell[123789, 3000, 196, 4, 22, "Print",ExpressionUUID->"f398b06c-c11f-46bc-8a5a-2690831bee0d"],
Cell[123988, 3006, 196, 4, 22, "Print",ExpressionUUID->"f0a3b786-8066-498f-a6fc-dec442b770bb"],
Cell[124187, 3012, 198, 4, 22, "Print",ExpressionUUID->"bbff52ab-02ab-44b2-91ec-e63082d6fdda"],
Cell[124388, 3018, 198, 4, 22, "Print",ExpressionUUID->"41c5531e-4195-45b3-9ab9-bc510b6513b3"],
Cell[124589, 3024, 198, 4, 22, "Print",ExpressionUUID->"d4b76406-3887-42ec-83bc-cc99bf85e8fb"],
Cell[124790, 3030, 198, 4, 22, "Print",ExpressionUUID->"35377063-a488-41b6-b157-b06ff2413201"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[125061, 3042, 390, 9, 60, "Section",ExpressionUUID->"6fdf6373-49b3-4f70-a72f-aa25eadebe02"],
Cell[125454, 3053, 108017, 1776, 512, "Text",ExpressionUUID->"2ceb6389-f772-423f-a583-9ca9f64e8bba"]
}, Open  ]]
}, Open  ]]
}
]
*)

