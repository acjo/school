(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    343573,       7512]
NotebookOptionsPosition[    330447,       7303]
NotebookOutlinePosition[    330931,       7321]
CellTagsIndexPosition[    330888,       7318]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Homework 34-35", "Title",
 CellChangeTimes->{{3.4494958633871603`*^9, 3.4494958666840987`*^9}, {
  3.8005017770165033`*^9, 
  3.800501778164505*^9}},ExpressionUUID->"f1446c87-0f65-49c8-9ee0-\
60fc7aca1e39"],

Cell[CellGroupData[{

Cell["Problem 34.1", "Section",
 CellChangeTimes->{{3.4494958693872757`*^9, 3.449495879449969*^9}, {
  3.800501774643507*^9, 
  3.800501774699503*^9}},ExpressionUUID->"9c109a4e-7fef-4bc7-8d4f-\
914c2bab6e52"],

Cell[TextData[{
 "A ring of diameter R = 30 cm has six identical masses with m= 125 g \
arranged around it. The masses move without friction on the ring. Each pair \
of masses is connected by a spring of spring constant k = 2.50 N/m, as shown \
below. When each angle is zero, the springs are in equilibrium. Ignore any \
effect of the curvature on the behavior of the spring (in other words, you \
can use the arc length along the circumference of the ring as your distance x \
in U = 1/2 k x^2.)\n",
 Cell[BoxData[
  StyleBox[
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1: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
nc6gv2hO8YriliRirLhNsZdiMs1TN917bWJiYrbmhw8dOvSVj3/84/827Lxz
584t5XK5G/FrJ+LksBb088b887Jly2L9XmbNmnXjNY8//njp2WefLe3atav0
wx/+sPTWW2/VnD/4HnA9+O/5oJ2ozJHvCtoW/Y4KhUL1O8n8yu92feX3rO8t
iqtDv2uENH33iTqf3EpTjKi5bfKryzSnq+8nvt+V/u42pPCe+ncS9n1If/c8
GwCA6NoZE9k7u7torkqxU6fj5GYxtOa4t7z88ssPBTHhhkrOxPFKbFgK4sHS
ww8/7H39jBkzSl/4whduxKpZxspuU/w+bdq0pp9fxzzzzDOJvW9lbv148N/d
wX83Bv+1v5coJlMMtKPyO4+Tl51mUz/yprPr8LqZYuOw7zc7E3wffccK+96s
vIzlCb4XAPQ7N5c5Sm6yve/JpvS6hhgUixRM9rFR0/hx+fLlpeeee6705ptv
fhAHhsXLDzzwQGnfvn2Zx8duU55G3M/+yCOP1HzmhNs15WdX5qV3FIvFEWtO
WnnoeXOz5lqzprlHxVM7zc0cdnueeH7lz/QsQ7G51j9GrQWi708577/gwaPv
OmG/N9UWTCLP+Jjn3IrVyccAgPji5ia7x4ftrf2EKc9Bu3UDlAdCnJ0suwZt
o6a6EhpDtVZLz/RHTDnPsdGe0dX4aLhyfM6UYynlfWgec9K0OJep+ePVq1eX
1q9f7/25chg0/xwjbrwYxI1ntb4v+P+Lih81nx207VoTqDjSbsp10LpBuwXH
1q2P05+5x91yyy1/4fZ3+vTpf//Lv/zL/8PChQtD/y6UX/Lyyy93Mr4/E/T/
jaBtUr9Nea/EKH8/qh0SNzdd599myvF2s/OrlkTTvJ0BoH9vYb8v/Xk76wPW
e86peJk8cwBojb3+r9nef2LXcT7q+bni4eo8tOLl6v1ZsfXz1mvJg05Go1xF
Na3J1/q8RnFxbEEMuiKIx7YFsdiocgU0f/qd73znRg6C5lMVGzboU9Pm5DJc
C5rW+70b/Hd/EPu9WMlJWK040JpP7ZRhT5/1e7bj7dAaeVOmTFFsrRzljZXP
sj9o71Ti/atpxc/KnQ6+p/zc16eQpjnQVuNafRfT9yq7RoPbtBZR9SQGvW6D
Pr9qlST5d6DnTr7vbsxXAEDr7Jg5Sm5ys7yM6vl0nG8O2o65uX+3R8/Lw+Y0
Nf+b2NoezckGcdeuStx6JWqMprVuiqHj1Jq45557/vLAgQPP6D0nJiY6UYMr
rpyp7/d+z3H6+9F6L98aO/3ZDt/J9ZkrNfM2BW1nZZ743aBdaidmXrJkSd3v
+mMf+9j7X/nKV/501qxZYbFtu/OSsyufs1HsfNJ0ptZat9N3W9+/Ff3u4v4d
+GLwQmI9BYDBZMfMzfbA3mQdGxYTV8/3Ssg57NwO9tyORut09LtX/KVn5pPm
Zu0xX4yTa/cNFbcpn0HzyEG8dbndOU7VuvjGN76h+Pkfb7nllvc9/Xab5s4V
a3VjvQXtEeLrs/JefP3VusywvNVcnDfWnLrm15VvUpmfPhnlO4zyQdz3Vgxd
XVepvx+ts5w6dWpY3Lwq3q+ojp4FKI5rtC9emrXWeoXyKXxrA69VfhbFOs/r
lT/F/jMA0J44MfN7MY4N80QC5xgEipO1j1zc/aI1J6U1WbH25Z2cnJyuHN8g
ftpTWUuWRD7AuaAVlX8QxN/rK/m0orhS3wHCatW6sVQ3rlcKe5aunCPfs3TN
t056jlcM2XasWPmOs76S61FQHrP9d/Hoo4/WvK9yyX1rK7/3ve9582pUO3rB
ggWfaLefpvxZw/7e06q11mt07V8wrc35Dxn/+oKtKfUVAAZJ1Jg5yhxzFAes
8zTbb3AQKaZQbeM4cXKjeFPr/bz1vUZHRxcrJ/ntct2ydvNor1XmPBVzb4iY
Y5yL8Vk0vz4U5xfZAcrF9c2bak5QMfUS53jlrfrqGGhOPfHcBP0dBH8f61ST
bt68ef+f/Z5aexn2d3ngwIHS/fffX/d38NGPfvT9So7Idv3baaNr+s6ktYhh
OSvd+B2p0/TvQTkrceb89Xv17dV+PO3OAsCAsNflhcXMim3tPOYnWnwvO+4m
l7nWkPHHU0m0D+p7VeLkHZX4tp0Y+Uol1t5Z2WujlRyKnKevjfYoVLzQbWvG
FN816rPmll+rHKf5Q+V1+OrlKncjzTyUmvj0q1/96r9plB+tNZ2LFi2q+zxf
+9rX7OP0b2hHG/FzWI1i4uYyfdcN+44V9fvYBUNOBgAkxa7P7Kuboflke+4i
7h4mirc3mZt7Df7ERKsBPSg01mkuOMp+1ool9FxbcdipCMfXtA9/+MNXDhw4
cL3VGDmIsY69Xa6VkVSNsFWefqrWQt40XzOWaB2QNulzKDZp97vN9hT76D6v
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
z8fo+fnlqqzHox4ctwAkJOv7Sg/de+z9UaI0YmYAWThmau9FJ7PtTrKyHo96
bNwCkKCs7ys9dO+x9+EmZgbQjdy9rELrjPaqrMejHhu3ACQo6/sK9x4ASMSQ
qa/DfCrLDqUh6/GIcQsYXFnfV7j3AEDbZptyfOyu++u5vbGbyXo8YtwCBlfW
9xXuPQDQlulBO2HqczK2Z9mptGQ9HjFuAYMr6/sK9x4AaIu75q9U+bO+lPV4
xLgFDK6s7yvcewCgZarH78bLqpMxO8tOpSnr8YhxCxhcWd9XuPcAQEuGTf1e
f+eCNj/LTqUt6/GIcQsYXFnfV7j3AEBsWtt3ydTGy1dMH675c2U9HjFuAYMr
6/sK9x4AiGWhKc8nuzkZG7LsVKdkPR4xbgGDK+v7CvceAIhsZtDOmPp4OZ9h
nzoq6/GIcQsYXFnfV5q1eZ/8NbvWqMaKYtBeDNoqU66xBACDomDq4+Vipj3q
sKzHJGJmYHBlfV9p1mYtWtpof+qLQdtpys8qAaCf7TH190DVZR6UuYO5QVu3
cE2udNdDnyvd/rFHSrPv/WRpzkd+qXTn8s+U7lrxROlDn/6npY89s6/0T775
TuZjV9a/LADJy/q+0qwt+9q47j2TJjxuVrtmyuPJzIx+jQCQpr2m/r6nnOa+
rSlXsSJou40/fzu0Tb/t9hvPKO//9VeImQEkJuuYOMa9Z0vQLpjG90r9fKTz
v0UASIXmkH17lqhGxlB23UqV5j5yxp+3Hbvdds/9pY9s3E3MDKBtWcfDMe89
upeqhv95E36PVL3SjR3+NQJA0sLiZa3tWJ1hv9KUM/U19BJpdzywurRs+1Fi
ZgAtyzoejtLefvvtHU63NZbkTHjsTNwMoNcdNPX3NsWTK7LsVEq0P8tp0yQH
b+7cuf+nci6Ut3zfky+V7t/0gxtN88iLfvW3b+Q1a1457BzTf+HOG8cTMwNo
RdbxcMSY2Rc3i2LnvCnnM/vi5lWd+j0CQII2GX/uWT/uWaJ7u7ufobvOcevv
//7vf1djQZQxY+nWt0rzf2lDacr0W+rON2XqtBvxNTEzgLiyjodjxMxqe0I+
xnLjf56neeh+XyMDoL/onuXez/S/+60+kOY8VCfPO6dsynX1bnxHGB8fz1fH
gThjh9aQa+7Z9x6aqyZmBhBH1vFwzJi5FNw791a6rnFF6wLfMOV760njv/fu
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
nYtt+fLl/8Pd3tXRGSYtNKx6Ym7O/Y6M7eXHnDb+nMp4Xa6Cbp4wvX2ftul6
CKG3JpxxfJSxvb4Ln27up06vWVhYaEQ6eCZnjfILsUd33XXXH3nGEuuyQaF7
Crc2et/nYEyI69H5vpP/bnLEoAEA1IS4DrOvB+A509kzZZDE9VI/HMKx+kH6
Q8/Bi+TDlWLS1bt27Wr+9Kc//WPlVrV7pQwaV3P5/Mw+dL4UY+vrsavvOrTv
yo05ifW87nPc+wSf6ToYdn2Q2z3jyNLu+h7c2Bk9o+gppkexF4rPj+xsXp3c
1srS1TPS2e1jurXeZGd7HU9OkuqknRvQ8UYV3Qe71zzxGAAA1aJhLmqqF8MO
pSfkJ9Vz/az+MqXY2rVrl7Ty0aNHfbrkDWmZnHU3ijDnjEcauhe9kZR/P13q
KHtDOtPV8opZvtTZRloi7RmD9jHMWmW+cWfVCxO+WhuZ4+5DJ3/ajtfY7cln
nfCMRSYtXWbci+4vfNfdpwb/qQ/FxrmxGjpXuu8NfX8LAACd8aRZz/yritYa
6Q/FMusZcJ58uEzbvHnzx6rP9b3vfS+3Vmlrm7L1s9trWNZr7pR8na5/XnEF
odbihun+TGn+Wo1fdbp92lm6Iq/vvQxc//hCzve5/l1vzbBI514T2SO96uS2
Vlb+38GM689X780+l3ru1E+cvvTwfMr+61CPuR+U3+te5/I57wo5KAAAuFCv
QHN0r709qow0lp7bKy9O9ZmmTev+YM4x+TCleXzr+6nZ2dl7Ig0ypx4PveoX
aZ5IwzxRQvyG/ISuv073Bb3qmt2ezzjoWPkkGp6xNHK8T5/ZF1tQ5D6iKPtN
tw7MUwvDrc17Kn6hHZ+8J7IzOXtZd/QfiWxB9eVyjEH3l0m18FzTvYF+M9Jq
uoZ984O0uTSyYpP1ezqfsj/0cn7k7/dd58pzrkL9GACAuqF5OZ6LzwYeS2jk
w/St89IAD7T7pDxRxPfXtncjO6IaB6obXWB8Pr1bpG6Zq2kGXVs6CZ0D15d2
KOd7dQ8Rx+Dbpv0No6aGzrkbn5Gn//O0/Z6rrrrqj6Nraja6Lt4ueE2pdqLq
j/dS78bn/02r81eW6brLo+nhIrrO9fzEvceJnwUQrwEAMDxsv1devTLOJOnm
+J5iKQYzjjGNtMq5glpHfsEzCwsL+06ePNmLz8jXQ1fjyqubtZ2bZzTdw/HL
xvXvSwtM9PB+3/f1ZrlDTMTNa9PYU/X6qlWr/tB+z86dO4vq5KK5p776yLrv
kv84Tz30IqbzohiUKtWUUy6E8qvjukQy5UU8FnJQKeh368ujlJbWdzpOzwcB
AKqKHd9ahdpjVUCxCkk12mTSrfL5LuVVSbtIw7S1TBENJHs/shcjeyCjZ7F0
h68HnXRPVpyGtLnrY5Y9VOAclcUOz3h07nuJ23zRs49hXMvSrK7GlL+2EW/Q
jkveHdmxI0eO/Fe3luHXv/71YejkmCnjr59inyv5qw+acvzOujebNtXqoaM6
RW59IteOBhtdNrpn1z2yO2Z9X/redH0o9gX/MwBAueg5qe2voO7TRZLqTLia
QL75C77FkvRzHMehGOo9Hj+04kd9mkbxzT6tqHVWfUB8ekn7Ce3/mzX+86tz
m8d/pm3c3MZjAxlpN258cvPyyy//k9nZ2Z/b8Rbz8/PNLVu2dGy3fPny5vPP
P596DagPZY/PIXwkxbHIZhLeo3Oq60ZxO4qfzZNTq9+DfKHKX6vi/bdq39t+
5ZPmYj181fO06++EivHPi8bnu/+NTa8NqoYPAEAdsZ/1jVKNuWEh3SDNkCdf
Sr5f+XmkFZbuPSK9c2Nk+yNbLJDT5dpHr7Tqhml/29etW6e13le/+FNrHIcT
trH9uVXQNjpfSX3JtfbnyRlzteviQEZqMTc3t/Lw4cN3XHXVVV33L6tWrWru
3bv3wvd33333dX22O+64o+M7bl8jipU/ePz48bJisrUfXw1sWd5aHzH6PTQ8
NgraTP5lWy/7fMkbrdfPDW9ohdH3odzmpFr1Vdf9AACjgvyott9xVGvMDQM9
r5b+TIvXsE0aW3pEMQ8N7UA5f/Ez+nYtsH7081I89JEjR/59pJ3/NOeYfD7B
YfT8zoueJSfp5mb7tbRrdNrZvlTNrO9vfn7+dvn9o+/vcFvbLtVRUb3u6667
zjvurVu3Nu+5556uv0tTv/DCCx0xOcoxLXHI+m7njP/Zgkz3y3V6riSfsu1f
TsL2NY8SemaoOUrXvX4r06Ze3y8AwCDRehqvDb32x6gr0jTKt0l7JuozPddW
bIT8v/KZbn300Ue3qwZHZKdfyVnD7ic/+clSnehvfOMbzQcffLB55513Nq+9
9tpetbI0lL77XmttDANdg0lxGrHJn6+aZnY8ie5pXF9voXxW9f6Qjzf6Xiaj
cz7T9u1n3uOk6WafffnLX/7Heg5RZIwp6Pzp+lrMOP50ycetOveai5/9l6bl
c07CjnWuwjMYAAAIi56l2v6nJ8IOZ+SQNlEOoGp25fU9+0z5Y29dcskl/+rK
K6/8o/Xr1/+XjRs3/q8bb7zxLzZt2tSUSYetW7euuXr16qLHWLJly5b95bZt
2975/ve//zvtenl3S7MpvmDQJ6sA8if78hzdc6f7kCnjr2GbGNugz6zPrnPw
Sqse8kz071ORvdVPDM1LL73UjM5xnu9D+v6R9hj7vVdtmNY9hPzGWTFEer2O
td7smIynM7ZFMwMAgI3tY9Y6GjoHbJSR5pR+1jlNix0Obtdff/2Sj1r5aE4c
7QevtHp/LyjnTP3nItuhfMaMGh6DRFpSWrDnfo4rVqz4fY1dn6H9WfSZ5l9p
9Zf5oIS4GK/98Ic/VBzG/9X9SQ/jlfZXPICun2nTyp+bSjC9rly++fZ78t6v
1bmWr90/M8vHLOzYDDQzAEC9kW/L9jEfDDucsUN9B6dNK+9qELVuE23t2rXN
2267bSm3TDUZkrZTPMdXv/rVOJ42l7W1puo4LEb/fTWyuej/p1Vf+vjx41Py
2Ub/P2FZw2dJJy1pe/VgvOmmm1647LLL/lve83DllVc2b7311qX4lWeeeWYp
bmIQGlmxMnv37v3TL3zhC++sWrXqfw7zu85puv4UV1+luPVhY2vgPDXk7PO3
JWNbAAAYbxbNxTVBz4ir+Gx+XJCvVPcoin2RH1HxBkk5Wb3Yp5EmfjfSyP/u
5ptv/tcPP/zwv/3BD37wn2w999xzzzU3b96cuh/pam3z+OOPL8UVDMr/WobN
zMw0N27cWPicrVy5csnPrtgJaek9e/Ys1bU4ePDg0rlSzbck+853vtN86qmn
mlNTU39y5513/mLDhg3/MdLwf9bD8RVDcq7o2AuY8hPkr+6lN+A4YtfByKOB
3e0BAKC+6Fm3vSZMBR1NfVE8uWrf6rmxcgqnLVPNv7m2HWr/bcq0anBMmJT+
EIrTjfTl1nY8wmH5hL/1rW/9H2lFk6Gz1GtD8dOTk5NLeYahNbJ84NK0O3bs
WPKfZ42/orZoOp/v63vXb/A1U24cj+KrpMt1LQ2jb/iooJ5+8Tl6L8f2bq4g
AADUE63Xdo7QG2GHA8NCfb6/+MUv/sN169a9Y3LqMNVCkw96165dS9r18OHD
A9PHip1QDMXDDz+85AfuRSPHcSaKR6mIttZvTLHDefqQyA+sfof72+9RHIV0
turtnnfsXPu1OdOqLbKv/d5GjuPUFTufL09cxtPW9q8PcFwAAFBt5NuK1wPF
B2xt/53YjHoh/7b0Wc+5dTLp0s997nPN7du3L/XpuP/++xWzsBTrIJP2VbxD
bIr7iF9TTIRqFeu98mlL70qbFxmH4jS0TzefUf7pb37zm/9v586df95oND5e
sWJFGbEwWaa6HeqnN2Go2Vgl+vlOnw0wXgAACM+U6VwPZtt/39f+t2rg99uf
F0aLuF6eapQNNVexqK1evfqTbdu2/eLAgQP/RPmHqpmn/EPlHComRTmDCbXz
9IxF9esUF6G+D4pjkM9W/tu89w7aVs9mXmvvQ/vS/Ucda1GMAoqJ6ed6o4ce
AED9cGMylB8U6wq737D8cftCDBCCo+tBmlK+Ul+t41AW94JR7MKgaz/od9Lw
WN3z6EYVO5Y5T2zyFtN57W0c3NAAAKCi2DEZstut16SVzjqva/sNQx4jVAvV
65afTvU+lJMoHT3oGAfVcDltWj7cKVPv+mjQP73GJtvbnxvguAAAoJq4dTKO
eLaRbp53tpNfWjn4xGaCje6lpKVVw0N1veMaH4rtWTQX4x1sO2u99mr7PdOm
dW2qzzPxDTAI7Py/rN5/wq4F+FgPx5F/+lnr/b28FwAAqkHDdPYJk35J6/f3
kOnuK6b4TWpXAcCoYWvmrNjkInEZW5xj6P+fznEsAACoFvIPuzEXEzne1/C8
T8/kFfdMfQ0AGBVsPZvVA/uo6dS+Wdix0tLJWf24AQCguti5fUkxGUlIbyvn
yq2loNzB21PeBwBQFfJqZrf3X5a+ftZczCuktzYAwGijWAo7X0taNy0mI20/
bg0F7Vd16vA5A0CVyauZe/Ex230C7y1hjAAAEA5pWWlkW+NuTX1HOvI5z5ju
mgk6BnHOAFBVTppszez2yk6LY766vU2zvW8AABhtpG9tbVtWvWWtOedNt895
2lBbAwCqhxtz7KK4il9a22Tl7tn7IyYDAGC0UfyFHYO8WPL+VQ9swXTqZply
BqnnDABVwvYL67/3Wn9/zPSml0VcS+699j70ntfb/45rOivOg14oAADVx+0V
e/eAjjNlumvSfTTA4wEAFEG6Nq2Pjq2l07jaeo+08XsmfZ/4oQEAqo38wLGW
/cAMtk/EDaazB0Bsig0hVgMAqoJ8CYo/tv3K8g/L15y3Rpzrj5Bmlh7fYr3u
1moGAIBqs9m0epMMo6+a8g3nTLduVu/ta4ZwfACAYWBr5iQ9LP1t+5/xNQMA
gMsjpruW87umpd8BAEYdWzOn9eF+2tqOWnQAAOBDa4riQWzdrDiRXSEHBQBQ
AkU082NDGBcAAIwminH29UA5FHJQAAB9YucA5tXMWf0EAQCg3qje3WnTHeN8
JrL1AccFANAPcc7zuZRt7L7aefMLAQCgvqhuxmHTrZsVu0E9OgAYReyegb78
PrsedJovGgAAwEW1mNw6zjLp6SsCjgsAoAhxL0C3rrPiMGI/9NEA4wIAgNFH
tTPeMt26WX24p0z1aznfaFp5jMSVAIDw1XtWjbmjhhhmAADoD/mUjxl/zyzV
pFOtupXBRpfMA6aVw6hxqpbefGRbg44IAAAAAMadCdPyL/u0s3pvHzHV8tMo
b9E3VtUG2R1wXAAAAAAw3sifrNpzbg8U296ObL9p1a4Lia/Hoaud1XOx6vEl
AAAAADCaKD5YuYC+HEFXlx40YfSz+o/HeT1ppviSKYN2BgAAAIDBoFjnJ4w/
T9A1bTMT2Q4zvPhnjW8hx9iqHpsNAAAAAOPB7ZG9GNmHJlufKrbjtcj2mFZt
i0Gzz1zMB8wy1aHWfQB+ZwAAAAAYFNKaqu92yqTHPbs6VfHHU5E1BjSuW0wr
1jrPeOyYDQAAAACAQaLYCOXZqc5bVuyzW/9ZGlqxEmX6oa8w2bmB1NkAAAAA
gFDI/6xYZuUO9uLvjf3Q8ls/aVr+4n6Rju9Fw8tUu24YcSQAAAAAADEN04pn
Vo6e6jv3ol+1/aumFaesmtBF8vZUyyNPXQ03Dnu64PEAAAAAAPpBPmjlEKqu
82nTuw9Y+X1vRDZrWnEUq3s4bq+xGjL5yScKf1oAAAAAgP7pV0PHulZ1PBQT
vTnjeNomb76irdMPlvBZAQAAAADKINbQisVQTIbim3vV0HE8h2Kit5ruWnLS
1e8X2K9q5l1R+icGAAAAAOgf5eMpHlo1Oc6b3rWufNfyYe8zF3P71N8wKcZZ
2ydp9bfb7wUAAAAAqDKNyCYjO2Z6r8shkx5+sb2PUynbJGlqxVPjbwYAAACA
UUJ+3wdMq7adaizn7QPYzNhWr8mv7Yt/XjT0DwQAAACA0UU+4LsjmzG915hL
8jn7/r5vWB8IAAAAAGDAyA+tOIw5UyynMMnkf94wxM8BAAAAADAs1F9QteMU
x9GLRj7j+duhIY8dAAAAAGDYXGNasdCK41A+4FsmuUb0A6Y7Z/Dt4Q8ZAAAA
AKASxDHR6vetmOjp9t93mW4tDQAAAAAALRqmVWfO1ssfhRwQAAAAAEBFUA6h
6tj5as4tBBwXAAAAAEAVeCSyD01yv8Abwg0NAAAAACAou016XQ3p6O3BRgcA
AAAAEAb19VNtjKwadKqdQV1mAAAAAKgTqpHxZGTvm3StrH7Z+JYBAAAAoE4o
t2/WtGpfpGllaenJQGMEAAAAAAiB/MrTJrl3SWzqsy3/88ogowQAAAAACIN6
kpw36Vr5XYNWBgAAAID6ofy+OZMdr7yrvS0AAAAAQJ1QLIb0cJJWfjWyrcFG
BwAAAAAQFvmMTxu/VlYfbOpgAAAAAEDdUV0MVyt/Gtk+QwwGAAAAAIB8yL5a
GPiWAQAAAABanDGdevmTyG4JOiIAAAAAgOqw2nT7mKdCDggAAAAAoGJsMJ16
eSbscAAAAAAAKsmCafUn2Rd6IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAANDN/wdn1t3X
      "], {{0, 579}, {717, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{309.7599999999977, Automatic},
    ImageSizeRaw->{717, 579},
    PlotRange->{{0, 717}, {0, 579}}], "Text"]], "Text",ExpressionUUID->
  "cff5096d-363d-46e4-8598-479e6243cbd6"],
 "\nFind and describe the normal frequencies and the normal modes of \
oscillation for the system. Use the angular displacement from the equilibrium \
angle for each mass as the coordinates. Call these theta1, theta2, etc. The \
ring is horizontal so we can ignore the force of gravity."
}], "Text",
 CellChangeTimes->{
  3.449495900137866*^9, {3.7663363540966597`*^9, 3.766336364037057*^9}, {
   3.8004939397065597`*^9, 3.800493941874463*^9}, {3.800494973436158*^9, 
   3.800495064123505*^9}, {3.8005018617825313`*^9, 3.8005018975875397`*^9}, 
   3.800507830966062*^9},ExpressionUUID->"fdf18404-c5eb-45e3-9b9b-\
e3876f509a07"],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.4494959022472816`*^9, 3.449495903200425*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"4795378c-c283-4576-a89b-909817144e7a"],

Cell["\<\
To solve this problem, we will need to construct the appropriate matrices \
that represent the equations of motion. There are two approaches that I would \
suggest. You can do either one.

Approach 1: Construct the Lagrangian and find the equations of motion in the \
usual way. Since this is a bit complicated for all the masses, let us begin \
by considering just a single mass; let\[CloseCurlyQuote]s say mass #3. Find \
all the terms in the Lagrangian that contain theta3 or theta3dot. Then find \
the equations of motion for mass3. Based on this result, you can determine \
the corresponding equations of motion for all the other masses just shifting \
all of your subscripts based on which mass you are considering. You can then \
put together your matrix equation. If you choose this approach, complete the \
cells where you write down the Lagrangian and equations of motion for \
particle 3.

Approach 2: Read off the components of the M and K matrices directly by \
looking at the form of T and U, as described in sections 11.5-11.6 and \
Lecture 35. \
\>", "Text",
 CellChangeTimes->{
  3.449495917481949*^9, {3.800495073864547*^9, 3.8004954289993234`*^9}, {
   3.80050181629257*^9, 3.8005018411315203`*^9}, {3.8005019297305536`*^9, 
   3.8005019490875597`*^9}, {3.800505943211952*^9, 
   3.8005059435149503`*^9}},ExpressionUUID->"7a483ff8-b5a9-4625-b938-\
356e98b0a7e9"],

Cell[CellGroupData[{

Cell["\<\
Preliminaries for approach 1 (complete this if you are choosing this \
approach; otherwise, skip to the next part)\
\>", "Subsection",
 CellChangeTimes->{{3.8004954468833995`*^9, 3.800495471960415*^9}, {
  3.8004957018656936`*^9, 
  3.8004957044718895`*^9}},ExpressionUUID->"a057ff0a-b564-4958-b5bf-\
3f2f1d7b4b7e"],

Cell["\<\
Write down the terms of the Lagrangian containing theta3 and theta3dot. Call \
it L3. Then determine the conjugate momentum (p3) and the derivative with \
respect to theta3 and use these to generate the equations of motion for \
theta3.\
\>", "Text",
 CellChangeTimes->{{3.8004954852035165`*^9, 
  3.800495565502659*^9}},ExpressionUUID->"43d087dd-58e3-4782-96d6-\
5ee7f3bc62ac"],

Cell[BoxData[{
 RowBox[{"L3", "=", "\"\<????\>\""}], "\n", 
 RowBox[{
  RowBox[{"rule", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"theta3", "\[Rule]", 
      RowBox[{"theta3", "[", "t", "]"}]}], ",", 
     RowBox[{"theta3dot", "\[Rule]", 
      RowBox[{
       RowBox[{"theta3", "'"}], "[", "t", "]"}]}], ",", 
     RowBox[{"theta2", "\[Rule]", 
      RowBox[{"theta2", "[", "t", "]"}]}], ",", 
     RowBox[{"theta4", "\[Rule]", 
      RowBox[{"theta4", "[", "t", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"p3", "=", 
  RowBox[{"\"\<????\>\"", "/.", "rule"}]}], "\n", 
 RowBox[{"dLdtheta3", "=", 
  RowBox[{"\"\<????\>\"", "/.", "rule"}]}], "\[IndentingNewLine]", 
 RowBox[{"eq3", "=", 
  RowBox[{"\"\<????\>\"", "\[Equal]", "\"\<????\>\""}]}]}], "Input",
 CellChangeTimes->{{3.4494959372479534`*^9, 3.449496016546351*^9}, 
   3.449496080969463*^9, {3.4494961912997065`*^9, 3.449496233784897*^9}, {
   3.4494965086651745`*^9, 3.449496511383977*^9}, {3.452899432515625*^9, 
   3.4528994460625*^9}, 3.8004954764781656`*^9, {3.800495560528961*^9, 
   3.8004955610249662`*^9}, {3.800505954680958*^9, 3.8005060160029793`*^9}, {
   3.8005060982470136`*^9, 3.8005061598840394`*^9}, {3.8005062116330614`*^9, 
   3.80050621541706*^9}, {3.800506376911171*^9, 3.8005063899741764`*^9}, {
   3.8005066499929314`*^9, 
   3.800506672451936*^9}},ExpressionUUID->"acefaeba-602e-430a-93f8-\
d2f5c7422bef"],

Cell["\<\
From the equations of motion for mass 3, you should be able to generate the \
equations for all the others just by shifting the subscripts. Once you have \
completed this part, skip down to the part where you construct the matrices.\
\>", "Text",
 CellChangeTimes->{{3.800495620996358*^9, 3.8004956454396644`*^9}, {
  3.800501992018569*^9, 
  3.800502000449572*^9}},ExpressionUUID->"a2890c51-fab4-4f45-9785-\
e329e3cbc82c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solutions", "Subsection"]], "Subsection",
 CellChangeTimes->{{3.4494960531251783`*^9, 
  3.4494960617972198`*^9}},ExpressionUUID->"996547ec-7268-4a38-844a-\
bdcc0a2e36cf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"L$", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"m", "/", "2"}], "*", 
     RowBox[{"R", "^", "2"}], "*", 
     RowBox[{"theta3dot", "^", "2"}]}], "-", 
    RowBox[{
     RowBox[{"k", "/", "2"}], "*", 
     RowBox[{"R", "^", "2"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"theta4", "-", "theta3"}], ")"}], "^", "2"}]}], "-", 
    RowBox[{
     RowBox[{"k", "/", "2"}], "*", 
     RowBox[{"R", "^", "2"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"theta3", "-", "theta2"}], ")"}], "^", "2"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"p3$", "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"L$", ",", "theta3dot"}], "]"}], "/.", "rule"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dLdtheta3$", "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"L$", ",", "theta3"}], "]"}], "/.", "rule"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"L3", "==", "L$"}], ",", "R"}], "]"}], "]"}], "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"{", "}"}], "}"}]}], ",", 
   RowBox[{"Print", "[", "\"\<L3 is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<L3 is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"p3", "\[Equal]", "p3$"}], ",", "R"}], "]"}], "]"}], 
    "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"{", "}"}], "}"}]}], ",", 
   RowBox[{"Print", "[", "\"\<p3 is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<p3 is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"dLdtheta3", "\[Equal]", "dLdtheta3$"}], ",", "R"}], "]"}], 
      "]"}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{"{", "}"}], "}"}]}], ",", 
    RowBox[{"Print", "[", "\"\<dLdtheta3 is correct.\>\"", "]"}], ",", 
    RowBox[{"Print", "[", "\"\<dLdtheta3 is incorrect.\>\"", "]"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3A$", "=", 
   RowBox[{"eq3", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"theta3", "''"}], "[", "t", "]"}], "\[Rule]", "Dth2"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"theta3", "'"}], "[", "t", "]"}], "\[Rule]", "Dth"}]}], 
     "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3$", "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"m", "*", 
       RowBox[{"R", "^", "2"}], "*", 
       RowBox[{
        RowBox[{"theta3", "'"}], "[", "t", "]"}]}], ",", "t"}], "]"}], "==", 
    RowBox[{
     RowBox[{"k", "*", 
      RowBox[{"R", "^", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"theta4", "[", "t", "]"}], "-", 
        RowBox[{"theta3", "[", "t", "]"}]}], ")"}]}], "-", 
     RowBox[{"k", "*", 
      RowBox[{"R", "^", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"theta3", "[", "t", "]"}], "-", 
        RowBox[{"theta2", "[", "t", "]"}]}], ")"}]}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3B$", "=", 
   RowBox[{"eq3$", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"theta3", "''"}], "[", "t", "]"}], "\[Rule]", "Dth2"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"theta3", "'"}], "[", "t", "]"}], "\[Rule]", "Dth"}]}], 
     "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aA$", "=", 
   RowBox[{"k", "/.", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{"eq3A$", ",", "k"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aB$", "=", 
   RowBox[{"k", "/.", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{"eq3B$", ",", "k"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"aA$", "\[Equal]", "aB$"}], ",", "m"}], "]"}], "]"}], 
    "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"{", "}"}], "}"}]}], ",", 
   RowBox[{"Print", "[", "\"\<eq3 is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<eq3 is incorrect.\>\"", "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.4494960888602395`*^9, 3.4494961864246125`*^9}, {
   3.4494962493476954`*^9, 3.44949627247314*^9}, {3.452886028140625*^9, 
   3.452886070359375*^9}, 3.625590817146411*^9, {3.8004955875603294`*^9, 
   3.8004955885243473`*^9}, {3.8005062508670797`*^9, 3.800506275106085*^9}, {
   3.800506331732154*^9, 3.800506334832144*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"b5f3452e-9b9f-48d6-a2f3-583afcefa81f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Preliminaries for approach 2 (skip if you chose approach 1)", \
"Subsection",
 CellChangeTimes->{{3.8005019641915617`*^9, 
  3.800501977742565*^9}},ExpressionUUID->"5c93ab8c-0931-4c38-b0c3-\
67107a047038"],

Cell["\<\
To make things manageable, write down T and U for just one of the masses; let\
\[CloseCurlyQuote]s say mass 3. Expand any squared quantities you have in \
your expression for U. \
\>", "Text",
 CellChangeTimes->{{3.800501979517562*^9, 3.8005019839275618`*^9}, {
   3.80050201934594*^9, 3.800502031826893*^9}, {3.800502094905915*^9, 
   3.8005021077709093`*^9}, 
   3.800502282428952*^9},ExpressionUUID->"e5dbc282-8136-4d7e-b2d7-\
bf3903a12f9a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"T3", " ", "=", " ", 
  RowBox[{"m", "*", 
   RowBox[{"R", "^", "2"}], "*", 
   RowBox[{
    RowBox[{"theta3dot", "^", "2"}], "/", "2"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"U3", " ", "=", 
  RowBox[{"k", "*", 
   RowBox[{"R", "^", "2"}], "*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"theta3", " ", "-", " ", "theta4"}], ")"}], "^", "2"}], " ", 
      "+", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"theta3", " ", "-", " ", "theta2"}], ")"}], "^", "2"}]}], 
     ")"}], "/", "2"}]}]}]}], "Input",
 CellChangeTimes->{{3.800502067616951*^9, 3.8005021124449406`*^9}, {
  3.8005021458239136`*^9, 3.800502253555938*^9}, {3.800502290960002*^9, 
  3.800502310432971*^9}, {3.800502463091978*^9, 3.8005024664359765`*^9}, {
  3.800506695477945*^9, 3.800506701725992*^9}, {3.846343404630465*^9, 
  3.846343530019312*^9}, {3.846343562815011*^9, 3.8463435769496098`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"97921327-a4be-4e35-95bd-c972117436b4"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", "m", " ", 
  SuperscriptBox["R", "2"], " ", 
  SuperscriptBox["theta3dot", "2"]}]], "Output",
 CellChangeTimes->{{3.8463434900232973`*^9, 3.846343530695607*^9}, {
  3.846343568986815*^9, 3.8463435773979187`*^9}},
 CellLabel->"Out[48]=",ExpressionUUID->"f59424f6-7ff5-4dc2-a23e-c59febf948f7"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", "k", " ", 
  SuperscriptBox["R", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "theta2"}], "+", "theta3"}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"theta3", "-", "theta4"}], ")"}], "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.8463434900232973`*^9, 3.846343530695607*^9}, {
  3.846343568986815*^9, 3.846343577401127*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"960413f6-91e1-4c34-b449-af7b62b4443a"]
}, Open  ]],

Cell["\<\
Referring to equations 11.51 and 11.53, we see that the terms in T have the \
form 1/2*Mjk*thetajdot*thetakdot, where Ajk is the element in row j, column k \
of the M matrix. Likewise, terms in U have the form 1/2 Kjk*thetaj*thetak, \
where Kjk is the element in row j, column k of the K matrix. Look at all the \
terms in T and U with a subscript 3 (i.e. theta3 or theta3dot) and read off \
the coefficients to identify the corresponding elements in the M and K \
matrices. HINT: The coefficients on terms in U containing the product of two \
different coordinates should be divided by 2 when placing them in the K \
matrix, since those terms show up twice in the matrix (i.e. in position j,k \
as well as position k,j).\
\>", "Text",
 CellChangeTimes->{{3.8005025193809867`*^9, 3.800502901743101*^9}, {
  3.800502940539071*^9, 
  3.8005029743530827`*^9}},ExpressionUUID->"b1f21724-0061-4e8c-8333-\
b9a61b57d14b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"M33", "=", 
  RowBox[{"m", "*", 
   RowBox[{"R", "^", "2"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"K33", "=", 
  RowBox[{"2", "*", "k", "*", 
   RowBox[{"R", "^", "2"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"K32", " ", "=", " ", 
  RowBox[{
   RowBox[{"-", "k"}], "*", 
   RowBox[{"R", "^", "2"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"K34", " ", "=", " ", 
  RowBox[{
   RowBox[{"-", "k"}], "*", 
   RowBox[{"R", "^", "2"}]}]}]}], "Input",
 CellChangeTimes->{{3.800502978907136*^9, 3.8005030280070963`*^9}, {
  3.8005067134389534`*^9, 3.800506723602976*^9}, {3.846343555448824*^9, 
  3.846343629441222*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"7ce35b0f-b006-40dd-8559-67838a7da52f"],

Cell[BoxData[
 RowBox[{"m", " ", 
  SuperscriptBox["R", "2"]}]], "Output",
 CellChangeTimes->{{3.846343620012835*^9, 3.84634363015259*^9}},
 CellLabel->"Out[66]=",ExpressionUUID->"4d5550e4-2627-4999-8c1f-cee6ab4e5ff1"],

Cell[BoxData[
 RowBox[{"2", " ", "k", " ", 
  SuperscriptBox["R", "2"]}]], "Output",
 CellChangeTimes->{{3.846343620012835*^9, 3.846343630155183*^9}},
 CellLabel->"Out[67]=",ExpressionUUID->"b05e76e3-cd19-4bdc-8d64-ea6743bd160c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "k"}], " ", 
  SuperscriptBox["R", "2"]}]], "Output",
 CellChangeTimes->{{3.846343620012835*^9, 3.846343630157504*^9}},
 CellLabel->"Out[68]=",ExpressionUUID->"2445f5af-a6de-440b-a500-18c739ac1fa0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "k"}], " ", 
  SuperscriptBox["R", "2"]}]], "Output",
 CellChangeTimes->{{3.846343620012835*^9, 3.84634363016005*^9}},
 CellLabel->"Out[69]=",ExpressionUUID->"77c3d00b-5d86-42e1-b699-63f77ef1102b"]
}, Open  ]],

Cell["\<\
From these matrix elements, you should be able to generate the remaining \
elements in the M and K matrices just by shifting the subscripts. Once you \
have completed this part, skip down to the part where you construct the \
matrices.\
\>", "Text",
 CellChangeTimes->{{3.8005032108962345`*^9, 
  3.800503241588626*^9}},ExpressionUUID->"ff733693-d196-4f96-94d6-\
1c2e1a22d755"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solutions", "Subsection"]], "Subsection",
 CellChangeTimes->{{3.4494960531251783`*^9, 
  3.4494960617972198`*^9}},ExpressionUUID->"5f5bec6e-8328-43fa-b47a-\
75873964f296"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"T3$", " ", "=", " ", 
   RowBox[{
    RowBox[{"1", "/", "2"}], " ", "m", " ", 
    RowBox[{"R", "^", "2"}], " ", 
    RowBox[{"theta3dot", "^", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U3$", " ", "=", " ", 
   RowBox[{
    RowBox[{"1", "/", "2"}], " ", "k", " ", 
    RowBox[{"R", "^", "2"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"theta2", "^", "2"}], " ", "+", " ", 
      RowBox[{"2", 
       RowBox[{"theta3", "^", "2"}]}], " ", "+", 
      RowBox[{"theta4", "^", "2"}], " ", "-", " ", 
      RowBox[{"2", " ", "theta3", " ", "theta2"}], " ", "-", " ", 
      RowBox[{"2", " ", "theta4", " ", "theta3"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"T3", "\[Equal]", "T3$"}], ",", "R"}], "]"}], "]"}], 
    "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"{", "}"}], "}"}]}], ",", 
   RowBox[{"Print", "[", "\"\<T3 is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<T3 is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"U3", "\[Equal]", "U3$"}], ",", "R"}], "]"}], "]"}], 
     "\[Equal]", 
     RowBox[{"{", 
      RowBox[{"{", "}"}], "}"}]}], ",", 
    RowBox[{"Print", "[", "\"\<U3 is correct.\>\"", "]"}], ",", 
    RowBox[{"Print", "[", "\"\<U3 is incorrect.\>\"", "]"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M33$", "=", 
   RowBox[{"m", " ", 
    RowBox[{"R", "^", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K33$", "=", 
   RowBox[{"2", " ", "k", " ", 
    RowBox[{"R", "^", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K32$", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", "k"}], " ", 
    RowBox[{"R", "^", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K34$", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", " ", "k"}], " ", 
    RowBox[{"R", "^", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"M33", "\[Equal]", "M33$"}], ",", "R"}], "]"}], "]"}], 
    "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"{", "}"}], "}"}]}], ",", 
   RowBox[{"Print", "[", "\"\<M33 is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<M33 is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"K33", "\[Equal]", "K33$"}], ",", "R"}], "]"}], "]"}], 
    "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"{", "}"}], "}"}]}], ",", 
   RowBox[{"Print", "[", "\"\<K33 is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<K33 is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"K32", "\[Equal]", "K32$"}], ",", "R"}], "]"}], "]"}], 
    "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"{", "}"}], "}"}]}], ",", 
   RowBox[{"Print", "[", "\"\<K32 is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<K32 is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"K34", "\[Equal]", "K34$"}], ",", "R"}], "]"}], "]"}], 
    "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"{", "}"}], "}"}]}], ",", 
   RowBox[{"Print", "[", "\"\<K34 is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<K34 is incorrect.\>\"", "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.4494960888602395`*^9, 3.4494961864246125`*^9}, {
   3.4494962493476954`*^9, 3.44949627247314*^9}, {3.452886028140625*^9, 
   3.452886070359375*^9}, 3.625590817146411*^9, {3.8004955875603294`*^9, 
   3.8004955885243473`*^9}, {3.800502395432975*^9, 3.800502408599012*^9}, {
   3.800502443084972*^9, 3.800502448855976*^9}, {3.8005024893199806`*^9, 
   3.800502504632989*^9}, {3.8005030747651005`*^9, 3.800503193781123*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"cacf1201-5b33-4898-b2b1-f20a1951774b"],

Cell[CellGroupData[{

Cell[BoxData["\<\"T3 is correct.\"\>"], "Print",
 CellChangeTimes->{{3.8463434955378428`*^9, 3.846343532979363*^9}, {
  3.8463436225961037`*^9, 3.8463436322299767`*^9}},
 CellLabel->
  "During evaluation of \
In[70]:=",ExpressionUUID->"4b64c0f4-66d0-4423-833c-c1a93c70e7e0"],

Cell[BoxData["\<\"U3 is correct.\"\>"], "Print",
 CellChangeTimes->{{3.8463434955378428`*^9, 3.846343532979363*^9}, {
  3.8463436225961037`*^9, 3.846343632231707*^9}},
 CellLabel->
  "During evaluation of \
In[70]:=",ExpressionUUID->"9d151964-5acb-47d5-bdee-441a54c3b692"],

Cell[BoxData["\<\"M33 is correct.\"\>"], "Print",
 CellChangeTimes->{{3.8463434955378428`*^9, 3.846343532979363*^9}, {
  3.8463436225961037`*^9, 3.846343632232986*^9}},
 CellLabel->
  "During evaluation of \
In[70]:=",ExpressionUUID->"01c7722a-43c8-4534-9ea3-a44d744618e4"],

Cell[BoxData["\<\"K33 is correct.\"\>"], "Print",
 CellChangeTimes->{{3.8463434955378428`*^9, 3.846343532979363*^9}, {
  3.8463436225961037`*^9, 3.8463436322339363`*^9}},
 CellLabel->
  "During evaluation of \
In[70]:=",ExpressionUUID->"17e1dfc0-73c2-4c3d-aa79-a1423c55756d"],

Cell[BoxData["\<\"K32 is correct.\"\>"], "Print",
 CellChangeTimes->{{3.8463434955378428`*^9, 3.846343532979363*^9}, {
  3.8463436225961037`*^9, 3.846343632234899*^9}},
 CellLabel->
  "During evaluation of \
In[70]:=",ExpressionUUID->"bd5e1300-7c57-4fff-a51f-73e529605b07"],

Cell[BoxData["\<\"K34 is correct.\"\>"], "Print",
 CellChangeTimes->{{3.8463434955378428`*^9, 3.846343532979363*^9}, {
  3.8463436225961037`*^9, 3.846343632235834*^9}},
 CellLabel->
  "During evaluation of \
In[70]:=",ExpressionUUID->"a68f56ec-4b4b-461c-ba29-8d6254d463a8"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
 Construct the M and K matrices and use them to calculate the normal mode \
frequencies and displacement patterns.\
\>", "Subsection",
 CellChangeTimes->{
  3.452899546546875*^9, {3.8004956523896484`*^9, 3.800495674843706*^9}, {
   3.800495767946473*^9, 3.800495780784445*^9}, {3.8004960251057973`*^9, 
   3.8004961200591097`*^9}},ExpressionUUID->"786745b4-7dd5-4265-bd43-\
eb0afb0e7d36"],

Cell["\<\
Let R be the radius of the ring, k be the spring constant, and m be the mass \
of each particle.\
\>", "Text",
 CellChangeTimes->{{3.8004970491761246`*^9, 
  3.8004970756080594`*^9}},ExpressionUUID->"1273cf32-6d9b-4c0a-9da4-\
a1abd4a400dd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Mmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "M33", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", 
       " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "M33", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", 
       " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "M33", ",", " ", "0", ",", " ", "0", ",", 
       " ", "0"}], "}"}], " ", ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "M33", ",", " ", "0", ",", 
       " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "M33", ",", 
       " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", 
       " ", "M33"}], "}"}]}], "   ", "}"}]}], ";", 
  RowBox[{"Mmat", "//", "MatrixForm"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Kmat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "*", 
        RowBox[{"R", "^", "2"}], "*", "2"}], ",", " ", 
       RowBox[{"k", "*", 
        RowBox[{"R", "^", "2"}], "*", 
        RowBox[{"-", "1"}]}], ",", " ", "0", ",", " ", "0", ",", " ", "0", 
       ",", " ", 
       RowBox[{"k", "*", 
        RowBox[{"R", "^", "2"}], "*", 
        RowBox[{"-", "1"}]}]}], "}"}], "  ", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "*", 
        RowBox[{"R", "^", "2"}], "*", 
        RowBox[{"-", "1"}]}], ",", " ", 
       RowBox[{"k", "*", 
        RowBox[{"R", "^", "2"}], "*", "2"}], ",", " ", 
       RowBox[{"k", "*", 
        RowBox[{"R", "^", "2"}], "*", 
        RowBox[{"-", "1"}]}], ",", " ", "0", ",", " ", "0", ",", " ", "0"}], 
      "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"k", "*", 
        RowBox[{"R", "^", "2"}], "*", 
        RowBox[{"-", "1"}]}], ",", " ", 
       RowBox[{"k", "*", 
        RowBox[{"R", "^", "2"}], "*", "2"}], ",", " ", 
       RowBox[{"k", "*", 
        RowBox[{"R", "^", "2"}], "*", 
        RowBox[{"-", "1"}]}], ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", 
       RowBox[{"k", "*", 
        RowBox[{"R", "^", "2"}], "*", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"k", "*", 
        RowBox[{"R", "^", "2"}], "*", " ", "2"}], ",", 
       RowBox[{"k", "*", 
        RowBox[{"R", "^", "2"}], "*", " ", 
        RowBox[{"-", "1"}]}], ",", " ", "0"}], "}"}], " ", ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", " ", "0", ",", " ", "0", ",", " ", 
       RowBox[{"k", "*", 
        RowBox[{"R", "^", "2"}], "*", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"k", "*", 
        RowBox[{"R", "^", "2"}], "*", " ", "2"}], ",", 
       RowBox[{"k", "*", 
        RowBox[{"R", "^", "2"}], "*", " ", 
        RowBox[{"-", "1"}]}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "*", 
        RowBox[{"R", "^", "2"}], "*", 
        RowBox[{"-", "1"}]}], ",", " ", "0", ",", " ", "0", ",", " ", "0", 
       ",", " ", 
       RowBox[{"k", "*", 
        RowBox[{"R", "^", "2"}], "*", 
        RowBox[{"-", "1"}]}], ",", 
       RowBox[{"k", "*", 
        RowBox[{"R", "^", "2"}], "*", " ", "2"}]}], "}"}]}], " ", "}"}]}], 
  ";", 
  RowBox[{"Kmat", "//", "MatrixForm"}]}], "\n", 
 RowBox[{
  RowBox[{"MinvK", "=", 
   RowBox[{
    RowBox[{"Inverse", "[", "Mmat", "]"}], ".", "Kmat"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"sol", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Eigensystem", "[", "MinvK", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.4494968324838915`*^9, 3.449496863281358*^9}, {
   3.4494969131104393`*^9, 3.4494970980983667`*^9}, {3.44949714725556*^9, 
   3.449497148646212*^9}, {3.4494973235714455`*^9, 3.4494973250870996`*^9}, 
   3.45288616496875*^9, {3.452899563171875*^9, 3.4528995765*^9}, {
   3.800495713482133*^9, 3.800495715030308*^9}, {3.800495791555442*^9, 
   3.8004959904131584`*^9}, {3.80049613708174*^9, 3.800496200058092*^9}, {
   3.800497209918931*^9, 3.8004972099639287`*^9}, 3.8004972638545303`*^9, {
   3.8005067458819666`*^9, 3.8005067661179748`*^9}, {3.846343665237487*^9, 
   3.846343824662962*^9}, {3.8463440743752832`*^9, 3.8463441228119717`*^9}, {
   3.846344169978734*^9, 3.84634434338446*^9}, {3.846344428408996*^9, 
   3.84634447592241*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"50274f35-5017-4a24-af05-4bf000957a7e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"m", " ", 
       SuperscriptBox["R", "2"]}], "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{"m", " ", 
       SuperscriptBox["R", "2"]}], "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{"m", " ", 
       SuperscriptBox["R", "2"]}], "0", "0", "0"},
     {"0", "0", "0", 
      RowBox[{"m", " ", 
       SuperscriptBox["R", "2"]}], "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{"m", " ", 
       SuperscriptBox["R", "2"]}], "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{"m", " ", 
       SuperscriptBox["R", "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8463437337187862`*^9, {3.846344103631351*^9, 3.846344123368805*^9}, {
   3.846344285276114*^9, 3.846344305583353*^9}, 3.846344348913405*^9, 
   3.8463444309020987`*^9, 3.8463444768371363`*^9},
 CellLabel->
  "Out[132]//MatrixForm=",ExpressionUUID->"1e39a6ea-b584-4a4b-bca9-\
910a307a4ae2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"2", " ", "k", " ", 
       SuperscriptBox["R", "2"]}], 
      RowBox[{
       RowBox[{"-", "k"}], " ", 
       SuperscriptBox["R", "2"]}], "0", "0", "0", 
      RowBox[{
       RowBox[{"-", "k"}], " ", 
       SuperscriptBox["R", "2"]}]},
     {
      RowBox[{
       RowBox[{"-", "k"}], " ", 
       SuperscriptBox["R", "2"]}], 
      RowBox[{"2", " ", "k", " ", 
       SuperscriptBox["R", "2"]}], 
      RowBox[{
       RowBox[{"-", "k"}], " ", 
       SuperscriptBox["R", "2"]}], "0", "0", "0"},
     {"0", 
      RowBox[{
       RowBox[{"-", "k"}], " ", 
       SuperscriptBox["R", "2"]}], 
      RowBox[{"2", " ", "k", " ", 
       SuperscriptBox["R", "2"]}], 
      RowBox[{
       RowBox[{"-", "k"}], " ", 
       SuperscriptBox["R", "2"]}], "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"-", "k"}], " ", 
       SuperscriptBox["R", "2"]}], 
      RowBox[{"2", " ", "k", " ", 
       SuperscriptBox["R", "2"]}], 
      RowBox[{
       RowBox[{"-", "k"}], " ", 
       SuperscriptBox["R", "2"]}], "0"},
     {"0", "0", "0", 
      RowBox[{
       RowBox[{"-", "k"}], " ", 
       SuperscriptBox["R", "2"]}], 
      RowBox[{"2", " ", "k", " ", 
       SuperscriptBox["R", "2"]}], 
      RowBox[{
       RowBox[{"-", "k"}], " ", 
       SuperscriptBox["R", "2"]}]},
     {
      RowBox[{
       RowBox[{"-", "k"}], " ", 
       SuperscriptBox["R", "2"]}], "0", "0", "0", 
      RowBox[{
       RowBox[{"-", "k"}], " ", 
       SuperscriptBox["R", "2"]}], 
      RowBox[{"2", " ", "k", " ", 
       SuperscriptBox["R", "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8463437337187862`*^9, {3.846344103631351*^9, 3.846344123368805*^9}, {
   3.846344285276114*^9, 3.846344305583353*^9}, 3.846344348913405*^9, 
   3.8463444309020987`*^9, 3.846344476839498*^9},
 CellLabel->
  "Out[133]//MatrixForm=",ExpressionUUID->"fea48e1f-2433-4a29-b5bf-\
793e346803eb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"4", " ", "k"}], "m"], ",", 
     FractionBox[
      RowBox[{"3", " ", "k"}], "m"], ",", 
     FractionBox[
      RowBox[{"3", " ", "k"}], "m"], ",", 
     FractionBox["k", "m"], ",", 
     FractionBox["k", "m"], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", 
       RowBox[{"-", "1"}], ",", "1", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0", ",", "1", ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1", ",", "0", ",", 
       RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "1", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
      "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8463437337187862`*^9, {3.846344103631351*^9, 3.846344123368805*^9}, {
   3.846344285276114*^9, 3.846344305583353*^9}, 3.846344348913405*^9, 
   3.8463444309020987`*^9, 3.8463444768423347`*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"f74c4342-7007-4d9e-9520-5f9ea482218e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.45289755046875*^9, 
  3.45289755590625*^9}},ExpressionUUID->"14c5e636-bc1d-40ed-9af2-\
7ed8e500ffe3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M$", "=", 
   RowBox[{"m", " ", 
    RowBox[{"R", "^", "2"}], " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
       "}"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FullSimplify", "[", "Mmat", "]"}], "\[Equal]", 
     RowBox[{"FullSimplify", "[", "M$", "]"}]}], ",", 
    RowBox[{"Print", "[", "\"\<Mmat is correct.\>\"", "]"}], ",", 
    RowBox[{
    "Print", "[", "\"\<The following elements of Mmat are incorrect:\>\"", 
     "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", "7"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", "=", "0"}], ",", 
      RowBox[{"j", "<", "6"}], ",", 
      RowBox[{
       RowBox[{"j", "++"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"i", ",", "\"\< \>\"", ",", "j"}], "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FullSimplify", "[", 
           RowBox[{"Mmat", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "\[Equal]", 
          RowBox[{"FullSimplify", "[", 
           RowBox[{"M$", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}]}], ",", ",", 
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<Mmat[\>\"", ",", "i", ",", "\"\<,\>\"", ",", "j", ",", 
           "\"\<]\>\"", ",", 
           RowBox[{"Mmat", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
           "\"\< should be \>\"", ",", 
           RowBox[{"M$", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K$", "=", 
   RowBox[{"k", " ", 
    RowBox[{"R", "^", "2"}], " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "2", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}], ",", "2", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", "2", ",", 
        RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", "2", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FullSimplify", "[", "Kmat", "]"}], "\[Equal]", 
     RowBox[{"FullSimplify", "[", "K$", "]"}]}], ",", 
    RowBox[{"Print", "[", "\"\<Kmat is correct.\>\"", "]"}], ",", 
    RowBox[{
    "Print", "[", "\"\<The following elements of Kmat are incorrect:\>\"", 
     "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", "7"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "0"}], ",", 
     RowBox[{"j", "<", "6"}], ",", 
     RowBox[{
      RowBox[{"j", "++"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"i", ",", "\"\< \>\"", ",", "j"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FullSimplify", "[", 
          RowBox[{"Kmat", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "\[Equal]", 
         RowBox[{"FullSimplify", "[", 
          RowBox[{"K$", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}]}], ",", ",", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Kmat[\>\"", ",", "i", ",", "\"\<,\>\"", ",", "j", ",", 
          "\"\<]\>\"", ",", 
          RowBox[{"Kmat", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", "\"\< should be \>\"",
           ",", 
          RowBox[{"K$", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.452897582140625*^9, 3.45289761625*^9}, {
  3.452897659765625*^9, 3.452897674046875*^9}, {3.45289776640625*^9, 
  3.452897772609375*^9}, {3.45289784971875*^9, 3.452898020046875*^9}, {
  3.4528980544375*^9, 3.452898279375*^9}, {3.45289834496875*^9, 
  3.452898472859375*^9}, {3.45289850403125*^9, 3.452898504375*^9}, {
  3.452898536484375*^9, 3.45289862409375*^9}, {3.452898683265625*^9, 
  3.45289878621875*^9}, {3.8004968645874043`*^9, 3.800497019726776*^9}, {
  3.80049724729629*^9, 3.80049725733629*^9}, {3.8005319216256256`*^9, 
  3.8005319291516237`*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"72c51e86-3515-4add-afae-61c962139643"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Mmat is correct.\"\>"], "Print",
 CellChangeTimes->{3.846344128936632*^9, 3.8463443581668463`*^9, 
  3.846344435988441*^9, 3.84634448330319*^9},
 CellLabel->
  "During evaluation of \
In[136]:=",ExpressionUUID->"9af6a780-c2a4-4793-9102-314a2124b9b1"],

Cell[BoxData["\<\"Kmat is correct.\"\>"], "Print",
 CellChangeTimes->{3.846344128936632*^9, 3.8463443581668463`*^9, 
  3.846344435988441*^9, 3.846344483304615*^9},
 CellLabel->
  "During evaluation of \
In[136]:=",ExpressionUUID->"589bfa46-79c6-49ea-ba81-b2d04a84f537"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "The eigenvalues (i.e. squared frequencies) and eigenvectors should be:\n",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{"4", " ", "k"}], "m"], ",", 
      FractionBox[
       RowBox[{"3", " ", "k"}], "m"], ",", 
      FractionBox[
       RowBox[{"3", " ", "k"}], "m"], ",", 
      FractionBox["k", "m"], ",", 
      FractionBox["k", "m"], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0", ",", "1", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "1", ",", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
       "}"}]}], "}"}]}], "}"}]],
  CellChangeTimes->{
   3.8004961275688653`*^9, {3.8004961712647343`*^9, 3.8004962010027432`*^9}},
  ExpressionUUID->"a0d2074f-467b-4629-99a4-55728c2f5807"],
 "\nNote that the order may be somewhat different for you."
}], "Text",
 CellChangeTimes->{{3.8004971020597525`*^9, 
  3.800497134647684*^9}},ExpressionUUID->"b6c5d7f4-a5f2-42d1-b92c-\
3dda8ce398eb"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Look at the eigenvectors corresponding to each eigenvalue and use these to \
describe qualitatively the motion associated with each mode.\
\>", "Subsection",
 CellChangeTimes->{{3.449499588849313*^9, 3.4494996061152697`*^9}, {
  3.80049737859091*^9, 
  3.8004974167734365`*^9}},ExpressionUUID->"fac50bcc-a73a-4c9c-9344-\
b9f765c1cb47"],

Cell["\<\
Highest frequency mode: (Type a brief qualitative description of the motion)
The highest frequency node belongs to the largest oscillator and has value 2 \
\[Sqrt](k/m). Notice the eigenvector in this case is (-1, 1, -1, 1, -1, 1) \
which means that neighboring masses oscillate opposite each other. In other \
words the whole ring is vibrating where mass 1 vibrates opposite to mass 6 \
and mass 2 and mass 2 vibrates opposite to mass 1 and mass 3, etc. 

\
\>", "Text",
 CellChangeTimes->{{3.4494998019159036`*^9, 3.449499802400288*^9}, {
  3.800497434941283*^9, 3.800497457424958*^9}, {3.8463444974024*^9, 
  3.84634471166984*^9}},ExpressionUUID->"418a95ec-7617-43d2-87ab-\
678c2da5459b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.4494995438953247`*^9, 
  3.4494995451922245`*^9}},ExpressionUUID->"3c362f6f-4116-458f-a9c0-\
81af86c9901f"],

Cell["\<\
--Alternate masses move in opposite directions with equal amplitude.
or
--Pairs of masses oscillate out of phase with respect to each other, but with \
the same amplitude.
\
\>", "Text",
 CellChangeTimes->{{3.8004974678595953`*^9, 
  3.8004974767566347`*^9}},ExpressionUUID->"f0d4c280-ef20-4f22-8e3b-\
2355e9487e45"]
}, Closed]],

Cell[CellGroupData[{

Cell["", "Subsection",
 CellChangeTimes->{{3.449499588849313*^9, 3.4494996061152697`*^9}, {
  3.4494996430378532`*^9, 3.4494996480535746`*^9}, {3.8004974840915985`*^9, 
  3.800497484427927*^9}},ExpressionUUID->"e409f6e5-4830-464b-84b6-\
e0f2bdad67c8"],

Cell["\<\
The two degenerate modes with the second highest frequency:  (Type a brief \
qualitative description of the motion)
In this case the eigenvectors are (-1, 0, 1, -1, 0, 1) and (-1, 1, 0, -1, 1, \
0) in both cases two particles opposite each other remain stationary. In the \
first case is is mass 2 and 5 and in the second case it is mass 3 and 6. Then \
the two masses in-between the stationary ones oscillate opposite one another. 
\
\>", "Text",
 CellChangeTimes->{{3.8004974903997803`*^9, 3.8004975196056952`*^9}, {
  3.8463447662357607`*^9, 
  3.846344882150926*^9}},ExpressionUUID->"9ba79798-d06f-4760-b60a-\
892dae0fc485"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.4494995438953247`*^9, 
  3.4494995451922245`*^9}},ExpressionUUID->"b473071f-3c14-47f1-8339-\
0588f63fac75"],

Cell["\<\
Two particles opposite each other on the ring remain stationary. Going around \
the ring in either direction, the two masses between the stationary masses \
are moving out of phase with each other.\
\>", "Text",
 CellChangeTimes->{
  3.449499855370055*^9, {3.449499893323909*^9, 3.449500007810482*^9}, {
   3.4495000920308485`*^9, 3.449500100827893*^9}, {3.449500274183464*^9, 
   3.4495002827679195`*^9}, {3.8004977699462337`*^9, 
   3.8004978299449053`*^9}, {3.8004979549411564`*^9, 
   3.8004979931579695`*^9}},ExpressionUUID->"7b7f2967-d50c-4fc1-83ea-\
3d98b4d0c16d"]
}, Closed]],

Cell[CellGroupData[{

Cell["", "Subsection",
 CellChangeTimes->{{3.449499588849313*^9, 3.4494996061152697`*^9}, {
   3.4494996547099524`*^9, 3.4494996591006613`*^9}, 
   3.800497852086907*^9},ExpressionUUID->"994d0a53-e777-4fa2-a240-\
e510efe607c7"],

Cell["\<\
The two degenerate modes with the third highest frequency:  (Type a brief \
qualitative description of the motion)
In this case the eigenvectors are (1, 0, -1, -1, 0, 1) and (-1, -1, 0, 1, 1, \
0). The same masses as in the previous problem remain stationary (i.e. mass 2 \
and 5 and mass 3 and 6 respectively). Then the masses in-between the \
stationary ones oscillate in unison. 
\
\>", "Text",
 CellChangeTimes->{{3.44950035751511*^9, 3.4495003607303786`*^9}, {
  3.8004978600420203`*^9, 3.800497864187953*^9}, {3.846344916161742*^9, 
  3.846345052806068*^9}},ExpressionUUID->"1df025e2-7e19-44e5-9f75-\
f0a09ca97e1f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.4494995438953247`*^9, 
  3.4494995451922245`*^9}},ExpressionUUID->"24955c6d-5fe1-4dcf-9b5a-\
7d398f0280fe"],

Cell["\<\
Two particles opposite each other on the ring remain stationary. Going around \
the ring in either direction, the two masses between the stationary masses \
are moving in of phase with each other, although these two pairs of in-phase \
masses are out of phase with each other.\
\>", "Text",
 CellChangeTimes->{{3.449500371094157*^9, 3.4495003752615194`*^9}, {
  3.8004980064412746`*^9, 
  3.8004980504240184`*^9}},ExpressionUUID->"920de2dc-df0b-4636-823f-\
ae38079523df"]
}, Closed]],

Cell[CellGroupData[{

Cell["", "Subsection",
 CellChangeTimes->{{3.449499588849313*^9, 3.4494996061152697`*^9}, {
   3.4494996652414045`*^9, 3.449499671569651*^9}, 
   3.800498059406077*^9},ExpressionUUID->"7f8a104e-8707-4953-a78b-\
fc4547dcfa24"],

Cell["\<\
The mode with the lowest frequency:  (Type a brief qualitative description of \
the motion)
In this case our eigenvector is a vector of all 1s with angular frequency 0. \
This means that the masses are either stationary or rotate uniformly around \
the ring together. In other words there is no relative motion between the \
masses. 

\
\>", "Text",
 CellChangeTimes->{{3.4495005693171167`*^9, 3.4495005696451178`*^9}, {
  3.800498068437072*^9, 3.8004980826774054`*^9}, {3.84634507036053*^9, 
  3.846345122689868*^9}},ExpressionUUID->"12f4d617-97e4-4fb6-9ca9-\
0fce1b0897c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.4494995438953247`*^9, 
  3.4494995451922245`*^9}},ExpressionUUID->"50339b6a-9033-45a8-80b1-\
72c664cc87dc"],

Cell["All the masses move uniformly around the circle together.", "Text",
 CellChangeTimes->{{3.4495006212506247`*^9, 3.4495006236403465`*^9}, {
  3.800498092463729*^9, 
  3.8004980938024178`*^9}},ExpressionUUID->"58b245c4-ad14-4016-85b3-\
09e2e6cfba8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[" Full solutions", "Subsection",
 CellChangeTimes->{
  3.449500628279219*^9, {3.4495007150745583`*^9, 3.4495007345203376`*^9}, {
   3.800503292202917*^9, 
   3.800503293632984*^9}},ExpressionUUID->"bd4cce6a-72ec-4b20-8487-\
887cfe4eeae9"],

Cell["\<\
Click through the cells below to enjoy animations of the various normal \
modes. Look at the initial conditions on the theta values for each mode and \
make sure you understand why the particular initial conditions required to \
excite each mode are the way they are (Hint: they have to match the \
eigenvectors for each mode).
\
\>", "Text",
 CellChangeTimes->{{3.449500641508597*^9, 3.44950064336727*^9}, {
  3.44950538370971*^9, 3.4495055101652627`*^9}, {3.4495056636994605`*^9, 
  3.449505673980908*^9}, {3.800503322318327*^9, 
  3.800503390237409*^9}},ExpressionUUID->"cab3021d-b755-4b23-aa40-\
6d1623fc6ec2"],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.800531950359621*^9, 3.800531956362625*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"672e3235-1107-4540-997c-1fe47538a1b1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Mmat", "=", 
    RowBox[{"m", " ", 
     RowBox[{"R", "^", "2"}], " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}], 
        "}"}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Kmat", "=", 
    RowBox[{"k", " ", 
     RowBox[{"R", "^", "2"}], " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "2", ",", 
         RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}], ",", "2", ",", 
         RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         RowBox[{"-", "1"}], ",", "2", ",", 
         RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", 
         RowBox[{"-", "1"}], ",", "2", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", 
         RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"thetavec", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"theta1", "[", "t", "]"}], ",", 
      RowBox[{"theta2", "[", "t", "]"}], ",", 
      RowBox[{"theta3", "[", "t", "]"}], ",", 
      RowBox[{"theta4", "[", "t", "]"}], ",", 
      RowBox[{"theta5", "[", "t", "]"}], ",", 
      RowBox[{"theta6", "[", "t", "]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"thetavecdotdot", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"theta1", "''"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"theta2", "''"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"theta3", "''"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"theta4", "''"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"theta5", "''"}], "[", "t", "]"}], ",", 
      RowBox[{
       RowBox[{"theta6", "''"}], "[", "t", "]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"system", "=", 
  RowBox[{
   RowBox[{"Mmat", ".", "thetavecdotdot"}], "\[Equal]", 
   RowBox[{"-", 
    RowBox[{"Kmat", ".", "thetavec"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.449500784173456*^9, 3.4495009166625757`*^9}, {
   3.449501583299548*^9, 3.449501590002673*^9}, {3.4495028497079325`*^9, 
   3.4495028498173103`*^9}, {3.4495029731165524`*^9, 3.449503016398633*^9}, {
   3.4495030626026454`*^9, 3.449503063774543*^9}, 3.4495043958782434`*^9, 
   3.4495055879167557`*^9, {3.45290059559375*^9, 3.452900620734375*^9}, {
   3.8004982213968563`*^9, 3.8004983643545904`*^9}, {3.8004984017245517`*^9, 
   3.800498403111558*^9}, {3.8005034101072564`*^9, 3.80050342812612*^9}, {
   3.8005068414867945`*^9, 3.800506843372901*^9}, {3.8005319411906257`*^9, 
   3.800531948839628*^9}, 3.8005319810996227`*^9},
 CellLabel->
  "In[143]:=",ExpressionUUID->"11272814-6130-415e-96f2-c3747498d1db"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"m", " ", 
     SuperscriptBox["R", "2"], " ", 
     RowBox[{
      SuperscriptBox["theta1", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], ",", 
    RowBox[{"m", " ", 
     SuperscriptBox["R", "2"], " ", 
     RowBox[{
      SuperscriptBox["theta2", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], ",", 
    RowBox[{"m", " ", 
     SuperscriptBox["R", "2"], " ", 
     RowBox[{
      SuperscriptBox["theta3", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], ",", 
    RowBox[{"m", " ", 
     SuperscriptBox["R", "2"], " ", 
     RowBox[{
      SuperscriptBox["theta4", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], ",", 
    RowBox[{"m", " ", 
     SuperscriptBox["R", "2"], " ", 
     RowBox[{
      SuperscriptBox["theta5", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], ",", 
    RowBox[{"m", " ", 
     SuperscriptBox["R", "2"], " ", 
     RowBox[{
      SuperscriptBox["theta6", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], "}"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "k", " ", 
      SuperscriptBox["R", "2"], " ", 
      RowBox[{"theta1", "[", "t", "]"}]}], "+", 
     RowBox[{"k", " ", 
      SuperscriptBox["R", "2"], " ", 
      RowBox[{"theta2", "[", "t", "]"}]}], "+", 
     RowBox[{"k", " ", 
      SuperscriptBox["R", "2"], " ", 
      RowBox[{"theta6", "[", "t", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{"k", " ", 
      SuperscriptBox["R", "2"], " ", 
      RowBox[{"theta1", "[", "t", "]"}]}], "-", 
     RowBox[{"2", " ", "k", " ", 
      SuperscriptBox["R", "2"], " ", 
      RowBox[{"theta2", "[", "t", "]"}]}], "+", 
     RowBox[{"k", " ", 
      SuperscriptBox["R", "2"], " ", 
      RowBox[{"theta3", "[", "t", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{"k", " ", 
      SuperscriptBox["R", "2"], " ", 
      RowBox[{"theta2", "[", "t", "]"}]}], "-", 
     RowBox[{"2", " ", "k", " ", 
      SuperscriptBox["R", "2"], " ", 
      RowBox[{"theta3", "[", "t", "]"}]}], "+", 
     RowBox[{"k", " ", 
      SuperscriptBox["R", "2"], " ", 
      RowBox[{"theta4", "[", "t", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{"k", " ", 
      SuperscriptBox["R", "2"], " ", 
      RowBox[{"theta3", "[", "t", "]"}]}], "-", 
     RowBox[{"2", " ", "k", " ", 
      SuperscriptBox["R", "2"], " ", 
      RowBox[{"theta4", "[", "t", "]"}]}], "+", 
     RowBox[{"k", " ", 
      SuperscriptBox["R", "2"], " ", 
      RowBox[{"theta5", "[", "t", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{"k", " ", 
      SuperscriptBox["R", "2"], " ", 
      RowBox[{"theta4", "[", "t", "]"}]}], "-", 
     RowBox[{"2", " ", "k", " ", 
      SuperscriptBox["R", "2"], " ", 
      RowBox[{"theta5", "[", "t", "]"}]}], "+", 
     RowBox[{"k", " ", 
      SuperscriptBox["R", "2"], " ", 
      RowBox[{"theta6", "[", "t", "]"}]}]}], ",", 
    RowBox[{
     RowBox[{"k", " ", 
      SuperscriptBox["R", "2"], " ", 
      RowBox[{"theta1", "[", "t", "]"}]}], "+", 
     RowBox[{"k", " ", 
      SuperscriptBox["R", "2"], " ", 
      RowBox[{"theta5", "[", "t", "]"}]}], "-", 
     RowBox[{"2", " ", "k", " ", 
      SuperscriptBox["R", "2"], " ", 
      RowBox[{"theta6", "[", "t", "]"}]}]}]}], "}"}]}]], "Output",
 CellChangeTimes->{3.846345137577346*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"e6e33fa9-294f-4e3f-a23c-3004eea79714"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Highest frequency", "Subsection",
 CellChangeTimes->{{3.449501721190173*^9, 
  3.449501724252673*^9}},ExpressionUUID->"a348ba43-5796-48cc-9110-\
c97f49b66373"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"bc0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"theta1", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta2", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta3", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta4", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta5", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta6", "'"}], "[", "0", "]"}], "==", "0"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"bc1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"theta1", "[", "0", "]"}], "\[Equal]", "a"}], ",", 
     RowBox[{
      RowBox[{"theta2", "[", "0", "]"}], "==", 
      RowBox[{"-", "a"}]}], ",", 
     RowBox[{
      RowBox[{"theta3", "[", "0", "]"}], "\[Equal]", "a"}], ",", 
     RowBox[{
      RowBox[{"theta4", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"-", "a"}]}], ",", 
     RowBox[{
      RowBox[{"theta5", "[", "0", "]"}], "\[Equal]", "a"}], ",", 
     RowBox[{
      RowBox[{"theta6", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"-", "a"}]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sol4", ":=", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"system", ",", 
       RowBox[{"bc0", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"bc0", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"bc0", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"bc0", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", 
       RowBox[{"bc0", "[", 
        RowBox[{"[", "5", "]"}], "]"}], ",", 
       RowBox[{"bc0", "[", 
        RowBox[{"[", "6", "]"}], "]"}], ",", 
       RowBox[{"bc1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"bc1", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"bc1", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", 
       RowBox[{"bc1", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", 
       RowBox[{"bc1", "[", 
        RowBox[{"[", "5", "]"}], "]"}], ",", 
       RowBox[{"bc1", "[", 
        RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "theta1", ",", "theta2", ",", "theta3", ",", "theta4", ",", "theta5", 
       ",", "theta6"}], "}"}], ",", "t"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4495017511748867`*^9, 3.4495020378660564`*^9}, {
   3.4495020847260313`*^9, 3.4495020887104573`*^9}, {3.4495021527894025`*^9, 
   3.449502179711622*^9}, {3.4495022464781017`*^9, 3.449502254290702*^9}, 
   3.4495023119320645`*^9, {3.4495024530596924`*^9, 3.4495024559347477`*^9}, {
   3.4495026146409197`*^9, 3.4495026161096983`*^9}, {3.449502886724269*^9, 
   3.4495028890055623`*^9}, {3.449502922381203*^9, 3.449502927553178*^9}, {
   3.449503421125154*^9, 3.449503422687684*^9}, {3.4495044432072773`*^9, 
   3.4495044503949156`*^9}, {3.449504520771267*^9, 3.449504526474501*^9}, {
   3.449504892965913*^9, 3.44950493682613*^9}, {3.449505090204075*^9, 
   3.44950511156386*^9}, {3.4495052516915503`*^9, 3.449505260722974*^9}, {
   3.4495055984794583`*^9, 3.4495056195892386`*^9}, {3.452901026984375*^9, 
   3.452901066796875*^9}, {3.4529017834375*^9, 3.45290186153125*^9}, {
   3.800498417746129*^9, 3.8004984182240767`*^9}, {3.8005034518111525`*^9, 
   3.8005034666718254`*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"4a72f73f-6b26-4e40-8caf-a568befebb94"],

Cell["\<\
The code below is a little trick to put the solutions in a more recognizable \
form. (You have to be just a bit patient as your wait for it to do its magic.)\
\>", "Text",
 CellChangeTimes->{{3.8005034891878386`*^9, 
  3.800503522616984*^9}},ExpressionUUID->"c9331024-0897-45d0-aa45-\
be0640a61f6b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Theta1", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta1", "[", "t", "]"}], "/.", "sol4"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Theta2", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta2", "[", "t", "]"}], "/.", "sol4"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Theta3", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta3", "[", "t", "]"}], "/.", "sol4"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Theta4", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta4", "[", "t", "]"}], "/.", "sol4"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Theta5", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta5", "[", "t", "]"}], "/.", "sol4"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Theta6", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta6", "[", "t", "]"}], "/.", "sol4"}], "]"}], 
   "]"}]}]}], "Input",
 CellLabel->
  "In[151]:=",ExpressionUUID->"d6995c7d-6362-4d57-aead-5019bc130317"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox["k"], " ", "t"}], 
     SqrtBox["m"]], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.846345144731103*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"590ed2a0-299d-4ffa-b734-e0529792230f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "a"}], " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox["k"], " ", "t"}], 
     SqrtBox["m"]], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.846345145874613*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"d5fd2f0f-a972-42d2-aba1-bba068cde4d0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox["k"], " ", "t"}], 
     SqrtBox["m"]], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.846345147021372*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"13650e48-e4d3-4d9d-abe3-637ef37f726c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "a"}], " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox["k"], " ", "t"}], 
     SqrtBox["m"]], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.846345148177846*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"1b8835f5-6f81-452a-ad3d-709089306f9c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox["k"], " ", "t"}], 
     SqrtBox["m"]], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8463451493559027`*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"8a94ae28-dcfa-4dcf-af5f-8b1e7c7d7587"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "a"}], " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox["k"], " ", "t"}], 
     SqrtBox["m"]], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8463451504933033`*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"7d33f002-c349-4a88-99a3-a74b45912af3"]
}, Open  ]],

Cell["\<\
You should note that each mass moves with the same frequency -- that's the \
definition of a normal mode. Also, the frequency magically turns out to be \
the frequency predicted for the highest energy mode!\
\>", "Text",
 CellChangeTimes->{{3.4495102031303663`*^9, 3.449510251600046*^9}, {
   3.4495103148356357`*^9, 3.449510316054409*^9}, 
   3.7663363832884045`*^9},ExpressionUUID->"9793e3e2-074e-4580-991f-\
916cee2076e1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rep", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"R", "\[Rule]", "0.3"}], ",", 
     RowBox[{"k", "\[Rule]", "2.5"}], ",", 
     RowBox[{"m", "\[Rule]", "0.125"}], ",", 
     RowBox[{"a", "\[Rule]", "0.1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diskr", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R1", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"0", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta1"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"0", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta1"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R2", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"1", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta2"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"1", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta2"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R3", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta3"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta3"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R4", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"3", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta4"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"3", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta4"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R5", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta5"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta5"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R6", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"5", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta6"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"5", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta6"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.4"}], ",", 
           RowBox[{"-", "0.4"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.4"}], ",", "0.4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.4", ",", "0.4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.4", ",", 
           RowBox[{"-", "0.4"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.4"}], ",", 
           RowBox[{"-", "0.4"}]}], "}"}]}], "}"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "R"}], "]"}], "/.", "rep"}], 
      ",", "Gray", ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R1", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R2", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R3", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R4", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R5", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R6", "[", "t", "]"}], ",", "diskr"}], "]"}]}], "}"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0.0", ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8005037141746464`*^9, 3.8005037758928185`*^9}, {
  3.8005038272795362`*^9, 3.8005039487615232`*^9}, {3.8005039806847687`*^9, 
  3.800504024770113*^9}, {3.800504055011366*^9, 3.8005041513259373`*^9}, {
  3.800504199465103*^9, 3.800504280136388*^9}, {3.800504321965537*^9, 
  3.800504830806424*^9}, {3.800504862990494*^9, 3.8005049148855104`*^9}, {
  3.800504963661561*^9, 3.8005050073385534`*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"9b20c538-77fc-47e3-8770-fdf3d2fe2638"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0.422052001953125, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0., 2}}, Typeset`size$$ = {
    450., {222., 227.28000000000003`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0.}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Black, 
         Line[{{-0.4, -0.4}, {-0.4, 0.4}, {0.4, 0.4}, {
          0.4, -0.4}, {-0.4, -0.4}}], 
         ReplaceAll[
          Circle[{0, 0}, $CellContext`R], $CellContext`rep], Gray, 
         Disk[
          $CellContext`R1[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R2[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R3[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R4[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R5[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R6[$CellContext`t$$], $CellContext`diskr]}], 
      "Specifications" :> {{$CellContext`t$$, 0., 2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{507., {287.9462890625, 295.0537109375}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.846345165860816*^9, 3.8463451733454733`*^9}},
 CellLabel->
  "Out[165]=",ExpressionUUID->"e4434d38-35b4-41e8-8abe-edc94f1e1315"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Second highest frequency", "Subsection",
 CellChangeTimes->{{3.4495103326953535`*^9, 3.449510352445733*^9}, {
  3.4495104031498313`*^9, 3.449510408259304*^9}, {3.449510454307063*^9, 
  3.4495104562133503`*^9}, {3.449510653920271*^9, 3.449510654779662*^9}, {
  3.8005050520215826`*^9, 
  3.800505055822585*^9}},ExpressionUUID->"95cff3f4-ec74-480f-92ac-\
1705a0dd3541"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bc0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"theta1", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta2", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta3", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta4", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta5", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta6", "'"}], "[", "0", "]"}], "==", "0"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"bc1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"theta1", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"-", "a"}]}], ",", 
     RowBox[{
      RowBox[{"theta2", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"theta3", "[", "0", "]"}], "\[Equal]", "a"}], ",", 
     RowBox[{
      RowBox[{"theta4", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"-", "a"}]}], ",", 
     RowBox[{
      RowBox[{"theta5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"theta6", "[", "0", "]"}], "\[Equal]", "a"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sol3", ":=", 
    RowBox[{"DSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"system", ",", 
        RowBox[{"bc0", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"bc0", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"bc0", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"bc0", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"bc0", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", 
        RowBox[{"bc0", "[", 
         RowBox[{"[", "6", "]"}], "]"}], ",", 
        RowBox[{"bc1", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"bc1", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"bc1", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"bc1", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"bc1", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", 
        RowBox[{"bc1", "[", 
         RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "theta1", ",", "theta2", ",", "theta3", ",", "theta4", ",", "theta5", 
        ",", "theta6"}], "}"}], ",", "t"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Theta1", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta1", "[", "t", "]"}], "/.", "sol3"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Theta2", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta2", "[", "t", "]"}], "/.", "sol3"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Theta3", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta3", "[", "t", "]"}], "/.", "sol3"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Theta4", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta4", "[", "t", "]"}], "/.", "sol3"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Theta5", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta5", "[", "t", "]"}], "/.", "sol3"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Theta6", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"ExpToTrig", "[", 
     RowBox[{
      RowBox[{"theta6", "[", "t", "]"}], "/.", "sol3"}], "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rep", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"R", "\[Rule]", "0.3"}], ",", 
     RowBox[{"k", "\[Rule]", "2.5"}], ",", 
     RowBox[{"m", "\[Rule]", "0.125"}], ",", 
     RowBox[{"a", "\[Rule]", "0.1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diskr", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R1", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"0", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta1"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"0", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta1"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R2", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"1", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta2"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"1", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta2"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R3", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta3"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta3"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R4", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"3", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta4"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"3", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta4"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R5", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta5"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta5"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R6", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"5", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta6"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"5", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta6"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.4"}], ",", 
           RowBox[{"-", "0.4"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.4"}], ",", "0.4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.4", ",", "0.4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.4", ",", 
           RowBox[{"-", "0.4"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.4"}], ",", 
           RowBox[{"-", "0.4"}]}], "}"}]}], "}"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "R"}], "]"}], "/.", "rep"}], 
      ",", "Gray", ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R1", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R2", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R3", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R4", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R5", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R6", "[", "t", "]"}], ",", "diskr"}], "]"}]}], "}"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0.0", ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4495017511748867`*^9, 3.4495020378660564`*^9}, {
   3.4495020847260313`*^9, 3.4495020887104573`*^9}, {3.4495021527894025`*^9, 
   3.449502179711622*^9}, {3.4495022464781017`*^9, 3.449502254290702*^9}, 
   3.4495023119320645`*^9, {3.4495024530596924`*^9, 3.4495024559347477`*^9}, {
   3.4495026146409197`*^9, 3.4495026161096983`*^9}, {3.449502886724269*^9, 
   3.4495028890055623`*^9}, {3.449502922381203*^9, 3.449502927553178*^9}, {
   3.449503421125154*^9, 3.449503422687684*^9}, {3.4495044432072773`*^9, 
   3.4495044503949156`*^9}, {3.449504520771267*^9, 3.449504526474501*^9}, {
   3.449504892965913*^9, 3.44950493682613*^9}, {3.449505090204075*^9, 
   3.44950511156386*^9}, {3.4495052516915503`*^9, 3.449505260722974*^9}, {
   3.4495055984794583`*^9, 3.4495056195892386`*^9}, {3.452901026984375*^9, 
   3.452901066796875*^9}, {3.4529017834375*^9, 3.45290186153125*^9}, {
   3.800498417746129*^9, 3.8004984182240767`*^9}, {3.8005034518111525`*^9, 
   3.8005034666718254`*^9}, {3.8005050927196074`*^9, 
   3.8005051562856665`*^9}, {3.8005051913236513`*^9, 3.8005051921166506`*^9}, 
   3.8005054289257536`*^9},
 CellLabel->
  "In[166]:=",ExpressionUUID->"3947d01c-ba08-4d27-8870-e26324de7697"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "a"}], " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{
      SqrtBox["3"], " ", 
      SqrtBox["k"], " ", "t"}], 
     SqrtBox["m"]], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.846345186468206*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"9c46504d-53f6-421d-80f2-6853fe8d94fc"],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "Output",
 CellChangeTimes->{3.846345187699479*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"fb7569d2-3cb5-424c-81a6-487cfe194248"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{
      SqrtBox["3"], " ", 
      SqrtBox["k"], " ", "t"}], 
     SqrtBox["m"]], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.846345188838697*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"867f7263-3dbb-44e7-a1ed-98bb8f77d006"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "a"}], " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{
      SqrtBox["3"], " ", 
      SqrtBox["k"], " ", "t"}], 
     SqrtBox["m"]], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.846345189984961*^9},
 CellLabel->
  "Out[172]=",ExpressionUUID->"0c43308a-ac3f-4e15-8a7d-016f81616636"],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "Output",
 CellChangeTimes->{3.846345191133918*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"d0b81cb9-cec6-4f81-8661-78ffec6f5c3f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{
      SqrtBox["3"], " ", 
      SqrtBox["k"], " ", "t"}], 
     SqrtBox["m"]], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.846345192331464*^9},
 CellLabel->
  "Out[174]=",ExpressionUUID->"5e37ac95-7f76-4049-94c0-c40a5f5ac5fb"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 2.0942207336425778`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0., 3}}, Typeset`size$$ = {
    450., {222., 227.28000000000003`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0.}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Black, 
         Line[{{-0.4, -0.4}, {-0.4, 0.4}, {0.4, 0.4}, {
          0.4, -0.4}, {-0.4, -0.4}}], 
         ReplaceAll[
          Circle[{0, 0}, $CellContext`R], $CellContext`rep], Gray, 
         Disk[
          $CellContext`R1[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R2[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R3[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R4[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R5[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R6[$CellContext`t$$], $CellContext`diskr]}], 
      "Specifications" :> {{$CellContext`t$$, 0., 3}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{507., {287.9462890625, 295.0537109375}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.846345192363448*^9, 3.846345194593424*^9}},
 CellLabel->
  "Out[183]=",ExpressionUUID->"68956961-3b98-465e-a6cf-82f71510a2b4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Third highest frequency", "Subsection",
 CellChangeTimes->{{3.4495103326953535`*^9, 3.449510352445733*^9}, {
  3.4495104031498313`*^9, 3.449510408259304*^9}, {3.449510454307063*^9, 
  3.4495104562133503`*^9}, {3.449510653920271*^9, 3.449510654779662*^9}, {
  3.8005050520215826`*^9, 3.800505055822585*^9}, {3.8005053208657055`*^9, 
  3.800505321494709*^9}},ExpressionUUID->"217855a8-32ee-4f57-b314-\
0bb93ff14ba1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bc0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"theta1", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta2", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta3", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta4", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta5", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta6", "'"}], "[", "0", "]"}], "==", "0"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"bc1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"theta1", "[", "0", "]"}], "\[Equal]", "a"}], ",", 
     RowBox[{
      RowBox[{"theta2", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"theta3", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"-", "a"}]}], ",", 
     RowBox[{
      RowBox[{"theta4", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"-", "a"}]}], ",", 
     RowBox[{
      RowBox[{"theta5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"theta6", "[", "0", "]"}], "\[Equal]", "a"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sol2", ":=", 
    RowBox[{"DSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"system", ",", 
        RowBox[{"bc0", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"bc0", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"bc0", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"bc0", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"bc0", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", 
        RowBox[{"bc0", "[", 
         RowBox[{"[", "6", "]"}], "]"}], ",", 
        RowBox[{"bc1", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"bc1", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"bc1", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"bc1", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"bc1", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", 
        RowBox[{"bc1", "[", 
         RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "theta1", ",", "theta2", ",", "theta3", ",", "theta4", ",", "theta5", 
        ",", "theta6"}], "}"}], ",", "t"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Theta1", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta1", "[", "t", "]"}], "/.", "sol2"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Theta2", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta2", "[", "t", "]"}], "/.", "sol2"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Theta3", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta3", "[", "t", "]"}], "/.", "sol2"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Theta4", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta4", "[", "t", "]"}], "/.", "sol2"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Theta5", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta5", "[", "t", "]"}], "/.", "sol2"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Theta6", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"ExpToTrig", "[", 
     RowBox[{
      RowBox[{"theta6", "[", "t", "]"}], "/.", "sol2"}], "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rep", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"R", "\[Rule]", "0.3"}], ",", 
     RowBox[{"k", "\[Rule]", "2.5"}], ",", 
     RowBox[{"m", "\[Rule]", "0.125"}], ",", 
     RowBox[{"a", "\[Rule]", "0.1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diskr", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R1", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"0", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta1"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"0", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta1"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R2", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"1", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta2"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"1", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta2"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R3", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta3"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta3"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R4", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"3", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta4"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"3", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta4"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R5", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta5"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta5"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R6", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"5", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta6"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"5", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta6"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.4"}], ",", 
           RowBox[{"-", "0.4"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.4"}], ",", "0.4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.4", ",", "0.4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.4", ",", 
           RowBox[{"-", "0.4"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.4"}], ",", 
           RowBox[{"-", "0.4"}]}], "}"}]}], "}"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "R"}], "]"}], "/.", "rep"}], 
      ",", "Gray", ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R1", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R2", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R3", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R4", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R5", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R6", "[", "t", "]"}], ",", "diskr"}], "]"}]}], "}"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0.0", ",", "4"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4495017511748867`*^9, 3.4495020378660564`*^9}, {
   3.4495020847260313`*^9, 3.4495020887104573`*^9}, {3.4495021527894025`*^9, 
   3.449502179711622*^9}, {3.4495022464781017`*^9, 3.449502254290702*^9}, 
   3.4495023119320645`*^9, {3.4495024530596924`*^9, 3.4495024559347477`*^9}, {
   3.4495026146409197`*^9, 3.4495026161096983`*^9}, {3.449502886724269*^9, 
   3.4495028890055623`*^9}, {3.449502922381203*^9, 3.449502927553178*^9}, {
   3.449503421125154*^9, 3.449503422687684*^9}, {3.4495044432072773`*^9, 
   3.4495044503949156`*^9}, {3.449504520771267*^9, 3.449504526474501*^9}, {
   3.449504892965913*^9, 3.44950493682613*^9}, {3.449505090204075*^9, 
   3.44950511156386*^9}, {3.4495052516915503`*^9, 3.449505260722974*^9}, {
   3.4495055984794583`*^9, 3.4495056195892386`*^9}, {3.452901026984375*^9, 
   3.452901066796875*^9}, {3.4529017834375*^9, 3.45290186153125*^9}, {
   3.800498417746129*^9, 3.8004984182240767`*^9}, {3.8005034518111525`*^9, 
   3.8005034666718254`*^9}, {3.8005050927196074`*^9, 
   3.8005051562856665`*^9}, {3.8005051913236513`*^9, 
   3.8005051921166506`*^9}, {3.8005053564457197`*^9, 3.8005053865227795`*^9}, 
   3.8005054230927815`*^9},
 CellLabel->
  "In[184]:=",ExpressionUUID->"aa64a0a1-4304-4f51-b36f-cdc3828d559e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{
      SqrtBox["k"], " ", "t"}], 
     SqrtBox["m"]], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.846345208337988*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"d0c4bf0d-e72a-47a9-9108-8dd195fb0e5f"],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "Output",
 CellChangeTimes->{3.84634520958595*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"670fd404-7f2c-4fa9-9dd5-4e660fbca570"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "a"}], " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{
      SqrtBox["k"], " ", "t"}], 
     SqrtBox["m"]], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8463452108946333`*^9},
 CellLabel->
  "Out[189]=",ExpressionUUID->"d7662409-137e-41c4-ae09-841fb9176cef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "a"}], " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{
      SqrtBox["k"], " ", "t"}], 
     SqrtBox["m"]], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.846345212142467*^9},
 CellLabel->
  "Out[190]=",ExpressionUUID->"517e439c-8ad6-433c-ba4c-ccb6b5ea8498"],

Cell[BoxData[
 RowBox[{"{", "0", "}"}]], "Output",
 CellChangeTimes->{3.846345213395158*^9},
 CellLabel->
  "Out[191]=",ExpressionUUID->"69dcf421-6026-44fb-ad09-2629ed2179e2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{
      SqrtBox["k"], " ", "t"}], 
     SqrtBox["m"]], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.846345214677924*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"6a61374c-5a35-4d0a-baf6-5dc9b738d339"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0.9708446502685547, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0., 4}}, Typeset`size$$ = {
    450., {222., 227.28000000000003`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0.}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Black, 
         Line[{{-0.4, -0.4}, {-0.4, 0.4}, {0.4, 0.4}, {
          0.4, -0.4}, {-0.4, -0.4}}], 
         ReplaceAll[
          Circle[{0, 0}, $CellContext`R], $CellContext`rep], Gray, 
         Disk[
          $CellContext`R1[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R2[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R3[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R4[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R5[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R6[$CellContext`t$$], $CellContext`diskr]}], 
      "Specifications" :> {{$CellContext`t$$, 0., 4}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{507., {287.9462890625, 295.0537109375}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.846345214704074*^9, 3.846345217107088*^9}},
 CellLabel->
  "Out[201]=",ExpressionUUID->"b0d5dd89-2462-45f0-a4a0-e4e76d5d49e2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lowest frequency", "Subsection",
 CellChangeTimes->{{3.4495103326953535`*^9, 3.449510352445733*^9}, {
  3.4495104031498313`*^9, 3.449510408259304*^9}, {3.449510454307063*^9, 
  3.4495104562133503`*^9}, {3.449510653920271*^9, 3.449510654779662*^9}, {
  3.8005050520215826`*^9, 3.800505055822585*^9}, {3.8005053208657055`*^9, 
  3.800505321494709*^9}, {3.800505467689809*^9, 
  3.800505468279764*^9}},ExpressionUUID->"a0deec4c-0e01-4a85-9495-\
fa54dde3fd0a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"w0", "=", 
   RowBox[{"Pi", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bc0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"theta1", "'"}], "[", "0", "]"}], "\[Equal]", "w0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta2", "'"}], "[", "0", "]"}], "\[Equal]", "w0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta3", "'"}], "[", "0", "]"}], "\[Equal]", "w0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta4", "'"}], "[", "0", "]"}], "\[Equal]", "w0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta5", "'"}], "[", "0", "]"}], "\[Equal]", "w0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta6", "'"}], "[", "0", "]"}], "\[Equal]", "w0"}]}], 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bc1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"theta1", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"theta2", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"theta3", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"theta4", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"theta5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"theta6", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sol1", ":=", 
    RowBox[{"DSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"system", ",", 
        RowBox[{"bc0", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"bc0", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"bc0", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"bc0", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"bc0", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", 
        RowBox[{"bc0", "[", 
         RowBox[{"[", "6", "]"}], "]"}], ",", 
        RowBox[{"bc1", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"bc1", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"bc1", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"bc1", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"bc1", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", 
        RowBox[{"bc1", "[", 
         RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "theta1", ",", "theta2", ",", "theta3", ",", "theta4", ",", "theta5", 
        ",", "theta6"}], "}"}], ",", "t"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Theta1", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta1", "[", "t", "]"}], "/.", "sol1"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Theta2", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta2", "[", "t", "]"}], "/.", "sol1"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Theta3", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta3", "[", "t", "]"}], "/.", "sol1"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Theta4", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta4", "[", "t", "]"}], "/.", "sol1"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Theta5", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta5", "[", "t", "]"}], "/.", "sol1"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Theta6", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"ExpToTrig", "[", 
     RowBox[{
      RowBox[{"theta6", "[", "t", "]"}], "/.", "sol1"}], "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rep", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"R", "\[Rule]", "0.3"}], ",", 
     RowBox[{"k", "\[Rule]", "2.5"}], ",", 
     RowBox[{"m", "\[Rule]", "0.125"}], ",", 
     RowBox[{"a", "\[Rule]", "0.1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diskr", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R1", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"0", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta1"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"0", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta1"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R2", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"1", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta2"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"1", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta2"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R3", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta3"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta3"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R4", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"3", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta4"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"3", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta4"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R5", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta5"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta5"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R6", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"5", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta6"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"5", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta6"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.4"}], ",", 
           RowBox[{"-", "0.4"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.4"}], ",", "0.4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.4", ",", "0.4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.4", ",", 
           RowBox[{"-", "0.4"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.4"}], ",", 
           RowBox[{"-", "0.4"}]}], "}"}]}], "}"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "R"}], "]"}], "/.", "rep"}], 
      ",", "Gray", ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R1", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R2", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R3", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R4", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R5", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R6", "[", "t", "]"}], ",", "diskr"}], "]"}]}], "}"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0.0", ",", "10"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4495017511748867`*^9, 3.4495020378660564`*^9}, {
   3.4495020847260313`*^9, 3.4495020887104573`*^9}, {3.4495021527894025`*^9, 
   3.449502179711622*^9}, {3.4495022464781017`*^9, 3.449502254290702*^9}, 
   3.4495023119320645`*^9, {3.4495024530596924`*^9, 3.4495024559347477`*^9}, {
   3.4495026146409197`*^9, 3.4495026161096983`*^9}, {3.449502886724269*^9, 
   3.4495028890055623`*^9}, {3.449502922381203*^9, 3.449502927553178*^9}, {
   3.449503421125154*^9, 3.449503422687684*^9}, {3.4495044432072773`*^9, 
   3.4495044503949156`*^9}, {3.449504520771267*^9, 3.449504526474501*^9}, {
   3.449504892965913*^9, 3.44950493682613*^9}, {3.449505090204075*^9, 
   3.44950511156386*^9}, {3.4495052516915503`*^9, 3.449505260722974*^9}, {
   3.4495055984794583`*^9, 3.4495056195892386`*^9}, {3.452901026984375*^9, 
   3.452901066796875*^9}, {3.4529017834375*^9, 3.45290186153125*^9}, {
   3.800498417746129*^9, 3.8004984182240767`*^9}, {3.8005034518111525`*^9, 
   3.8005034666718254`*^9}, {3.8005050927196074`*^9, 
   3.8005051562856665`*^9}, {3.8005051913236513`*^9, 
   3.8005051921166506`*^9}, {3.8005053564457197`*^9, 3.8005053865227795`*^9}, 
   3.8005054230927815`*^9, {3.800505474815778*^9, 3.8005055952508125`*^9}, {
   3.8005056267338715`*^9, 3.800505627451825*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"580d3993-a18d-4999-97b9-5b9314fa2f72"],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox[
   RowBox[{"\[Pi]", " ", "t"}], "10"], "}"}]], "Output",
 CellChangeTimes->{3.8463452298530827`*^9},
 CellLabel->
  "Out[206]=",ExpressionUUID->"80c9f41e-39f6-4a3a-bfc3-b6e75429f495"],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox[
   RowBox[{"\[Pi]", " ", "t"}], "10"], "}"}]], "Output",
 CellChangeTimes->{3.846345231205659*^9},
 CellLabel->
  "Out[207]=",ExpressionUUID->"7c51d718-f546-4f79-a6cf-8df7c166536f"],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox[
   RowBox[{"\[Pi]", " ", "t"}], "10"], "}"}]], "Output",
 CellChangeTimes->{3.846345232490026*^9},
 CellLabel->
  "Out[208]=",ExpressionUUID->"e2350bb0-7c6d-4b81-9dbc-fe0470665277"],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox[
   RowBox[{"\[Pi]", " ", "t"}], "10"], "}"}]], "Output",
 CellChangeTimes->{3.8463452337923527`*^9},
 CellLabel->
  "Out[209]=",ExpressionUUID->"e8b89033-acd8-4a42-812f-e5ebf09d15a4"],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox[
   RowBox[{"\[Pi]", " ", "t"}], "10"], "}"}]], "Output",
 CellChangeTimes->{3.846345235106386*^9},
 CellLabel->
  "Out[210]=",ExpressionUUID->"5438fc0f-dd3b-4fbe-b256-dda3cf8a5fae"],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox[
   RowBox[{"\[Pi]", " ", "t"}], "10"], "}"}]], "Output",
 CellChangeTimes->{3.846345236437779*^9},
 CellLabel->
  "Out[211]=",ExpressionUUID->"c073ac53-8b80-4950-88ce-6a902c09c941"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 8.152730941772461, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0., 10}}, Typeset`size$$ = {
    450., {222., 227.28000000000003`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0.}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Black, 
         Line[{{-0.4, -0.4}, {-0.4, 0.4}, {0.4, 0.4}, {
          0.4, -0.4}, {-0.4, -0.4}}], 
         ReplaceAll[
          Circle[{0, 0}, $CellContext`R], $CellContext`rep], Gray, 
         Disk[
          $CellContext`R1[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R2[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R3[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R4[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R5[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R6[$CellContext`t$$], $CellContext`diskr]}], 
      "Specifications" :> {{$CellContext`t$$, 0., 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{507., {287.9462890625, 295.0537109375}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.846345236464649*^9, 3.846345239205114*^9}},
 CellLabel->
  "Out[220]=",ExpressionUUID->"b28b3387-0753-4884-ad47-037e1ca17177"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Arbitrary motion", "Subsection",
 CellChangeTimes->{{3.4495103326953535`*^9, 3.449510352445733*^9}, {
  3.4495104031498313`*^9, 3.449510408259304*^9}, {3.449510454307063*^9, 
  3.4495104562133503`*^9}, {3.449510653920271*^9, 3.449510654779662*^9}, {
  3.8005050520215826`*^9, 3.800505055822585*^9}, {3.8005053208657055`*^9, 
  3.800505321494709*^9}, {3.800505686966899*^9, 
  3.8005056895368943`*^9}},ExpressionUUID->"c5e57e0e-d2a3-4bed-b565-\
4a558c040a53"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bc0", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"theta1", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta2", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta3", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta4", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta5", "'"}], "[", "0", "]"}], "==", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"theta6", "'"}], "[", "0", "]"}], "==", "0"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"bc1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"theta1", "[", "0", "]"}], "\[Equal]", "a"}], ",", 
     RowBox[{
      RowBox[{"theta2", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"theta3", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"theta4", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"theta5", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"theta6", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"solarb", ":=", 
    RowBox[{"DSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"system", ",", 
        RowBox[{"bc0", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"bc0", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"bc0", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"bc0", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"bc0", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", 
        RowBox[{"bc0", "[", 
         RowBox[{"[", "6", "]"}], "]"}], ",", 
        RowBox[{"bc1", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"bc1", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"bc1", "[", 
         RowBox[{"[", "3", "]"}], "]"}], ",", 
        RowBox[{"bc1", "[", 
         RowBox[{"[", "4", "]"}], "]"}], ",", 
        RowBox[{"bc1", "[", 
         RowBox[{"[", "5", "]"}], "]"}], ",", 
        RowBox[{"bc1", "[", 
         RowBox[{"[", "6", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "theta1", ",", "theta2", ",", "theta3", ",", "theta4", ",", "theta5", 
        ",", "theta6"}], "}"}], ",", "t"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Theta1", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta1", "[", "t", "]"}], "/.", "solarb"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Theta2", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta2", "[", "t", "]"}], "/.", "solarb"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Theta3", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta3", "[", "t", "]"}], "/.", "solarb"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Theta4", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta4", "[", "t", "]"}], "/.", "solarb"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Theta5", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpToTrig", "[", 
    RowBox[{
     RowBox[{"theta5", "[", "t", "]"}], "/.", "solarb"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Theta6", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"ExpToTrig", "[", 
     RowBox[{
      RowBox[{"theta6", "[", "t", "]"}], "/.", "solarb"}], "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rep", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"R", "\[Rule]", "0.3"}], ",", 
     RowBox[{"k", "\[Rule]", "2.5"}], ",", 
     RowBox[{"m", "\[Rule]", "0.125"}], ",", 
     RowBox[{"a", "\[Rule]", "0.2"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diskr", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R1", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"0", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta1"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"0", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta1"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R2", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"1", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta2"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"1", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta2"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R3", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta3"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta3"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R4", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"3", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta4"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"3", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta4"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R5", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta5"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"4", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta5"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R6", "[", "t_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"5", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta6"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"5", 
             RowBox[{"Pi", "/", "3"}]}], "+", "Theta6"}], "]"}]}], ")"}], "/.",
         "rep"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.4"}], ",", 
           RowBox[{"-", "0.4"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.4"}], ",", "0.4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.4", ",", "0.4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.4", ",", 
           RowBox[{"-", "0.4"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.4"}], ",", 
           RowBox[{"-", "0.4"}]}], "}"}]}], "}"}], "]"}], ",", " ", 
      RowBox[{
       RowBox[{"Circle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "R"}], "]"}], "/.", "rep"}], 
      ",", "Gray", ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R1", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R2", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R3", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R4", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R5", "[", "t", "]"}], ",", "diskr"}], "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"R6", "[", "t", "]"}], ",", "diskr"}], "]"}]}], "}"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0.0", ",", "4"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4495017511748867`*^9, 3.4495020378660564`*^9}, {
   3.4495020847260313`*^9, 3.4495020887104573`*^9}, {3.4495021527894025`*^9, 
   3.449502179711622*^9}, {3.4495022464781017`*^9, 3.449502254290702*^9}, 
   3.4495023119320645`*^9, {3.4495024530596924`*^9, 3.4495024559347477`*^9}, {
   3.4495026146409197`*^9, 3.4495026161096983`*^9}, {3.449502886724269*^9, 
   3.4495028890055623`*^9}, {3.449502922381203*^9, 3.449502927553178*^9}, {
   3.449503421125154*^9, 3.449503422687684*^9}, {3.4495044432072773`*^9, 
   3.4495044503949156`*^9}, {3.449504520771267*^9, 3.449504526474501*^9}, {
   3.449504892965913*^9, 3.44950493682613*^9}, {3.449505090204075*^9, 
   3.44950511156386*^9}, {3.4495052516915503`*^9, 3.449505260722974*^9}, {
   3.4495055984794583`*^9, 3.4495056195892386`*^9}, {3.452901026984375*^9, 
   3.452901066796875*^9}, {3.4529017834375*^9, 3.45290186153125*^9}, {
   3.800498417746129*^9, 3.8004984182240767`*^9}, {3.8005034518111525`*^9, 
   3.8005034666718254`*^9}, {3.8005050927196074`*^9, 
   3.8005051562856665`*^9}, {3.8005051913236513`*^9, 
   3.8005051921166506`*^9}, {3.8005053564457197`*^9, 3.8005053865227795`*^9}, 
   3.8005054230927815`*^9, {3.800505695347861*^9, 3.8005057238518744`*^9}, 
   3.8005057708419285`*^9},
 CellLabel->
  "In[221]:=",ExpressionUUID->"b3ea7b8d-cbc2-4993-8b25-1ed768984e2f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "6"], " ", "a", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{
         SqrtBox["k"], " ", "t"}], 
        SqrtBox["m"]], "]"}]}], "+", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox["k"], " ", "t"}], 
       SqrtBox["m"]], "]"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{
         SqrtBox["3"], " ", 
         SqrtBox["k"], " ", "t"}], 
        SqrtBox["m"]], "]"}]}]}], ")"}]}], "}"}]], "Output",
 CellChangeTimes->{3.846345250307404*^9},
 CellLabel->
  "Out[224]=",ExpressionUUID->"cd870886-92d0-4c75-95d2-4ae83432c02b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "6"]}], " ", "a", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{
        SqrtBox["k"], " ", "t"}], 
       SqrtBox["m"]], "]"}], "+", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox["k"], " ", "t"}], 
       SqrtBox["m"]], "]"}], "+", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", 
        SqrtBox["k"], " ", "t"}], 
       SqrtBox["m"]], "]"}]}], ")"}]}], "}"}]], "Output",
 CellChangeTimes->{3.846345251553874*^9},
 CellLabel->
  "Out[225]=",ExpressionUUID->"a4169b52-fd8a-46db-a183-2e2f52984389"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "6"]}], " ", "a", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{
        SqrtBox["k"], " ", "t"}], 
       SqrtBox["m"]], "]"}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{
          SqrtBox["k"], " ", "t"}], 
         SqrtBox["m"]], "]"}], "2"]}], "+", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", 
        SqrtBox["k"], " ", "t"}], 
       SqrtBox["m"]], "]"}]}], ")"}]}], "}"}]], "Output",
 CellChangeTimes->{3.846345252972548*^9},
 CellLabel->
  "Out[226]=",ExpressionUUID->"b07f5649-1fc7-4a33-8904-4e8d71810c3b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "6"]}], " ", "a", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{
         SqrtBox["k"], " ", "t"}], 
        SqrtBox["m"]], "]"}]}], "+", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox["k"], " ", "t"}], 
       SqrtBox["m"]], "]"}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{
         SqrtBox["3"], " ", 
         SqrtBox["k"], " ", "t"}], 
        SqrtBox["m"]], "]"}]}]}], ")"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8463452542993183`*^9},
 CellLabel->
  "Out[227]=",ExpressionUUID->"cb44ae9c-59a9-47d4-9156-fe736c7bd84d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "6"]}], " ", "a", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{
        SqrtBox["k"], " ", "t"}], 
       SqrtBox["m"]], "]"}], "-", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{
          SqrtBox["k"], " ", "t"}], 
         SqrtBox["m"]], "]"}], "2"]}], "+", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", 
        SqrtBox["k"], " ", "t"}], 
       SqrtBox["m"]], "]"}]}], ")"}]}], "}"}]], "Output",
 CellChangeTimes->{3.846345255534052*^9},
 CellLabel->
  "Out[228]=",ExpressionUUID->"6ac8d969-8fe3-4216-bfa6-86afdc0e9766"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "6"]}], " ", "a", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{
        SqrtBox["k"], " ", "t"}], 
       SqrtBox["m"]], "]"}], "+", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox["k"], " ", "t"}], 
       SqrtBox["m"]], "]"}], "+", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", 
        SqrtBox["k"], " ", "t"}], 
       SqrtBox["m"]], "]"}]}], ")"}]}], "}"}]], "Output",
 CellChangeTimes->{3.846345256767111*^9},
 CellLabel->
  "Out[229]=",ExpressionUUID->"9a93f0c1-7f2f-4484-9386-88dea0a39061"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0.97578125, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0., 4}}, Typeset`size$$ = {
    450., {222., 227.28000000000003`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0.}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Black, 
         Line[{{-0.4, -0.4}, {-0.4, 0.4}, {0.4, 0.4}, {
          0.4, -0.4}, {-0.4, -0.4}}], 
         ReplaceAll[
          Circle[{0, 0}, $CellContext`R], $CellContext`rep], Gray, 
         Disk[
          $CellContext`R1[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R2[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R3[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R4[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R5[$CellContext`t$$], $CellContext`diskr], 
         Disk[
          $CellContext`R6[$CellContext`t$$], $CellContext`diskr]}], 
      "Specifications" :> {{$CellContext`t$$, 0., 4}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{507., {287.9462890625, 295.0537109375}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.846345256796257*^9, 3.846345259392488*^9}},
 CellLabel->
  "Out[238]=",ExpressionUUID->"6d20a6ec-d0a5-409d-bee5-633a451ed6fb"]
}, Open  ]],

Cell["And here\[CloseCurlyQuote]s the motion of just one of the masses:", \
"Text",
 CellChangeTimes->{{3.800505822552905*^9, 
  3.8005058373699126`*^9}},ExpressionUUID->"779d57bf-6ce1-4375-8235-\
869e03bc3ee6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", "Theta1", "}"}], "/.", "rep"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.800505844502962*^9, 3.8005058452689104`*^9}},
 CellLabel->
  "In[239]:=",ExpressionUUID->"eb652c48-1732-4841-a019-1f989d90701c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
ub4LosTBtpHZd1R4fveenPEvQeTYvcLxWLYQlH8+zFgYE0TkSIarRzRK4EOO
x3sZRiHkfga9b1bFwKJpuDOCRQgtzPM3GzNVgN6YRBQ9hxCa/uxpynyrAkb2
N4d/IwihZ9FF7opilUCM2hbsLiKE+ooS/Z2DqsDs+Djh714htPlvr/u10SrI
aC8LMBQTQnTSO1vdlKqBtkD7SckIodUjY+zyf6rhtmeWd8dJIaR6RaB7iFgL
haLPWUFJCB3dV1skeK0W6Mv1XmcgIaT1J9hEIL4WIpYXPZ+dF0JH7kRp6+yv
gz9hjQxjF4VQS4vLqQfX6+CQQvQLA22af9fvh5Ri6qDaQeW5pKEQWh/5Ve3D
XQ88nAKbwVdo+pQ3T26o1MPV9GG3jWtC6GyakOVf53pIPluyZm0uhIoel1E1
k+ph+o+va5ulEJJeKN6xo7UeTrmbrSjeouVT9Xzswmo9vNp95FGarRDa9Stg
qmNvA+y68u2Bm5MQejRuzzRi0wC3FtLnh52F0LE7KdMW3g2QH/zEWe+hENo4
KVYvktIA64e1Zz+4CqGYec2EXbgBzjeL3hV/JoRYvNa4DL41QLDd3HTgCxo/
Q4+/crwBfrHWOa69FELR2mYKlusNIJkSOXnTWwjlt1DsFTgbwVn1tn2rrxA6
kT90TH5bI5T3Kf09FSCEFDmnX5iINgL7U4JdSrAQ2mf6AueJN8KlnQOjvOG0
fEdOdx+SaoS4ogJr1ygh9O5e07F2Gh6/5D08GC2EGjxmi+IlG+HYrPFNnXgh
dJzZtTx8fyO4BxwaLEkSQosPOA4U7mqEJhm6GwfShBA5cFKZjq8RhD61/fYn
0fRFF/e7MDbCdesUi5VsIWRh12coPNcAWUyP+m7k0+opIndzrq8BlhIumrVQ
hZDu8AmdrcYGUP1fxdUdT+X/xSUNIk3uva7rjkohJUXr2zlKKRHZFRKF0lAy
kpWkrKxs2XuPa4/n2iIpFBktSUpJSaj0e35/fl7nfM55n/f7nPN8HpAc2lku
hhcbgzoOFLZCwODEqeQqMczzp6xqCmuFvhv1/SIEif/Yyua7jq3AEQ874VQv
hvb6soLBBq1wmWvV965JDK2nnWw/bGuFiuO7DTUfieHR8xqL7gu3gpb/az32
U9L/VAbta1kLRG8q6vbvFsOTz4tGuT4tMNLspfPrhRi6b7nk9MmoBW4ukNF+
PCSGDcTWPQ0TzfBBdVnfhrdiGLfqX7dXeTNo3xs/feu9GFLkEr58dWuGdaL5
V5Q+i+H7dluddwLN8Ji+PTBhRgxN/N4WnJluBCWzteK/f4vhvVAhB4/cRkhI
no7T/yeGoi6esrHmjWAvU5EntFgcfx616ptrbgDGzn1Prq8WR9YewfzyG/Vw
76aUQaeYOFbf85Rnsuvhey3fq000caSl2XSNt9ZBy8GGL6+Y4ljr3ub2dWUd
2OoeFjkiL47mwmVmxhsIqL+soyF5RByjd7zuoPLKQa5IscdRQxwXb2n4L/9z
GYT/XGPcpSWOh99pTMyvLQMbl16buwbiaNi9i3bcqgTW+Br7TVqIo8sJXqcZ
XxFYplq2NbmJY8Sov88ZnTR4+lFNh+kpjpUc34Mv41Ngt9ymfuc74pj92Dj5
3dckEC3+PLbFXxxXjAo5aK+Ph3KerWB0lDhOJOvOJ04Eg9Cg8+HLXHEMXvxG
+lOkC6HkmCkSWCaOHR4xWeX9t4kzq/q68ivF0XQJte+9gQ9RfniHySRPHDVL
1pzcviyEsCyZuHq9Qxw3180ec9OOJUK0GcphT8VRIWJII605jqj5rPGnpFsc
5e4c0SyMTCDWsLO8f70Ux/bfv/81TSYRdffPxjh/EEc30zTn1yfSifFNoWYx
Y+L4xfzlpccWGQSlqW599TgZf2GYziqrTOLyb0bB3+/kfdW3PNUT2UR0uKY9
Y1occfP1fwsO5xBNCi67YVYc9ZwXxldsySXo1i8bPf6J44LkPz+bxvKIwwuX
+ibyU3Dv2K6Aqap8wi5OSat+EQWPHnZPsT5QQLT1hL5cKExB2+DnYzILC4np
K/Vx60RJ/8lye1uTQoK1bNLi4CoK8sQ+mnwrLiScVI599aZQkI+pJuGjX0Sk
DLoUp0tQ8FDm/KnIhCKi0zHbqZVBwQhv26dPRouIuVX9/42xKBhafFt+k2wx
sSFv6UKh9RTUu9DYlHKhmDh+RLlVZiMFY+r3uENaMeHy/lzAUVkKphnID/0a
Kia6aQ3iAQoUrFnm51erwiXmSyYHc7dTcLsa38DjS1xC5jgz6YkyBTu1e9tn
wriE/vgxq4ndFDyw+nDvgUou4XHXVW7FPgommO4ULujnEjnsnMmtKhRcH6S1
HH9xid6a/tLjqhTc4Pt9zS/REoL/hKDLNTUK1ilv/NS3roSQn1JWCVWnYGy/
5djYjhLiZKDlYq4mBdPPqc/LHygh7siEtfdoU1BSbntyrkYJUdDUEPRTl4L3
5Hte2+iUEINm3/XFDCnYpBurZqtXQiz9w5RQPknBJ68lZ+pIu2KE1htDEzK/
6/EIa80SwnSbW6qTGQVPK7Qdv6haQvh25FyIsqBgfmR333PlEqLUemBLpSUF
61tumuVJlxBvFwr97D9PwVVKPg//rS4hhON3Vv6+SEEtMZOG7j9cYuduK3e6
LQXn7tTf2vGOS1g8D1P9z460/8vi39rIJe7bNgqaOlDQ2KVv9EkSl6hc9uOJ
2w2y3mr7www3LjGSxnoQ70JBZD/MkzHgEuNeb2cXelBw+nZPoZI0l/hunnja
+japz6Wt7ICpYoJPiiWr4EtBO6ZkmplXMbH475ugsAAKsldUt/GrFRMiAwnT
s0EUjD7NdNi1uJigRTDr6yMoSG9xUOE6FxEs+zfS0jEUjBNf6cPaWkRs1E0I
8Isj+RGJfmj/rpDYIco8oZdKQZHWIbtN+8j35V2pbyNFFPzQtzDkWkY+YXju
tb56KQUDYz9YpX3II0wPxFflVVCwYGsEl8LMI2z+Me468ijo3hgY6nonh/B2
ZDAEn5D4fq+fbJLKJKqtJDXkxsh4u5l954lEouHgUGHQOAUNTibFnXuUQLRx
Hor/nCD1fSyeXpwcT/S+pg/XTFPQj+9T9++aGOK7Id1ZS4CKEw/aVve9DiU2
HpbIuCZFRUXdq/toj2yJLRsGRHrZVCze1dIiKWdOKAnE2O3ZQMWOvi2b+uaV
iAM8GghspqKl1vu11adtwHQn7UXYbires/5Aueh3Bx5spApU6FNxXSNLLt0o
EoxNN6QPG1FR+dsRg9bOKFj3QFF9uTEVA9x3xz6BGOD+0wyyMKfi6l8nvesE
46DnhSd9+RUqetddmV+ZkAixwkHEzmtUvNttX5m0NwnO7n9obmFPxdz2CdZU
TxJM5ZZllN+k4vQBxUvBM8mw+s74dot7VLzNDKqaFkyD/srZ3gA/st7o06It
nmnk//vim+X3qXja47+F76bTYJsxq04kjIr/HlQd73yaDnPB8md3RlLx4em1
Y4FKGVDfsmeJRQwVTUWeRztGZICOooFmeSIVHx8oLExWzwTaeYtv71KoyPY6
pPoqNhPexdmGimRQMe9q1lG5T5mQ1eOqtDObzL/E2chvWxZcE/J7aZ5HxS+x
zb9m7bNgN0a6BBRSsef69iJHbhbwO6RKlXOpKEb5IrToaxa0ZRfVvyuj4q+6
c27J7GwIeUucE6mi4lm1OQ99nWw4Kd6xdGctFQv6jV0ZrtnA1uzPNq+jIlIH
uviTs+GT5+ixgEYqLn3p1L2kMRuKyqcmy1pI/ba8rVN8kw3OXxeEvWujopyS
fGfAr2zYv050p8gTKrLE71EYQjkgdJI+oPyMiglfY1K+iOdAV+AmN/MeKv6l
fzZbzMqB6CYlVkAvFUVSfzDs1ueA+e8DjWX9VIzftS0YyLOMwnGrd0NUFMiY
V3Ni5sB3S1MhkbckXs0DeTJkvMpYm1zl9yTf2isWnxPMAc8uJ23zUSpeMVx2
TonEo77U+4f/Jyq+u11dkEfiXbkvNLzsCxX9HCqiXzVlQ59dwq5336jIJ5Mf
25uWDQmZuYPCUySeG0ensm9ng/XrSnflX2Q/r18Sf9k4G7aubWWbz1HRA57p
Kypkw4z68yb/v1S0fxR7bzl/NvA83lmX8dEw1vvZibWdWaA9/idPeAkNIx9A
3V+TLKCwhXSUhWi4+s2ir8LMLHhjKP7zjAgNn7+0H0x6lQm2DQp7ylbT0K4z
90vj8UwIirZsOcOk4a9TXi/zVmWAo4OnnQuHhuKqz3Jv1KSDqU6cVMQGGrpX
8C8vO5cOckIvHB/L0ZA5i0+m8tLg0Y2DG5V30bAeCsbcpVOB/8Q6H2EdGhbW
RyR+eJQIY9txh7Q+DfkZ1VKrTiTC0xXGb1WMaGg0y3vnOpoA8a2huxxNabg/
YsAqkD8B9u5c+OntBRoGR9be7j0fC/bi79TLbtNQsz3buedIGBj/+Dv9zJuG
ZR/mKh0vPgDVTmryuA+Jb17D3iA4FFbdPf6bFURDsDn9K+NdMORN87L9Y2l4
VPX8+rO6ARDWNWiYHk/DeZPVEj6tfuCSN7OwPomGg1ttjwYc9IWjlluNf2XQ
0Mbd6Hmb0V34+Dxe2LyEhlcvlXn2f70FnYVV5S7lNBQ5ZHujMdcDSgN6z0ZU
kecLqw9RJtzA66BozeM6Gr50XnKPdtIZbFiy50cbaeiBegID25xA5++htfyt
NMw+NdY+yXEAVonbJeUnNOQrqxLyPX4NlgZHU3We0dBxS5+KYqAtfLtY2nSx
h4avrsrJCnRegt7DXVfv9tJQf71iwe+SC1C77qtkUj8Nq+MFTx/vsYJUPqG2
6iHy/tL1Av9kzoH/4HqH3jc0ZB8/2vyj0hzsylXY34dJ+0ga/5o7ZnDygckT
4VHyvnuy/rU1JkAvFpKw+UTDe4wihzdaJ+D1szKrR1/I80XDMhbNgNxPZ7nS
kzSc2BpwY6m9LpwVXbXAe4qGqkFifmrmx2GDPKH5/hcNV9ak1ww3a8GYxsXo
/b9Ju7Vb1NQPTcixoY4mzJP1dMgXWh7ThMu+zYr/Fkhg1HnX+Yd9mrA1087D
ZJEE6t95uLbmgRb8aGF2VC2VwOhn5y7p7D8OpR86qDRhCby3NIc9p6cLTotu
WjqJSuDEqhUUgYUGsHvdxuIXq0j/mxUxfzVOwN/9z/9tFyPjs+S6dBRNgHfG
UyOUKoHZ2honpAfMwNNjS9QkXQItN495idhYgGr84IgWUwJVV3xXMTtiCUtq
fbblccj4upKmqx3OQ9ugkruwtATyecvJCE1eBP/fw+0XZCRQ1vhA4zITWzhG
C6Y82iyBHVN3/rlZX4OVu/adk1Yg8eiKfCiLvg7hDpHzw8oS+KFb4FHptRtg
FHbw6P49pH9EedNiigtIcL9HJOyTwF/Bsve3DrtBwqSGgslBEo/eR7PR655g
vmLOteowidfg0x61VV6wbkt6G1VDAr2s/E1e192BzIsLzr7QkcBXl8rk+g18
4KJfXsF2Awk0vWF2u3GPH8hnnfobckICXcYv3p9WCICi0ZJwLTMJFK9wGfHP
CIJq8wuPWi9JYGhDm+DvjWHgdktcTPqqBLJvfT1gbRwOKgmN5neuS+DmORtB
pYgIaB5i/FG5KYHvV9FzFNnR8NSoW77qngQat4kflr0XDyGOHjep/hIYOG3f
EeCUAPrhm1sdAyVQWsV7/P2WROjvvntme7gEGgYGuVWlJcH7Y3sf5CZLoLuH
7oHqwlSYUU2dja+VwIFJbpMUuc9dquJvN9ZJYHUrezbnQw7wbYsWGWuUQErz
XmI2JxeWSAWytrVLoG32iI7ZnnwQm3U60tgrgUMhq6ek5AtBMVcj6uM3CRxx
tpPyVedCKUeNIzJFntsWfgvN4cLuaJVchV8SePdovQRleQnsv6tU5/xXAtul
NJUMO0tA+wxzTFiIjvwbSrRlj5TB5bVTOxU4dNx8vi/KfHklfPf7Wq+/gY4r
HZeEFJ2pBHv+MQ3nTXRsTsr1zyyuBJeJIbOGLXQsNrquaaJbBX6PWu7p76Wj
YlXdz1iPaliO9aucgY7uUeXp71uqIaS0OjZuPx1VVEIcnEVqIDq5sGD0MB27
HykZWIfWQIZrTN8NfTp+jDmZsd+nFuSmwszjjOiIr+XZE3W1UHAhaLz+FB1F
dk9CwkwtlBne4RM2p+P7Aztavp0mYPcTd9+t5+i4Trx17a0gAmpVndfoW9Ox
4i6751ctAc0KVzbGXaaj/NS9x7VCPFDPOF9Uf5XMb3F3nGDwoINxdu/odTqe
PHfDLV2BB9phps3LnOh4aEdSwbUDPOhZdkJ76006Hgti9zH0eGDkqduv50by
Vb/jaqYFDwZnNM/euEVHCxlrqRXXeGB25fDXh150bNjVkqvtzoPhkf1O9Xfp
OPRJSPS8Hw/2xz9JkvGjozbT+vv2CB4kGJ3sCLlPR6WBBYYJiTz4t/LDr7lg
OvrdiN6XmcUD0/arbIswOu40Un+nWcSDGq+/Gu2RdOyI9ivyL+cBfZ+Po2Is
HX8k7zE8W8ODm7/WJMXE03GLfkh+N48H/QUJjxcm0/GWjGjXy3oe7Log98sm
jcynZizs0MCDSE45qyeTjgtDpIfTSfuvwQMae3PpeHF6cuUV8r5BeKdDSgGJ
90uPb3s1D0q0TiUKc+loaL3PoaaMB2sER9uvl9Gx80DytoOFPLCrvzY9WElH
3dMb9SwyedB1c555sJaON732p1ASeKCww/dobh0dhfdpsizDeBD0da3D2iY6
+j+mzGv48GAiPTHBtZWO6SevJD65yYNjZza3j7TT0SklOHX8Ig9yaRU/NTvp
2KWU3ZthzAPhHlVmaRcdvzrtU150lAdth4ztvV/SMYP16no6hweb+D7Gfx2k
4xT5PvouwoN7FXZtBm/o+MKuyfzJFwIOyflJSY+S+j6iO5T6EJA6IqYe+ImO
9tJWQXW6BAjEJ13/9YWOm9Ju3d0tQUD9yspHLVN0VF3CCgxNqgVW+8GpLTN0
lJzdqnTbvBY8vJ4xIn/TcYNFxPA/qVrY9+ujnTW/JLak/eZrIPu9clCcIbhC
Ek/tzH5pd7oaqOHJh6+ulsS9PeECHcLV4KS1xe6lmCS6vlrL4SuvAqX6Q62Z
kpLo4Nb6RGppFRSl219Tl5XEGqNNq28HVcDKMwseFslLot3g4K6PmyvAlhbQ
QtsmiXIqT/W8HpWDfEAK/fNOSXxjkl0V+rsMsq51N/sdksTvlS+6nDRKIek/
BYmOM5LYccvVlZZbBPXHhG7/PiuJm31ZYrJ7i+Dd6eFPm6wlsS8yRvR8WyFw
PMMqvS9L4nPXPt+Y9wWQ0jx7Am9KYm0DYxLZeZCqVR9Z/EASFcWDywsz0yDj
jK5YdIskrjQteOZQch9ar8m5tbaReM0Ss32F/eDj7UUfpjsk8aRJSvpG67uw
Ma2sRLdHEnV3WN/dLe8BmZ8k9EXekvicO53+vdaCLLv3oR5zkljsVME6uNaH
aPOq+Z33VxINfVZm6+j6E5/Cwi2G+Bj4NaFgt/O9QEK2/LDi7iUM9F5a5BL2
OYTI+ZPT9WM1A4084eT3f5FE7h37lVabGfhOuq3Yak0SMb7XxPPOVgYuXu11
cLA0iZCbUv2RrMhA/QkrlSsGyUSW+Zrnb3YxcFmzW8dj/xQiA4ojTx5iYGNa
f6fr8zTi43S04I0jDEzQoTB+n04npPM8nSM0GCi/88tNw9F0Io2uY9yjw0Bt
9VUuoeMZRMrsN6ljpxmYITxcY/c0i3hf0Bd00ZyBk3UQvV8lm+BY8xb4nWNg
q5O+fmNeNpH0InC4xYaB9QtTmzvdc4i3AY56Hy4zsMTh0avjwzkE8+DpJoFr
DDT3XRnpeCCXiC+WT1dxYuBs9PXixNlc4tUFMYrZTQbqdhkmJ2jlEQz2/D03
NwYqqJw+tjMpj4gN6rhQ5cXAkQHms03/5RODaiUDL++S9XXeP+JxJ5+Q+Ber
MePLwD/Dg9XWbflE9KWL8juCGTgXdaH157oCon+dXrzuAwY+5tt5cP/+AoI6
uGfFtQgGxk97G74wKSCMQjm3gqIZ+Ctt5FuhYwERqb7se95DBgZXKDOfBxYQ
vQt+mHckMPCJn+pKTCsgxCr6uz8nM3BC/KDwj8oCwsC2XlUonYG3Mq7af+0o
IMKks0o2ZjFQzDnw8bbXBUTPq+ANarkMrLFxy+F9LSDWhN+IOFfAQM+h5rbI
PwWEruaZpV7FDBQalP5VtbSQCBE4ciOplOSrfL2E7OpCoqtq6ydeBQOPboza
NSpRSKy0o5x6Xc1ALRG4PMkuJLRl+B7/JUj/v4e/qG8sJILeju6lNzBwRdZX
/p+yhcTTyM7c3c2k/vv4Vk9uLiREtcsYJx4xMO3pjUiULySOLYkPdHzMwDdz
4utH5AqJ+7XefOGdDHSq/GL2ZlMh8cT+8lVuFwOzU38Lbl9fSIhsNnjX9ZyB
oiGtP94yCgmN9//pTvYxUIf4vXhcrJDwj1nfKDrIwKUxM6gnUkg81hHZIf+a
gYZbXYrp/IXEMqGfqRrvGEgz2Oul9rOAUK8bFLMZYaBtzr3xFx8KCF+nxrs+
H0n8zl92drwoIB5tyZlJ/0zq79TXKtdUQCwdDT3f/JWBR+Jh+UxhAXFX3+Lo
wp8MTHeaGxjwLiCStAaNz80wsKxMLentxQKi+oj+5ZbfDDy2aESfcryA+P6f
WrAfvxRWjq99t2FNASG8k5f0ZZEUllxcpyr8IZ+Q3raLqyUohfchd7d6Qj5h
vEG2d/UKKTRfWr/srFA+4chM+Wi/WgpF4+RXaFfmESE0ybleMSnc5eQwNGCZ
R7QsF5WMlZRC5aJlH6dKcoltv76br5OVwh/Lut5zNucQmpM2173lpdDw79Zd
Ag3ZhPXn93c+KkhhgKTHhcf62cTD1y8ycnZK4cZsPfk917KIpa2VX7cfksIP
49vtM+9mEJx6Rb6II1L42yj4y6tFGcS+6pyVsxpk/N6LpzVvpRN2BXHba3RJ
f7tWFT7bNOJVpKfzwTNSyEsvzfm+OYWYDfntl35WClvThIo5EcnEmoDrDwWt
pbDzy38bRv8mEUduWfI6Lkthb6fTFb3GRIJ7Xn2xgYsUqvi0OW27GEf47l4V
YhkhhR5CW0VsbUOJHYOJmXc7pPDPjdVXFhnbwQp565n8p1Jodmu11Q31GzDu
Lq/W1y2FjsmFexbtc4cUTtX7jf1SuGF3Xph11B1YY9Mj1fZBCpd8uXlAoCsI
5lwWHl3Mx0QVZmbM7clYeLlMqe4wlYnGMKHwyiILmrdHfRykMXHZpmOMq/Rs
4Jr8Eb1KZ2KKqJ3rTHc2BOXXm0ZJMbEpM5CTC7lwWFfrz9h6JnY/c01fK1AA
5dHWyn7bmJjzNti4IaMI0hraTaW2M5GRGn7eebYIHozLexfvYCLzkp4hHCkG
230/ewZ2MrFMOmXxy5Fi2Pju1jU5YOLSJMa+6FUlELkpJrfjKBMtLzwJ4dtR
BlM/DqXe1mTigOk7pbdOZaBV+z12lxYTrXkGW3dUlcFiXXX/VB0m7siUaKLv
KQdzyenbp/SYWPJyY1CyUznUjibeXGnAxKCqkFVe3HKwd5m94HqCic16Did2
S1fA00Op5oqnmPjn58EIAdMKkFt5/OSYMYn3VcitlaEV8D4144i+GRNX3xdR
efWrAtBWT2WZORM9Dp/neyBdCTG7+XbVWTCxnjm330m/EnQ6DTdutmLi4Vtr
NCuzKyEvaiFz2JqJrj76YaI9lSB4Nl886gITq2aunfWcq4Sz8qdEtS4yUZ/b
yi8qVQW8mcVLFl1mItVw0WShShXQG4rmK68wcYn2tjEr8ypwCjCdtr3KxGGv
ktebb1XBFnbpyOB1Jr7ZMl//inxP+I6fGQpxYKJnn1BT47Mq+FAq8vywExNv
JzyeLPhYBftvVTyev0HGzwi7kvi3CuKOnmvk3mRii/XtlAcrqmFu7crqC65M
nM86ouzDqgb9N9XFTHcmnreZEnXbWg0FWdbZLzyYyH8qwejaf9UgbL8m2d+T
iVL5m9zOHa4Ga+BF7/diImX66VbD49XQIHgxZOYOEwOynp9VM6oGRo+4b95d
JtYqLtZVMqkG57iGW2d9mPiQcvDGOrNqeGF95QbNj4kV4gtjVp2phm2KElef
+jNxbDS3bgFpv/+32dr7PhPdTq3+74dxNYy1XDPbG8TEutzy5I+G1aAawjD6
HszEpIr13cPa1ZBg3KaVEcrEuLecbx/UquHPBgc10zAmyl37Zjm1txqMJlmw
JoKJm4+Yf15O1set6lBqi2Rihz//jV1k/aLeN+Q9opkYepii60jyc0F7/Qal
WCamVqYJPCb5a6Y9kxx/yMQDW0zN9oxVAXvEZW1SPBM/7nL3eNRVBa75G0WM
EpkooljQ7FxZBX03egSWJzPxelvjgG5CFWxX9fjTkMLEoUjH/BNeVRC0XG7q
RhoT74audQq2rILPfb2ft2SQ83pIoohPrQqSLm0ZiMkm54vh0xrLXwXzygNd
x3PJeDnhM8+HKuEE/922JfkkXi85PF1WCSsiXlXYFZF8lx5Jdz1XCe68gMij
FUycMv2nXJFXAZ+GeA9mK5noWF30VMatAgx+/whKr2Yir8zrqrIGOQ9KJ30W
8phoLiJrdOB9OfRlb3Cuamaiw8sEdfqictgWQZyS7SHtjjoLZVaVwkPud8OX
z0k+Vg0wksn/0aVd6/Xu9pL9/STRUde/BF4L+2sM9zNxj0fBLe+FJeDvafRf
zFsmrt0+2XH9UzF8uDTJWDbBRKPerpslKYVw3G+dRMU3JppE+LquOFUI1RmG
4lbfmUh4JyqeXlkIocM1og0/mSjq1GC81K0A8IQv380/5Dyvk7WoLMyDaFXO
u0+CLNwr+qV51b4sWGRu8CpyGQvP1tgHunEzwdbdp/+QCAvL/kV5HJXLBLXK
ia6kFSz8oRsRasbMgKkt1Q0nxVn46RBrtp2eBqc1J4ilVBYG5GsZRiSkQtsF
dnUpjYVXr7akXdiQCgmp97irGCx0nqnXst+ZApoS+qlt61g4ov1MQ9wpCSLf
y/NObWCh6/DYuMzaJHifu3RgXJqFeovK9rhwE8EFq1eIyrJw2YFHGoJzCdAq
GC6bIMfCh02lpcYJCbCm+8ohBXkWHlProEoeSYCccxwXXQUWXqkwi2CoxsOM
/N/w99tYODF9/HJWShyozrwotN/OQvGFYYlmQnEw4Os7GqHMwv3eLfIhI7Gw
Qe8s/6ZdZD1au1jyp2LhmuQ+ycrdLGT034ja8SIGhAomdQb/Y6FdT5FKzWA0
GNxov3QJWHj05YJJfetoSNqfem8eWcin58fwm42Cr8vckwP3szDukIW1ZVAU
7HpuVMtUZWGgxbqT3+SiwCtu28vCgyzsHLa+sLUzEp5aCU/tV2Oh8oKrM3KO
kWA9R2w6p87CjQ1KPlf6IoDbEKU6fZSFJ+OpDdXBEcAXYHf6riYLPXISR3q0
I0DDQNOZosVCcw/n2vK1ERApJR2WqU3ax4lZqzfh8P4jX8FuHRZWdv1kvi0I
h61F/W3tuiw0ddgWzbobDi43uSPG+izsTriZvt4iHFpU7/N9NWChpbih5UfV
cFi13FrC3YiFfvn3Oy3kwsG0V0VpxUkWdtzcWBZEDYesBInjiadIfwx9bCkc
DtPnf9psM2EhM3hJzKBAOOxX7PRuMGXhcZ6k7yh/ONz/k5GoZ8bC6tHIVzcX
h0N/k2f1yBlSb3mrKn/RcNgQaNzrYMHCHWa9bGFGOFwzUvq+5BwLny0TmPmk
EA61rBUiUZYsFBG7zkc9Gg5Cn8ekZazJega/jXidDwd9bsP+qvMszBsI3kkP
CIcE14cmGjYsbOP9tW0vCYfxQ45OQxdZWDrw5rvrcDjsXHE89PJlUs/6SFGG
WAR4vZTJ+3eFhWn8awXDNCPgaZLAo6CrLCyJHl/T7hMB9Iuvhll2LAwTzDid
3hYBxfPBVFUHFuaUdRz9dCIS5ltstj93ZKGk3/VdtIxIUA8+qGV5g4XlVMfF
t+ci4R1n1uueCwsNdynL3c2OAvkvXfFUNxbGF9Stfy8YDc6lOZVZ7ix8Vffs
yF+baFh1xOzbY08WfjyxzX5odwyoXG45tdKH5HfBv/eO/2Jhrm/sUKMvydet
517rPB8C94DwNkd/Fi7HoE8DS+JgA/X40qFAFpqUGa6Ll4gH4cZ+bkY4Cy3s
l+w5kZ8AfdSvIpjCwlot1XjllckQ4rVi9nsqOc9fggLZpslwdGLb+9R0Fhr3
bDJ5lpUMtY2OlcuyWej48eaHBQdSIOXKAqveQha6GG/fY2qTCqb9HB3fYrL/
WH9TKcWpIH7w0H//lZD9s8/oYcpsKvjS/FYnl5N6Z3Ayyz3TwLZpDe8ywcKV
lae8A26lg8xW5WxWHQt1fH/sCKpOh+HoE+E99SxM/VM67vgzHQxs4y7ubibn
46vAay+zDFgxwDP80sLChPbDm6+FZMCjg8P7Ex6xsF+9oqSnLgP2SmykLu4g
9Sm88y2AkgnTd9QFKp6wcPPbvvl8yIT8bxcnbJ6ysF3bTviVRSZYnwrsZ3Sx
0EiWvvCfVyawmwubnnWzcN9+f4O5pEwY3NpT4PWcrPdnk1B5TSaExUzHKPey
kLXEqJL5PBOOLabe/dTHwowxn1jJsUxYenXPtYf9LLwvYesXOZsJ9QMmJtqD
LDyxflTQZXEW3DzkcXjhK9K/2+5IsWgWbC9MUix9zULRI0u2yqzNgq8STYzz
b0m9fFJNOsSyIMN7VJA+TOrN+aLguyYLzkwK/nzynuyPRLdnx5ZnAc1Y7s2t
Dyw84LhfVkggC3qaj7Vv/8jCeyv8/2b/zIT7CldLR8fIeeymDKwbJvd9bGhi
9GcWXqwd22L5OBP4lpT6a34h9+2N6YPmhZlQebXPkW+C3N8Py48Ih2SC3eCc
efE3ct6X3T9mdDkT5NQkj1l+J/t346TOnkOZ8KEQdlGnyP3w+Y5qNjUT4unm
6x7/ZCEtam5h/McM2K0oK2/+i4UbtGpmeKUZ0HNkSnlm5v/7b5nsF48MuGxW
o3J/jvweGKe5MNQyYKmj99F1f1j4/OPyEG3BDEgK0NKv/Evml4vvcW9Jh70p
lNPa/1ioUO5zPZPsH9tnWddc+Nmo9Oya8/uxNBD6aOeySoCNy/tpilMRaZAy
v9c7YxEb2VHOk3MqadAn2xnVs5SN2+Kz/n73SQX0/sGTE2VjqOMr57djydAf
W91Wv4KNwk4rh385JsP14js9RqvY+FZhJmY9fzJkvBH/6LWWjbSRoe4PQkmw
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
ut7uTFs2/A9lQImq
       "]]},
     Annotation[#, "Charting`Private`Tag$24920#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {-0.08331968067461933, 0.1999999999998334}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8463452714894133`*^9},
 CellLabel->
  "Out[239]=",ExpressionUUID->"6bb60325-836d-47fd-ae8d-c1fd97e4f63a"]
}, Open  ]],

Cell["\<\
It looks like pretty complex behavior! However, this is just a linear \
combination of the normal modes. Any arbitrary motion of the system can be \
described as a linear combination of the 6 normal modes.\
\>", "Text",
 CellChangeTimes->{{3.8005058510529156`*^9, 
  3.800505908881997*^9}},ExpressionUUID->"a85bfa7d-9346-477f-a841-\
9917198ca319"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Written ",
 StyleBox["Problems",
  FontWeight->"Bold"]
}], "Section",
 CellChangeTimes->{{3.441220828720395*^9, 3.441220849173782*^9}, {
   3.441220923018477*^9, 3.441220923518483*^9}, 3.4428717138731413`*^9, {
   3.6381366370179396`*^9, 3.6381366460191555`*^9}, {3.80046652627296*^9, 
   3.80046652730499*^9}},ExpressionUUID->"e9e5b1ca-5fca-4540-8baa-\
3d7c2ace939a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
T52Mvs5roXTrinuYI2dWDzyoj8Ty82LUefZyAcKBjIqUBEfcTJB50YMZnoFK
pWvX8UiN1GdPHt2+vtZ3K5VpbX768MbqzvjJRrNfPhzpMce8Z7FsJya4oTBj
DUm+IcNqjs8nFk8+8qWbeeLiRsWPhb0gK8nghbsbj3EJjIenmDTVMtZW/MMc
dxljb1bMsWBfKL3qNKakG3CC9y9oVtIh0VmU4EUfGkZyhzmuwp8YfVnnJ0OM
Cs2uju+sGjJdK0SZdXkwGOjYndWv3vWXN1G1c9NyyZsdxqCTbJMYhCrAx665
F9VI1BcND/AleegJJJoh0GN3VncyN5gbNd7vGQ1QShXspicULR+j6ewOSd/N
adRW/CSQ9kPE+TddYzuq5Wx9ZMDPDnqv5uTwhULSR+h8IkukCo22ISUdFFy+
kFgNLqvSQLaM7tQRpFyL1hDRz5LlIS7zodqMG0eXxnR8nYSWiCDSaI1CGvat
RVnUfnHxPurwTrCfrdJLpiZg5uChsVfv6mWTJ4kBFW0NdX7KkJ7IJ8yRr9JT
ciQGlVXsnduhQvJIODu+ZMzSEMKTOUQt8NDfndjYp7cM6XKosSdPjhdf2pVk
BQ/5k9q+79ZG3r0e33xU2/KXXcJgW9/99OmR2rfiG3KT25Gq1cOvv/6tjezK
Y8GkiiJBnlKMq6Z5fY5qU26ZjsEjrz25uXfkfFiMpbm3tsVqpO+ps2e+1n3v
0/FEYqL/5SXI2Kgp65JRYvkO/cKs6Boa1aNLUqmLwhYcXezc9pLs+4X32uiy
SsHsgrI1lL9Bv/HTO8zx+US40KBo+7Di4tAIx0VFbjQ1aYltrAV4hjkeMkba
LH4xaAf1Uccxxc8kRnV68IXnaj1s6TAxYSm3EkS3Tnil/s4X5vgJP5MKVXGZ
Fdriyf09+hZlnajiqrfDr3ySa+fYI8mbHcagk2wbcAhzHOxaAeoiai5JxnhX
qvsuGg9v6/y27Ecl/d4YNfVMBiitCktW0xNIft3PaDq6Q4rJy2fU/CTQ4IfI
NyspGttVLWfpIwOedlCol2OYk8MXCnAcoayJSE0r5/AP5+oV51DPNmAc3ekj
SDEKHfcM/WKo9hcjkUNSn/3J43GU3X/fmRPbu7fH0micUKLxdxJaI4JIoUUK
Se5bi7OoLfAgSJLeq+O7bjHMZzJjrd5eR7htcbfKmoQ+GeG3mhO+nLyYI3yP
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
rX8KPMglnRlb28ol5O8h7wzlG+Dnp88M3dvdPbApjhM/qk++te34y8uWhuLT
qhTGXR8ixXSBEeYtRxft1Wef3Py9NwKXhguV6p+Q5+bcm5qEn79Q+5FcafVT
SsaKRJiykJkTfLGNsokbxlVZfOxueXFy9PA3e7ZsCSsVOL2fzL+5Zzh6j3m0
UpiLoV9hE8MERqqRl7SIQssjl+Dw0XcGer4uHjNke6IcJDysiLbiE/Zv+gVP
nmZoJU0zUJgGgvlV5jSAeTQGSYbWM+Wgi3DUuqZCuo/3IsaXUKl4ylSdqwQA
AJXkEmdFR6mqj6/FVJPTtdHmK2KXgu7UBVbjt3XuWgsLLtw3EN8cn9/Ud6CJ
b1a9X0NdtJcsnnlWOm4Z6+R/fpvl6qHTPivMTx/uCdUwP2Qa7x8wXHMjrJeF
yW0qFbnd4u3cGmrzJpZF/pClZcTIjkdMifkTG2ox6Q7RiIh5RztkH8m5HYQK
Gq8HlRazlsJ76j9P7qgUEfrdsHJhaFu1hEmkLPsMykXe8Q+vMGHuEKa7LQ0V
H9xI618TRXSBrRGFtOcd3C8VyiyXU2hzearfsalJkvaX+zEpW1W+7txdKYkV
0Z1h89hJdIXyad7m4jDh0zti5/6BOXLiS2x6zNoyijdLFmNFWjpX12K8pEV4
vygbvz0fZzOQshC7SDhfExnsPzERtWeUiNJNVj3NEN/QpXafGXogSEpG0kiJ
wAufKEZj6GRqvTigJncpOGpdcyGdxntR44vD50Ow1gMAcOD6hbPJhSkN8/H0
8M8M2filJ8PVkKNnDeFAmHEosgsNnfzqlfCFvz59101qvspkP9V702eGEqu0
6+kDbymzZixTkIgyNxumcrW9hHgsNvfLE/2fqwxw8+HA8uLkM6eEQ6B004Vn
c+pS06lbBBnzU6/sSw6B6s0rxiAx4cqIuWWSPKvKT8LP8XwIgpmLYiLBi+At
FuUdTXrTox2oYqiZJcJd4h+LLaDu3yNI7B1VQZE4b3bSts9fEjqafA+fthUO
5yYOBrPdYp66lIaKE8zW4vf31UZepsTAQL4uSH89S3teGXj8ycBj/LXglSVd
9lvy7/KSgbWpST4VYgGx/T+h/i5P/KYqJXJ0JJ1rqs4iJRLBp0lhjt2t5FS4
MMbjIIWFFS56LKVlbMVYJt8vdZCXtIi9ydTC8tijnX9EKrE0CY9OlyxJBRCc
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
9/ccEf4YjNDObS/JypbrH14GpmqkgUl+hQpzGq7jd9fly4mq3L9wz9Avhmp/
MRLNWwqZV/vvO3Nie/f2oTOq0yv0hWtdwtBMEZuguSqfO8TdEpdnQmjN5ije
Dl8Jh5XiLzmm9QjnipXHwpG7KfqivAS//gs//EFfz48075qPjjSd+c+vPCau
6McNkkkRMfsiDzQmvapVpXA1IiU2bwgPcx488Up/bd8pVV3Ln/Z0G/JoCS9r
YocNgdrXu7u3s+CFz9SpxfawqvZZUEUJcztFK/Psvpw/7mFOcjxHUCBuqttJ
/BwstXz5Ueeeh75X+9vx65/MvbUtmFr8/rnfvS1pCUOYU+vu/lMWvOTxUdMb
t7UJ29ZpNr5EXM/mxIuJmisb94j294XR764TfYxIh1CeMBeq9PuDuDRq8yFc
MJL2DI1jZZ+mlHjExIcz12/K7BCXWHHgR+aGqghbHy8+zIltn6zS3Y8Cefyc
Nw41bx8aO8Kh5eva9lEZh4eKmeDalVeZ/YV4G+8psS5e3cc/Z5ooE3vWWYRc
q7ZiDHPc2zYOZ3RjlChYjzBHTd3JbYci4XEjE3MyC6N7KltSjWDsJ8hj3OMw
UXJnhGqdjVb73OZ1SmxY+aIeprEy8PpGPoPSMuRlH2qY0/BvD23pKugWSKOu
Y+2gTwzqKsWxLlFFtCG/MLr7pkd8njEVw128Xb4Svl+1m8FYu+mRNE0Yir0m
w1fHt6+XHCFjC/PRIZbQqjNXTLeoeCkibiXVeQZWVHL+QSmGoxUou3n5qBH3
/6wY1ka93YacWsLTmpjgYY7i0vBiqPrc1aqS7kHcFHrBBBmTXOucvlwG3MMc
YWcdGy+uqttF/NwtNW9/g4tuuMOIl1+bt+c+atJT7j5quxL23edpxdhEnFMQ
MLOrOJ9JfCFKjuZj2LQxVyyputpyvIsvprCXJJs8TfAqGw9FEm5Y/FpK/MjA
oZAwh8ay/ckF8ue286Hc+pux7d2Nf04EL6HzwLeCsI6jFgiSiVDhX326b4W3
sOZa6z3lLEKuVQuge829bc3fKigFAfcflNn4uISK9g56pNKbddLJ1BcktHVO
PAdZYK6+sW2jMEiFSUITtvPCpIxJ6qgRx+390s3F3XRv1nVxB+l953jxol4X
NqySvW0RV4UTMS7PRBCazVm8Xb7CIu4BeReNy+GRuOk2yFsZl9Xd++bRwXPe
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
bH54zDdmzzGP44z/4UhMD7NkGb0tdnPPstU+BbDnGTTxY47zbvuxHgx6bWPO
L4s7po1rJXf7l1+o0XrLiah9nwxQ2DHRIGrjoo5ZwryftuPpn+cRPGFejxaN
v6uw5q1ntg5/eoj53Cpmh56jbjVnbJuCbVrP2RaTmGI/OomLKoGG48+FVbxO
k7Lhr7UNH7LxpLLPuwWzWJnR2Sx7VpzzGTr/1QaIOQAAALhqVlUf6K/6nlXF
isQvsz0bxSwd5h1AAhbzniI2+Wt+T8A8sua9DPESR0xJ/2idlX/4980rwqz7
smFKv65Gl+KpI+JiTijdDiLmSTfX8NMcD2scCvtmBCtfWEkwjpVrvIfLem6R
7yNNY5ezDkve6NNF8S4h8wym/zEGEjt0MZ8Kxedwls04+B3piWEdU0cQcwAA
APCPiql1/S76uuxVOQcXVyEHKuatsBCU7b0tAfoWU+HHXfhkxLs3J6RuJ9D0
NY45wUv62KEL9FFL3CcsXt8N3krMh2L+Qx0bQ5wECpsDdzrLsd3O0rj+Dwe8
Gvwl9t6chMYEAAAAcMom5phM4bCkD1RmmwL7CurVqMjlH3Wybmb36lv0BwcJ
LSkQUreDSeyYE7t8QaB58brgMO4WquCtBLwgMNo/FHMcz3L0p2yxk5e8Ud83
Zmw9EuBVxBwAAABcPZuYY75Vwv/qr0ACldmmNo4rxRNm7qYvl7xRnU+nTf5t
S4C+xdwVYsmSocOH8cNOSN0OJpFjjnWRWOCYE3cDkbXPxIs5Iczy6f3LmsZb
GyG8c+y9QhZiDgAAAK5egjHH/hZ1S/CY4zBxxKy79bC1Wlfwvl08tWVg3MLF
0bxXwA6p28EklZgT5Chiu5cUPs0JaZYvexa+7uUTVL0X0CbmAAAA4OoleNGa
zZrDv8xpPc3u3pzYa6sC3bduXvBR68/3RP8jZgkCn/vTbfp22S/sWOunhdTt
YBI55ljrBgRagsCre3HfTeyL1pzMsrd4YSfQWhbEHAAAAFw5R0sQ+C3SFS3q
t97Vhm21W2kt7uZ03+W/PE7v+7x+u+hsEntzum9l69+3dROrjIpf9lsLI1ul
ckjdTmBYEn0JgsDLX8cklwRXuvN+8XVYgsB+ls8dGOtzLF4PXfXPa8QcAAAA
XDm7T0ziPlMI87mN4vT+H3r0Klg5oefmeC96Fv8mmqjIlWPrPH7XaE9xG/sy
n/s7Yutn75gzuWBBv7LffHwTV/OH0u0EhiVIzAnpxp8rijlxiy0EWv465nYY
74+rElxpzX8//1DMcTrL6mEpvz74r5sdeyCh3NIFAAAAxBPsATExrEdqBhD/
IiWr1o3/F3vrGZEBWJeoWSW6dZvGgW1zWrcsWLBRuZhFlY9HRS5r+um0i7uU
Pvw+ozHluvdDZJx3O8RhiY0M5vGpUfsGV3vl64TuALJGxj/m2Hwr5rGnYb5x
xtrK5wI/awz9kkjQRdtir+5zskhaTHIMsgC481nO0rz1lniL43nuQrIedXrZ
a7ns6GePRl0+fWBe/Trzo78Z+6jT2GeSAgAAAIGd3r+gRnjMn+GD3MkSc9eM
X1jwyRpxha53yerZwb7BrwWogeNf4GStkBxv/9tjPlKJK3pjlxdo1LfHDyYY
RC/e1Sh5Xt/LpRx2O7CLp1bWjx2W+GW5FT3sB817V9Z1WbHhKNDI+D8e1Izq
nA/NzUfhndutMMdrLtLzuzws6Pgf2Da8aMxAhPccFvewoYuntrSLXfQsoeDg
NZjBQqKDWbY+pmlcZ+xKMw4mufhMive6014tWjnO0fNMAQAA8B8Vtyixt0Af
KyhKLH1vdPvY0jO8c+vPV3iV69bD7oPvJypyxdhWcdV+hxG9l/neQBK3nkBc
GRwbN+KKfHNvzh9bv3rNWnzAK/KE1O1g1nllq1hedXXsZwpqd8DgLf5P7fES
+zFKoME5HmjQAn5WcsD7YKPXlBsyMf4C2l71f5zoz3Ss5dq8peyz5mLAqQ/y
mU7AnQQOGgnMsrk35/SpyJETrcUHvCKPF2vd6cIFe821FmHj0xwAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8BEGAAASkti/rgEA
oUns3xsAALhAYv+6BgCEJrF/bwAA4AKJ/esaABAa89O7bt268wAAQHwtWrQg
5gCAG5mf3g0aNPgGAADE16pVK2IOALgRMQcAgGCIOQDgUsQcAACCIeYAgEsR
cwAACIaYAwAuRcwBACAYYg4AuBQxBwCAYIg5AOBSxBwAAIIh5gCASxFzAAAI
hpgDAC5FzAEAIBhiDgC4FDEHAIBgiDkA4FLEHAAAgiHmAIBLEXMAAAiGmAMA
LkXMAQAgGGIOALgUMQcAgGCIOQDgUsQcAACCIeYAgEsRcwAACIaYAwAuRcwB
ACAYYg4AuBQxBwCAYIg5AOBSxBwAAIIh5gCASxFzAAAIhpgDAC5FzAEAIBhi
DgC4FDEHAIBgiDkA4FLEHAAAgiHmAIBLEXMAAAiGmAMALkXMAQAgGGIOALgU
MQcAgGCIOQDgUsQcAACCIeYAgEsRcwAACIaYAwAuRcwBACAYYg4AuJT56V2i
RImXAABAfGXLliXmAIAbhQEAgIQk9q9rAEBoEvv3BgAALpDYv64BAKG5hKRn
9OjR1i/WhQsXJnZ3ACQtr7zyivUjYs+ePYndnf+KxP51DQCA63344YdWDfP1
118ndncAJC3eMee3335L7O4AAAA4QswBYIOYAwAA3IiYA8AGMQcAALgRMQeA
DWIOAABwI2IOABvEHAAA4EbEHAA2iDkAAMCNiDkAbBBzAACAGxFzANgg5gAA
ADci5gCwQcwBAABuRMwBYIOYAwAA3IiYA8AGMQcAALgRMQeADWIOAABwI2IO
ABvEHAAA4EbEHAA2iDkAAMCNiDkAbBBzAACAGxFzANgg5gAAADci5gCwQcwB
AABuRMwBYIOYAwAA3IiYA8AGMQcAALgRMQeADWIOAABwI2IOABvEHAAA4EbE
HAA2iDkAAMCNiDkAbBBzAACAGxFzANgg5gAAADci5gCwQcwBAABuRMwBYIOY
AwAA3IiYA8AGMQcAALgRMQeADWIOAABwI2IOABvEHAAA4EbEHAA2iDkAAMCN
iDkAbBBzAACAGxFzANgg5gAAADci5gCwQcwBAABuRMwBYIOYAwAA3IiYA8AG
MQcAALgRMQeADWIOAABwI2IOABvEHAAA4EbEHAA2iDkAAMCNiDkAbBBzAACA
GxFzANgg5gAAADci5gCwQcwBAABuRMwBYIOYAwAA3IiYA8AGMQcAALgRMQeA
DWIOAABwI2IOABvEHAAA4EbEHAA2iDkAAMCNiDkAbBBzAACAGxFzANgg5gAA
ADci5gCwQcwBAABuRMwBYIOYAwAA3IiYA8AGMQcAALgRMQeADWIOAABwI2IO
ABvEHAAA4EbEHAA2iDkAAMCNiDkAbBBzAACAGxFzANgg5gAAADci5gCwQcwB
AABuRMwBYIOYAwAA3IiYA8AGMQcAALgRMQeADWIOAABwI2IOABvEHAAA4EbE
HAA2iDkAAMCNiDkAbBBzAACAGxFzANgg5gAAADci5gCwQcwBAABuRMwBYIOY
AwAA3IiYA8AGMQcAALgRMQeADWIOAABwI2IOABvEHAAA4EbEHAA2iDkAAMCN
iDkAbBBzAACAGxFzANgg5gAAADci5gCwQcwBAABuRMwBYIOYAwAA3IiYA8AG
MQcAALgRMQeADWIOAABwI2IOABvEHAAA4EbEHAA2iDkAAMCNiDkAbBBzAACA
GxFzANgg5gAAADci5gCwQcwBAABuRMwBYIOYAwAA3IiYA8AGMQcAALgRMQeA
DWIOAABwI2IOABvEHAAA4EbEHAA2iDkAAMCNiDkAbBBzAACAGxFzANgg5gAA
ADci5gCwQcwBAABuRMwBYIOYAwAA3IiYA8AGMQcAALgRMQeADWIOAABwI2IO
ABvEHAAA4EbEHAA2iDkAAMCNiDkAbBBzAACAGxFzANgg5gAAADci5gCwQcwB
AABuRMwBYIOYAwAA3IiYA8AGMQcAALgRMQeADWIOAABwI2IOABvEHAAA4EbE
nKTm3Llzc+bMGTp06KBBg+bOnfvHH38kdo9c4OzZs5GRkcOGDdOgjR07dvfu
3T4v+P3335ctWzbIY8mSJUePHk2UfroRMQcAALgRMSepUUFetWrVW265RTPS
qFGjX3/9NbF75AJHjhwZMWLErbfeqkHLkyePcqLPCzZu3NixY0dznjdv3nz9
+vWJ0k83IuYAAAA3IuYkNQcPHrRmpGXLlidOnEjsHrmAwuA777xjjdvEiRN9
XrBkyZJnn33WfLdixYrff/99ovTTjYg5AADAjYg5ScqxY8dmzpxppiNTpkxv
vfVWYvfIHYg51w4xBwAAuBExJ0nZu3fvkCFDzHSULVv2s88+S+weuQMx59oh
5gAAADci5iQpW7dutarKZ555ZsGCBYndI3cg5lw7xBwAAOBGxJwkZfXq1TVr
1jTT0bZt23Xr1iV2j9yBmHPtEHMAAIAbEXOSlMWLFxcsWNBMx9tvv71nz57E
7pE7EHOuHWIOAABwI2JOkjJ9+nRrOiZMmJDY3XENYs61Q8wBAABuRMxJOvbu
3du3b18zFwUKFJg3b15i98g1iDnXDjEHAAC4ETEn6Vi/fr1VUj7++OM//PCD
zwvOnTv3448/du/e/WmPESNGbN++3eHOT548qR1qutWE2bxx48Y9evRQIti0
aVPATXr16qXXtG/ffsqUKeYru3bt0r9fe+01aw99+vSZP3++Apr3hocOHdK5
NHDgwLp16+plTZo00SaffPKJ+hAVFRWshxcvXly3bp32//7777/88stPx1I8
0eYff/zxqlWrgm1LzLl2iDkAAMCNiDlJx6JFixo0aGDmol27dj7pQxln6dKl
r776au7cufWCtGnTKqRs27Ytwd1euHBBuUN5RKmkbNmyWbJkMU3cfPPNefLk
qVq1aseOHRcvXuy/YbFixW655Za8efO+/vrrp0+f1unRrVu3Rx55JHv27GYP
+m7hwoVr1aoVERHx008/mU4qjAwYMKB27dr33nvvjTfeqJelSpVKm1SoUEF9
2LFjx9mzZ30a0ld0IEptLVq00P7vu+++TJkyWadlypQp77777vLlyzdr1mzs
2LFHjx79+++/ffZAzLl2iDkAAMCNiDlJx6RJk8LDw81cKCmodLe+pZSxevXq
l156KVu2bDfccMOtt95ao0aNWbNm/fnnn/b7jIqKOnjw4IQJE9KkSaPQkSJF
ittuu02pIWfOnMo7CiDJkiW7884769Sp47+tvq6e6JVKH8pBTz31lLbVJhkz
ZsyRI0fmzJm1N3VGr1Hyevfdd48fP66M07Zt21y5cqktba6XZc2aVb3Va/RK
9WHQoEG7du3yaWjfvn3Dhw+38peaUMzJGStdunQ33XSTvq595s+ff968eb//
/rvPHog51w4xBwAAuBExJ+kYMmSI+aRGpkyZcuTIEfP1S5cu/fjjj8o1t99+
u/l0o3Tp0tu2bTt//nyC+/zrr78WLVqk3GGChhJK1apV33zzzb59+7Zr165Y
sWKpU6fW17VP/21NzFH6KFGiRPHixfVvZaLChQs3a9ZMmaJNmzb6lgkg5pMd
xa7q1atrK+1Q2aR+/foREREdO3ZUb7WheZkS1uTJk3VE3g0tXbpU+zT7F/Xq
ueee6xvr0UcfNeHO7KFBgwb+V68Rc64dYg4AAHAjYk7S0blzZ2surI9yzpw5
s2HDhvTp0ydPnlxfV2Dp0qXLsWPHbG5y8aY01LNnT7PPBx54YMaMGT4vWL9+
fY8ePcqUKeO/rYk5hkkuI0aM8F7jevPmzY888ogCTpiXVKlSNWzY0PumoYMH
Dw4bNsx6QatWrVavXu3d0KZNm9TJQoUKjRw5cvfu3efOnfPpiXJN69atrT3o
ZadPn/Z+ATHn2iHmAAAANyLmJBE///xz06ZNNQuKMwUKFNi3b5++qEzxySef
KIPoiwoapUqV6tu37969ey9evOhwt2vXrm3Xrp2Z3zfffHPLli0+L1CMUlv+
X7/sFXPUunLWpEmT1LT3R0h//fXXwIEDS5QoYZ1CqVOnbtOmzfLly71vwLlw
4cLKlSufeOIJ85rq1atPnTrVuyHtR31QaDp8+LAyjs9nPZc91+xNmTLFuqqt
d+/ePk8UIuZcO8QcAADgRsScJOKbb76pWbNmmGdlgFq1aqng37Vr19ChQ8uW
LZsyZUqTDkJaWs1YtWrViy++aOa3U6dOGzdudL6tFXMyZ87cokWLo0eP+scr
xYenn37aOoVeeOGFb7/99tSpUz4vUwx5++23zWsU1kaNGhXSUYiCiZWnFNx+
/PFHn/0Tc64RYg4AAHAjYk4SMX78eJXfmoVbb721a9euq1evHjx4cIUKFW64
4YabbrqpSpUqkyZN2r9/f6i73bBhg9KNVd5/8sknhw4dcritFXMKFSo0efLk
gK9RvmjTpo11Ci1cuNA/44hS24QJE8xrChcu/P7774d6ICtWrKhUqZLZQ+PG
jRWmfLpBzLlGiDkAAMCNiDlJRERERNGiRTULadKk6devX7du3QoWLJgsWTKl
ngIFCqxatSpgfEjQ3r17hw4dat0+89hjjyluKC6dPHny77//9r88zJsVc4oX
L+7/EB9DvVIos06hzZs3B3zZ8ePH582b5zDmqGPnz58/c+bMCS86OcuXL2/2
UK9ePZ9zlZhz7RBzAACAGxFzkojnn38+c+bMmoUUKVKULFnSXKh22223VatW
bcOGDVez58jIyIcfftiaZeUmxZaRI0fu27fPfq02JzFH3nrrrX825hw5cmTd
unVTp07t46V169Y5c+Yk5lx/xBwAAOBGxJwkonLlymbV5Ztvvrl27dqpU6c2
MefJJ590vuBAQGfPnv35559r1qxp1qO+4YYblKTSpk2bIUOG+vXrT5o0Kdhl
bNc55qifQ4cOfeihh3LlypU+fXr1No2XVKlSmYeNEnOuM2IOAABwI2JOUrBt
27aSJUuajJM/f/7Fixer1E+ePLnySJEiRaZNm2Z/dZk9bXvu3LnVq1crRDRs
2DBfvnzWjGfKlEkR5rnnnlu2bJn/htct5qh769ata9++faFChZRuzNLZNog5
1xMxBwAAuBExJymYOXOmKnxNQfr06R9//PEzZ840adLErJ+cLl26p556SjHh
Kj/TkQMHDqjaHzRoUPPmzcPDw9OkSWM+P8qYMWOjRo1UwV64cMH79dct5mza
tKl79+5Zs2Y1L8iTJ0+1atWaNm3axYtCSvbs2Yk51x8xBwAAuBExJylQ9MiV
K5emIEeOHKoqL3uCj6rxFClS3Hjjjcoj33zzzZ9//vmPtPXXX3/t3LlzwoQJ
NWvWVHPmJqDkyZN/8cUXCiPer7w+Mef8+fOjR48uVqyY+W7+/Pk7duyow9+x
Y4f3HrxXWiPmXE/EHAAA4EbEnKSgTZs25rMbRYBhw4aZL6q8zJgxo5mali1b
/vzzz1dz6Zo/RY+XX3757rvv1v6TJUtWt27dXbt2eb/g+sScAwcOWEtS33DD
DUoohw8f9t8DMSexEHMAAIAbEXOSggceeCBNmjSagvLly69atcp8cf369a1a
tbJmZ/jw4fv27ftn2127dm2zZs1MzKlWrZqSlPd3r0/M0SZNmjTR12+88cbc
uXP7RC0LMSexEHMAAIAbEXOSgttvv90sI/bII48cPHjQfPHMmTOfffZZkSJF
zOxUqFBhxowZ/2y7kZGRJkklhZijPmTIkOGXX37x3/zs2bOzZ8+2Fk8g5lxP
xBwAAOBGxJzEde7cORX2KVKk0PinTp1apbi+Yn1306ZNXbp0MbOTLl26Tp06
bdu2LaT9f/vtt7179541a9bRo0d9FjFQjFIcULoxn6Q8//zze/bs8X7B9Yk5
u3btatmyZZjnirWUKVNOnz792LFj3tvu379f/axbt675wIuYc50RcwAAgBsR
cxLXiRMnZs+ebZZQvvvuuxVkvL978uTJhQsX5s2b10xQmTJlRowYYf9MTx8K
FNmyZatZs+aAAQMUdlavXh0ZGakwsmrVKmWB+vXrZ8+ePVmyZKlSpfr44499
8sX1iTl//PGHEoo6ab7bsGFD9WT58uWRHtqqX79+ymLmoT/EnOuPmAMAANyI
mJO4Dh8+PHjwYHPFmtKE/u3zAhWWr7/+unLQDTfccPPNN9eqVWv37t3O968d
3nLLLWZ+77vvvsaNG3fu3FmFa4MGDfLkyaNvabdp0qS599579+7d6xOgrtuC
0jrxFLjMmm+SL1++2rVrd/YoVqxY6tSpdfj6b/r06Yk51x8xBwAAuBExJ3Ht
2bPnxRdfNM+vqV69+rRp03xecPHixWPHjqnCN5/45M+fPyIiwvn+Z82aVaVK
lbDgFJ3Cw8M3btzov+11izlnzpyZO3euolawTmbLlu3pp5/u168fMef6I+YA
AAA3IuYkrl27dqloV8y59dZbX331VZ9FAIyoqKiBAwfec889YZ4L29q0aeN8
/+fPn9+9e/f48eObNm1atGjRtGnTWtP94IMPqsUZM2bs3bs34LNHFX/0euWg
qlWrBlwZwOjbt2/q1Kl1CDlz5vzpp58CvubkyZNLly41Ky2UKlVq1KhR3t+9
dOmS+nnw4MH+/fs/9thjmTNntjqpSNK7d+/ly5fv27dv4cKF5outW7des2aN
9x6UBEePHm2OrmDBgopUPh2IjIy07nJSrgwY6xAQMQcAALgRMSdxnTlzZu3a
tbNmzZo7d+7WrVv1vwFfpqiyePHir776SnO0adOmkJq4cOHCoUOHtNV3332n
Vr6K9cMPP2zfvl0BIWDGuexZw1l5Yfbs2fpHsI6JEpDZrXp4+vTpgK9RE7//
/rv2piP9/vvvA153pzSnryu/KM5YnVTTO3fuVEoyn2qZL+pYTpw44b2tUtKe
PXu0f33322+/PXLkiM/OT506tW3bNrP55s2btcMERg2xiDkAAMCNiDkAbBBz
AACAGxFzANgg5gAAADci5gCwQcwBAABuRMwBYIOYAwAA3IiYA8AGMQcAALgR
MQeADWIOAABwI2IOABvEHAAA4EbEHAA2iDkAAMCNiDkAbBBzAACAGxFzANgg
5gAAADe6yphz4cKF/fv3L1u2bNy4cf3793/jjTc6dOjw4osvNmnS5HGPBg0a
tGzZsn379l26dOnXr9+YMWMWLFjw008/nT59+q+//tq4ceNXX301atSo9957
Ty946aWXWrRo8cwzz2jDmjVrNmvWrE2bNq+++mqvXr0GDx48duzYtWvXHj16
9MyZM4cOHVqxYoUaHThwYPfu3VWJqdGmTZuaRuvXr//888+3a9dO++zbt6+O
ce7cuVu3bjWNRkZGzp49W1+MiIjQC9q2bfvcc8/VrVtXGz7xxBNqtHXr1h07
duzRo8egQYM+//zz1atXHz58WI2qaf1bjerr+q5eo1fq9dpK22oP2o/2pn1q
z6NHj541a9bmzZtNo9u2bZs3b54OX/3RC9Q39VD9NB1Wz9V/HYWORUekRnV0
Bw4cUKPHjx/XUY8fP14joHHQaGhM1KjGRxtqrDRiGjftU2M4cuTIGTNmaFTV
6MWLFw8ePKgOT5kyRdu++eabXbt21baNGzdWV2vUqKH/6t/6ir6udvWayZMn
r1y5UhOqdnfu3KlBM6OkadX+1ahm88knn1TT+of+t3PnzvqW2tUMah537Nih
djU169atmzp1qnao3Wrn6p7VqDqsf2vc9HV16f333584ceIPP/ywb9++v//+
WwO1adMmjZtGz3t2fE4JjXzPnj21rQZqzZo1R44cUYc1R+q8dUpYs2NGuF69
ehpwMzt9+vTRcc2ZM2fLli1mdvQPHexHH32kb5lG9WJtYra1TglrdtSQxlaN
Hjt2TB1Qo+qMuqTXeM+OzylhRkkHaBrdvn37/PnzEzwlNEoDBgxQoxolMzV/
/PGHTokJEyYMGTLE+5TQ1GjDOnXqWKfEu+++O2LEiOnTp69fv16NRkVFXcGP
CGIOAABwoyuIOWfPnt29e7eqxI8//lglriKMCsJKlSoVK1YsT548d911V8aM
GW+77bZkHqlTp77zzjuzZs16zz336AXlypVTMdaqVatu3bqpQlZt9uijj5Yp
U6Zw4cJ6QZYsWe64446bb75ZGyZPnvz222/PnDlz9uzZ8+XLV6JEifDwcFXI
Kupef/11lV6qtNXofffd97///e/uu+/OlCmTXm8aTZUqVfr06U2jRYsWLVu2
rJKIakjTqIpAVYP6YpEiRUyjevEtt9yiDW+88UbtRLtSo3nz5i1evHjFihWf
ffZZNadG1bT+rUb1dX1XrzGNaittqz1oP9qb9qk966Aee+wxtWUaVesqfXX4
6o9eoL7pxeqn6bBpVEehY9ERqVEd3csvv6xGFSV01GpUI6BxUKMaE71e46MN
NVYaMdOoxvCBBx5QlNCoqlEVwOq2Ovzwww9rW+05V65caiVt2rTqqqZb/9U0
aW/6ur6r1zz00EMNGzY07aqw16BplLRbTWvOnDnVqGYzuYf+of/VF/UtvUAH
q3l84YUX1K4aVYerVaumHWqUtHN1Tw3pYE2j6oC6oQ6bRqtUqaLaXmeROqyB
at68ucbNtGudEv6zo6Ews9OoUSOFC3VY/1XnzSmhdgOeEtbsaP86B5RBzOzo
HzrYBx980PuU8J8d7dbMjhpSnFejnTp1Uge8ZyfYKWGNkg7QNKr473NK6J2i
gbUa1fvInBL33nuvGjWjpEaVXzTClStXLlmyZP78+W1OiUKFCumUqF69ukKT
Gh06dKgyr0nQzn9EEHMAAIAbOY85Fy5cOHjw4ObNm+fNm9e/f3/VogUKFFDJ
qrJKtZxqrYIFC6oeU+mlykrFW2WPChUq6H9VyCn+mPwS5kc1oUrKbNmyqYZU
KaiKThuqdNROVD3mzp1b+7/pppv8N5QUKVKoOFQpqHZ9GlWqUqOmQvbf0FSh
alR9thoV7US70g61W5tG1SVV+Oqe1aj2oP3oENSoDkcHFbBRDYIa1YCoh+qn
1WipUqVURWfIkCFlypTBGk2XLp1Sg8p7vV7jYxpVxa4O58iRQ1FCha71+hs8
zD90IKp7NUFqRdtqq6pVq5ptVX6rwFZ1HbBR0672rP2XLl26fPnypsP6h/qv
QlpdCjZKonEw7ZqDNY2qA9qVKnB9y/uUML01dCBp0qTRSeV9SpiB0phr5O1P
CTM73qeEmR3NtZmdYKeEmR2dOeqw/ymh2bFpVOFC52qwU0IjHOyU0IyrUSUs
/1NC0UlhJ9gpoVHS+GsWvE+J8PBw5TWNsHqifarb2rlmUK2rG5q4Vq1ajRgx
YtmyZbt27Tp58uTff/9t/yOCmAMAANzIScyJioo6f/78nj17Pvroozp16qj4
VG2mek8x4fbbb8+fP3/NmjW7dOkyduzY+fPnL1++PDIyUuXQWY99+/atWrXq
888/b9GihcotFWyqzfRfbatqU/8wGUfFWOPGjWfMmLFhw4YjR45ow1OnTu3Y
sUOR6s0331TxptBhNSoqR/VvfUUFbbVq1d5+++2FCxfq9abRAwcOrF27duLE
iWo0Z86cer1Po/pf/VvfUqOTJ09et27doUOHtOGZM2e0kwULFvTu3Vu7VYVp
MoKaM+2aRlXQqks9evRQ9/R6baVttYf169dPnTpVjepwTFnr06ipotXouHHj
1qxZo36aDv/888+LFi2KiIhQeMyUKZMaVdns06gKWtWoXbt2nT17thrV+GjD
o0ePKniqw+3bt1cpbj680LZmQ9OoNtfo1a9ff9iwYd99990vv/yiEda07t+/
X6P98ccfN2rUSAlLjXqPkv6r/ZiDvf/++7V/s63aPX369K+//rpy5cpOnTqp
ujZTYxpN5WHa1Q4VyurVq6eievXq1ToT1Kg6vHPnTtXYo0ePbtiwoUZDh2m1
ax2s4rOyRuvWrc01eIcPH9bBql0duM6xnj17KjEpdJjZ8T8lHnroobfeekvD
otf/9ddf2lYJXbOsudbsqFcmh/rPjs5tzY7OHJ0/2kQbanPtRG+Nd955p3r1
6mZ2/E8JzY7yxRtvvDF37lxz8Z62Vbc1wtOnT1ejCizmlDAdthrVfxX31Kje
I3qnaFLMKaGhXrx4cb9+/Z544onMmTMHPCU03Uo0nTt3njVrlhpVZtGGx48f
1wjrYL///vspU6YMHDhQw6gEpJ7feuut1pFqEHQC692qGblw4cKlS5eC/Ygg
5gAAADdKMOacO3fup59+eu2111Qamb+3q0JTtFGN9O2336pgtrng/88//1Tx
9vDDD1t/x1ZFV7t2bdW9KpJVSfbv31/1qupk66/TilFz5sz5448/lKrUqAo5
06jKs3vuuUeNqnZVzay6TsEqT548Zs8q+e6++26V4n94qJpVcWg1qrTy+OOP
DxkyxDQ6ePDgRx99VFWf1ahe/OWXX2pD1aVqVFWl+Wu/CktFoW7duilZqFEV
2MpcatT8SV+v0Z5feuklbaVtv/rqq2eeecb6PEUHpaA0YMAA0+jw4cOfeuop
Hb75rvqm7yoYmg6//vrrasg0qm/p3x07dlR5rEZV6ypzKTdp/MM8H3ncdttt
anT37t2qpX/44Ye2bdtqlMxuVQAXLVq0Q4cO6qpSicZZKeOuu+6yGq1YsaLy
xYkTJ1QPaxxKlSplLmAT7aRu3bojR45Uo0ox33zzjfqgvZmLzUQdePHFF1U8
m4BjTY2+rvNBXdL5owL7xx9//OSTTxSdNALmBRqTAgUKvPvuu2pUTY8fP75G
jRrW7Gi0NTKaHXVYWU/jr16pILcabdas2ZIlS5QlFQH0XWu3mgUNlGZEyUJ9
1mmjmdLsmCnQYGbNmlW9UtmvEZ42bVqtWrWs2VFEUh8GDRpkZueDDz4wacI6
JfTdSZMmacPff/9djWoMzezoW2pU597MmTPVqMK1MpcaNR+4qGMKWWpUXdW2
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
JFajkZGR1oVVakIZM1euXMoUSgdm/S6fTKFM2qJFixw5cijhPvfccyYXXI6N
GxooDX6JEiWUWXbt2mVtqw4orcycObNs2bLqmEbjyy+/tGKdZmf48OGqtBVG
9C0drCbd2lZ7Vqxr166dMqZOCTXhfUpot/qKZk1zpxn8+eefvUdY6WP58uUa
KFXvCqqjRo3yPiU+/fRT5SZ9S40uXbrU+74hE2Tefffd4sWLa2Y1UBpGMztq
WpOuRtUZnaU6V/Ve8N5Q3duwYYMa1eFoCgYOHGjNjg55ypQpak5vRv134cKF
3reS6R96H+ndpK7qBWp0x44d9rdfWXRcOiVq1qypXulE7d27t/2NZt4balj0
1gj2k8EwjyXVaGhmNTIJ3gEEAABw7ShQTJ48uWnTpv/73//saxhLgQIFVF3P
mjXL/h5zVV+qzzNmzJg5c2aVgtu2bXPeq6+++qpatWqZMmVSWavuBXyNgoPK
2ixZsqiMVzwx62vt2bNH9blp9I033lDp67+hSjvtP3/+/HfeeWetWrWs67Lm
z5+volGNKhSo0YA3Gqg0VcmqCl/VqdKK+SP8wYMHP/nkE9PoK6+8snbtWv8N
VfKpUbP0cfXq1adNm2a+rlzTsGFDNZonT55glwJu3bpVFakigxrt27ev0pa+
qLymRKCMo8Nv0KDBggULAt5Br0bLly+vRitWrDhx4kRr6Nq2baveatuRI0cq
BfjHT2WBAQMGaP9qtGfPniqPzdCp0bx586ZPn15jpZ0HbFRfXLRokYp8jcnd
d9+tds0CXyp9Bw0aZAaqV69eZp/e1A2V9J9//rna1cuaNWv23XffmW/Nnj3b
PCNViU8D5X9xlBpVgG3VqlVGj3HjxplTQnOkEt00qiwf8JI2nck6liJFiuiU
UPrTv83XFTGeeeYZNapzXo0GXN9g8+bNCrZmdnR05iOSw4cPqwOmUQ21wqD/
hjoENaS0otmpWrWqoo35ug5Z70c1qpyoRgMuBKHQpAhvGn3nnXcUq/1fE4xG
UrFafVNsUSftX2w+8NIA6p1iPVUnQffee2/Hjh2XLVvm8JMmAACAf9zq1avN
pwwOCxhDr1dpHbCeN1QQTpo0qXTp0jfeeGPjxo19ruexYZa0qlu3rvKLWa06
2NpZeqVqexXbN910k0rfH3744fjx4yrhypYtq0a1hxUrVgT7e7IqzFdffTV3
7twqp1u0aHH06FE1qn+okDMXNVkfQPg3unTp0nr16pnPQZSM1Oi3335rnuSi
zixevNim0e7duxcsWFClr4pn06hZGFkF7UsvvWTT6Lp165o0aaJGFcFUD6tR
leuauOTJk6tpDXWwVRHUaEREhHnYkOKVGj158qRGVd1Qofv000+rig72OBXV
0s8//7waLVSokHKcGlX2UaO33HKLBnnMmDE2nwWYjyTM7VEqqnUC6GCnTp1q
LnxSstMRBXu4ksZBc6EaXtGvU6dOCnTa9tlnn9VXzFWIwU4JjbxCq3nGaKVK
lZYvX64NdZKUK1dOX6ldu7ZykM3sdO3aVbOvDKuAZmbnhRde0NSYqxBtZmfl
ypU6Ih2pynslFyU1nY3qgBpVaNJJYtOoAqzilULNk08+aRo1Z6ZORUW2YI3q
ixrS5s2bq1FtPn78eOf3yqlRBVi9ZZTpNEH298qp53ofFStWzHpcrEPKX5o7
JXSHvQIAAPinqFJSnfncc88pUIRUwBg5c+ZUiR5sbaUdO3aoMlQRnj59elXL
9p/7eDNX0KnqMw9w379/v82LzQ0mqn7Vn/79+y9atKhnz57JkiVTo4pv9hfk
HDx4UGklbdq0qhJnzpypRv/3v/+lTp1aoWzv3r02GypQ6MVqVA2pua+//lpF
o3nMvTpgv8zv4cOHW7ZsqQpQ0cY0Wrx48VSpUqnEtb9RQgOoslaNakg7duyo
MPXZZ5/pqO+44w6VuKpUbbbVd1U565VKOmp01apVyh3mtqZgSwQYmgv1So2m
SJFCJbeOdPr06Wo0Xbp0/rc1+VO1P27cOLWrTZSSFA+VI1T5a6D87/fxoTxV
rVo18yQdpUgNlMp+nRIaPZ87m3woEyloqAk1OmTIEOWad99915wS2ol9FjA3
+Nx222358+c3s6N8p9nReeJzZ5MPs6yfBkpH161bt4ULFw4dOtScEjo/7dfl
1imh81xDqs3VqEbJPOlVYc3ntiYf586d0zvLnBLt2rXbsGGDzYt96JRQP9U9
HawaDZaR9SNCr2zQoIFZeyRUemf16dOHS9cAAMB1ppJv1qxZV1bAGKo8Vb4G
/FOwyrwSJUqYK8dCWnzp+PHjqipVW9aqVUslYoKvV9GrUkqdKVeu3NNPP12m
TBmFCDXq5I/b06ZNM4vlPvbYY2pUG6q2nDp1aoIbHjt2rF+/fkoK999/v/qp
vJAyZUo1GuzBlN50UNpE8co0mjFjxkqVKiV47dBlzwVjalSpQcmoTp062lxH
raQZcBU1H0uWLHn22WdVPGsrVfI5cuTQ7CgFJLih5k6NqpYuXLiwhlc9V6OK
PJGRkQluK7/88ouijTZRsFKfS5cufeedd2qgnFzLpBxXoUIFBd6nnnpKA5Um
TRrvy8lsKBr36NFDiaN8+fK1a9fWiaF8pEYDLt3mQ/t//PHHFTrM7OjcePjh
h7/44osENzxx4oQGSg2VLFlSo6TjVQfUaLAneHpTLKpbt65ZscF8jqmef/rp
pwluqGE014UWK1bsgw8+SPD13hQAmzZtalYODJZY9fXPP//8in8+iGbcuhgP
AADgOrh48eLWrVtVknkvlxQq1Uj58uUzq3t571xRRRWUebyOWnG47MDl2Mdc
qpJPkSLFoEGDgj1Z3psqPdXSZg3n2267TY1mz55djTq5Ru7w4cOvvfaaebik
KtubbrqpZ8+e9p8fGRcuXPj1119VA5tGVYErIqlRJ9X70aNH33vvPatR9fyV
V16x//zIUOJQo7ly5VIGNI+20dytWbPGSaD7/fffhw8frrbUaIYMGZR3mjRp
4uSGDrMGwn333Wca1SGr0cWLF5t7bRKkaLZ27Vq1q1HSwar1vHnzaqBsHsRp
2bNnz0svvWTa1bY6JSIiIhL8COmy55MvNaGpUZbUhpodxW19xcnHCgqqikje
p0S3bt3sPz8ydL5poLJmzWraVaMaZDXq5HNMpeaBAwd6nxJt2rSx//zI0DCq
0QIFCmiU9I5z0k+L3qRjxowxp8R3333nfxZpuObPn68AdTUxR+NQsWJFteVk
xgEAAK6eEsS4ceNUktmsq5Ygbas6cNasWaqivXc+b9481TaqLRs1amR/bZIP
1WmjR49OlixZ8eLF586d66QuNbdIV6lSRbWl+nPnnXc++eSTwe5o8KHS9PPP
P1db5liKFi36xRdfOHnEoXaulz3xxBNm6WnV4eqA80anT59+//33m0YLFiz4
0UcfOW+0QYMGmTJl0oYqIEuVKhXszhofes3XX39tVsoyz2Hp37+/w6lRo61a
tbrrrrvUqMppNappcn6nlc6NSpUqmYfOZMyYsW7dug7bVWYcNWqUec6RWfV6
xowZTk4JNaomHnroIUUGc+VYjRo1nM/OpEmTFP/N7BQuXHjs2LHOZ6d27dpm
FWjFuvLly6tRJ+W9Gp0zZ06ZMmVMo/nz5x82bJjzZaIVcBSvwsPDNT5ONjF0
SijdVKhQQY326dNn586dPi/YtWuX8rhm/GpijuZOZ87ChQtZiwAAAFwfGzZs
aNeu3dUUMJYuXbr41EgqoVUfFitWbMCAASH1avPmzW3bttU+n3vuuWAPefSn
CrNXr17mDp18+fL17t3beYtLly5VlWgO5Nlnnw32sNGAIiIi8uTJE+a5Talr
167ON1y7du2LL75oGlVhvGjRIufbDh48uEiRItpQYad9+/bOPymLjIx85ZVX
TKOPPvpoSCWxsmfp0qXDPPeVq1GHqxAbqsN79OihgKPNdVZo0Jxvu3jx4vr1
65s+a5rWrFnjfFudEjly5NCGmiN1wPmGK1as0OlnGq1Xr5611JsTOvMVUrSh
avtOnTo531DvR3Pmy1NPPTVv3jzn2yoT3XfffaGO7WXPcm2dO3dWi02aNPEf
W52WytRX//NBie+NN96wv2cNAADgn6IapmrVqldfw0iVKlV8bn/u2LHjPffc
U7lyZSd3UnhbvXr1008/HeZZT8D+/mtvKvWnTp1qEsf9998f0r0AqvRUD5sD
0T/0v8631dGZB8GrwnRyc41l165dCoCmUdWZAVe9Dmb+/PnlypXThhrhTz75
xHnMMesqm0bbtGkTUmRQ3HjkkUfCPNlKjTpfUOKy56MKzU727Nm1efny5adP
n+582y1btnTr1s30+b333vv555+db6uGChYsqA2LFy8+adIk5xuqFbVlGlV9
7r/qtY05c+aYPKi4/dlnnznfcPfu3R988IFptEOHDj/++KPzbRcuXKj3ms4H
beh8Kzlw4IBmUy1Wq1bNP82p/+Yzx6t08803P/zwwz4f+AIAAFwjc+fONfXY
1VNFt3LlSu+d165d2zySxvknMsaSJUvMJWRffvml/eph3lTqq2gvVKiQNlR2
C6mAV6U3YsQIcyAq+Zzc+mFRLfrAAw+EebLVihUrnG945MiR8ePHm0YHDx7s
5MYcy6ZNm1SUhnmeXrR06VLnMUd15qxZs0yjb7/9tpOFCywq9evUqRPm+ZBC
jYa0dtbff/+tGcmdO3eY51OkdevWOd923759gwYNMn2eMGHC4cOHnW+7du3a
++67TxtWqFAh4GNrgjl06NDHH39sGlUwdHKvlkV5v2LFimGeB8eE9Mmgznad
86bRfv36Obkxx7J58+bHH388Q4YM9erVc77VZc+qdIpIYZ4l0fw/Pxo5cqTy
+9X/fEiRIkX+/PmdrM4BAABw9SZPnqyS9eprGMmRI8fy5cu9d64AdfPNNzdr
1uz48eMh9Up1uFkKWAkipIv5VcObfPTUU08dO3bM+YZnz56dOXOmORCFrJDu
JNLRVa5cWRtWqlTJeSi77Lnr5LvvvjONTps2LdhyvgGdOHHCfOClGj6ksv/8
+fOKSKZRlfHOH7Mif/75Z4sWLcI8HyGp0ZBuJzdP/FQo0+YNGjQI6a/65ulL
ps8KkiF9iqTZMXe71KhRI6TZUSvz5883jc6dOzek2VFwUHPasGzZsiEV9jol
lMVMowp0IV0WqFNCA5syZcpy5co53+qyZ5GBn376KcxzXZn/Z6ARERGZMmW6
+p8PyZMnz5kzZ0jnKgAAwBWbPn16vnz5rr6GCQsUc0qVKqWiq3nz5k6W8PWm
mGMes7Jhw4aQYo4aMjGnVq1aIWUr1bRfffWVOZBvvvkmpEJa5WWVKlXCPKsl
h5StdGjff/+9aVQTEVIhrcRhxZyQqnfVtJs3bzaNfvLJJyEV0idPnjS3qyjm
qNFQY45mx8Schg0bhjo7X3zxhenzypUrQz0llDXCPDEnpGylVhYsWGAaVd4J
KfnqlLBiTkinhELo6tWrTaM2D3sNSLNjHk764IMPOt/qsueU2LFjh1pMmzbt
5MmTfb47aNAgxZOr//lAzAEAANfTnDlzSpQocfU1TJjnihefi4IeeughFU4q
vewfeelP5aW5ukmJI6R7lnfu3Fm0aFFt+Nhjj4V0OZaK4XHjxpkDmTFjRki5
7Ndffy1fvnyY55aTkG4bUVSxrh/77LPPQirC9+zZ8/jjj2tDHa+TFaEtp06d
Wrp0qWl0yJAhIX3W8Ntvvz377LNhnkirRkN6EJIykWYnb968YZ71FpzfcnXZ
8yHdRx99ZPqsxGH/nE0falRxWxvqbPzll1+cb6ioMmXKFNOoQlZIuUwnvJoL
8zwvRgnC+YY62831Y/Lhhx+GFJH27t2rgdU7TgnL+VaXPct9m2yVPXv2mTNn
+nx3+PDhJpxeJeUvnatctAYAAK4P5Yjq1atffQ0T5kkWmzZt8t5548aNM2fO
rGo8pDtWLnseWWiCg6KH89tkLl269O2335oVripVqqSdOG9RqcG6+2PEiBGq
551vu2zZMnN/U8mSJRcvXux8wwMHDowZM8Y02rdv35By2cqVK81HSPny5VMq
dH5vjurMyZMnm0bffPPNkCLSunXrnnzySW2YNWtWNepkgWWLMpFm55577gnz
3Ooe0h0rykQRERGmzx9//HFIt8noNDDJ98EHH1QHnG+oc2DYsGGm0cGDB4cU
1ZcvX24WiFDTX3/9tfMNDx06NHbsWNPo22+/HVIuW7Nmjd7LWbJkadq0qfOt
Lnue16NorxaVBxWyfL6r96BZgfwqpUqVqmbNmixBAAAArg8Fk44dO159DRPm
qZl9/kTftWvXPHnyKLCEtMLVZc9t42YB4bfeesv55yMq9VUi5sqVSxuWKFEi
pBWuNm/erN6aA3nttdf0v8631dGZtZ0LFCgwatQo5xsqYqiUNY22bdtWR+18
2+nTp5tbTnLkyPHBBx84jzkq199//33TaIsWLZTRnDc6Z84csy5fhgwZ1GhI
13FdvHhRs2NuBFPPx48f73zbDRs2WGepTrNt27Y531YNmcsyixUrplDpfMOt
W7d2797dNKrWfVYRtDdlyhTzIanO/+HDhzvfULlGgdc0+uKLL/qs6WFv5syZ
FSpUyJ07d0hLWF/2CnSPPvro0qVLfb6rbNi4ceOr//lw++236+0c0r1gAAAA
V+zPP/+cP39+8uTJr76MUUnmU8OMHDnyvvvuy5s37xtvvBFSr7Zv325Cx1NP
PeW80ouKinrppZfM7dI5c+YMaVndBQsWmM8pwjzFXkgfyrz66qtmneSsWbO2
bNnS+YYqKevVq2cafeihh/yvF7LRo0cPcwFY+vTpn332Wee3yaxbt65Jkyam
UVXFEyZMcN5onz59TKBLkyaNGg3pesJz585pdszKEirFu3Tp4nzbWbNmPfbY
Y6bPTzzxhH8pbqN9+/aaF2149913qwPON1yyZEnt2rVNo4888ojeJs631dlr
4rbOxpA+W9HZ3rBhQ9No5cqVv/zyS+fb9u7dW0G7ePHiSqDOt7rs+VuHWVmi
TZs2/mnu2LFjI0aMuPofEVmyZFm/fn1Iq/MBAABcMZXHe/bsUZFz0003XXEB
c9ttt9WqVUtFr0+xrbSiojR16tQVK1YM6Tb5EydOLFq06MYbb1RVPHbsWCe3
yatpdUBxQwdyww033HLLLffee6/D2+RVgQ8cONA8uVKNpkuXbujQoU5qeO38
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
tTQr2m+euFWiimBxQelY6ynnbGz2Y8KLo6YHXXOv/d1252BOyZn01thWGePE
PVLbTliZ41cuvye980Q9cb1UoetnqPMapBzJyZQ5AYZTskava05o3/fF5o0G
LXdHhu7N0WSNSrAuoBo8qmzkCr+JrJvuq7k+vN3lxzYueijNrbL1OSph+Bpg
Ug03h4d0tWta7jP02eifC45+jzGcnZpqRBSGEnfNcmYbnRGddUpan4sgyr3v
jHzySeLJFfSaVaaKuBTToz4egrmlfHOpAkPm3Dt7Rk60v6cQ58NsIUame2Jx
NbzBgOczGw3xRHGOrtfyR7mepgvygrnqKRSjm/QqDJw9I9rIWK2zxliAy0qg
iuk+dPWCdcnw7Nuomoqlo8uqSZ1nCvTRIp/KqujKq4kU992huChrYfObb4El
c4dfdrZRq0QXUB2lzEl4+Y65hkfKY13f6Bq9f5yYDWw3W7KeXD6rW3o3/Zpl
U382XwWsrcJz+o0Ul08MX7lD67LKlzmSB8CSvg9pYiQLgk4UD+Ka85V5N7Vn
HXnlzRzv7tsv5shx3QiSdoSY1V3+UcUPij0vzEuY6m5SoJtaRuHug42h5f58
59sdm8pVQPS53O2HJZ8r5i7J7bLDE/qk3pdwEcpIIei5Za3sGkkX6CeUM6hQ
7KTgakg8POhQq6PqmUyjeq7ruDnlem5n6VdbZxyud677em0UHuw6nlDmuJ+l
kY1VbY6SaE/zypJgmGl1cEe5cW+cOcJzg1rSd+bg96yT6n6zr5qJK5dzMlS+
A5JMmRN8OCVl9Pq5xTWVJWyUctOKpMgcETPItLDx1IGtfC1eSu3nue6bwZv/
CnXgSTXcHB7S1eZ5Ib1Pq5/X3obY5gdH/d1VwkjrnRZVPSwhn3yScnKFuGb5
vfonr2E4t4ScS1UYB6f1XOR48EzW9jAjUz6xKE98K4ozF8WEAz2r6ocn9Doz
yENrqk2yzGjWdWPcPHMTPgESpGJG70iuC2YFXPGq8t0cw2neih3ZkdfUfRGU
T2WVfuXVivWENzsLutV3xBW6IcmzE/EX2zNM7wW7gKpOuhCXb+VsoB663o4L
WFspYnjITl4r1nWt61XRuznOJwBl+uuE4rOaE1+qk6/mxLGep0p9bM7auc1q
dVDtIKx+XU6++2rwjlBdHVQlhI1D5ChmEnPudZ7Xhyc8U2eSc/pKVA3PdGdY
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
lJf/B54C1kQ=
    "], {{0, 706}, {1101, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{1101, 706},
  PlotRange->{{0, 1101}, {0, 706}}]], "Text",
 CellChangeTimes->{
  3.8004665823383117`*^9},ExpressionUUID->"c021532f-af46-45b2-bd25-\
734b267884d1"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 762},
WindowMargins->{{0, Automatic}, {0, Automatic}},
Magnification->1.25,
FrontEndVersion->"12.2 for Linux x86 (64-bit) (December 12, 2020)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "PastelColor.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"0c84d526-c954-4683-8044-5775c4e137e3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 212, 4, 86, "Title",ExpressionUUID->"f1446c87-0f65-49c8-9ee0-60fc7aca1e39"],
Cell[CellGroupData[{
Cell[804, 30, 208, 4, 78, "Section",ExpressionUUID->"9c109a4e-7fef-4bc7-8d4f-914c2bab6e52"],
Cell[1015, 36, 49831, 822, 465, "Text",ExpressionUUID->"fdf18404-c5eb-45e3-9b9b-e3876f509a07"],
Cell[50849, 860, 199, 3, 51, "Input",ExpressionUUID->"4795378c-c283-4576-a89b-909817144e7a"],
Cell[51051, 865, 1391, 25, 291, "Text",ExpressionUUID->"7a483ff8-b5a9-4625-b938-356e98b0a7e9"],
Cell[CellGroupData[{
Cell[52467, 894, 325, 7, 49, "Subsection",ExpressionUUID->"a057ff0a-b564-4958-b5bf-3f2f1d7b4b7e"],
Cell[52795, 903, 388, 8, 69, "Text",ExpressionUUID->"43d087dd-58e3-4782-96d6-5ee7f3bc62ac"],
Cell[53186, 913, 1415, 31, 156, "Input",ExpressionUUID->"acefaeba-602e-430a-93f8-d2f5c7422bef"],
Cell[54604, 946, 433, 8, 69, "Text",ExpressionUUID->"a2890c51-fab4-4f45-9785-e329e3cbc82c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55074, 959, 195, 3, 49, "Subsection",ExpressionUUID->"996547ec-7268-4a38-844a-bdcc0a2e36cf"],
Cell[55272, 964, 4912, 150, 1181, "Input",ExpressionUUID->"b5f3452e-9b9f-48d6-a2f3-583afcefa81f"]
}, Closed]],
Cell[CellGroupData[{
Cell[60221, 1119, 211, 4, 38, "Subsection",ExpressionUUID->"5c93ab8c-0931-4c38-b0c3-67107a047038"],
Cell[60435, 1125, 454, 9, 69, "Text",ExpressionUUID->"e5dbc282-8136-4d7e-b2d7-bf3903a12f9a"],
Cell[CellGroupData[{
Cell[60914, 1138, 1036, 25, 78, "Input",ExpressionUUID->"97921327-a4be-4e35-95bd-c972117436b4"],
Cell[61953, 1165, 345, 7, 67, "Output",ExpressionUUID->"f59424f6-7ff5-4dc2-a23e-c59febf948f7"],
Cell[62301, 1174, 559, 15, 67, "Output",ExpressionUUID->"960413f6-91e1-4c34-b449-af7b62b4443a"]
}, Open  ]],
Cell[62875, 1192, 924, 15, 152, "Text",ExpressionUUID->"b1f21724-0061-4e8c-8333-b9a61b57d14b"],
Cell[CellGroupData[{
Cell[63824, 1211, 712, 18, 130, "Input",ExpressionUUID->"7ce35b0f-b006-40dd-8559-67838a7da52f"],
Cell[64539, 1231, 218, 4, 51, "Output",ExpressionUUID->"4d5550e4-2627-4999-8c1f-cee6ab4e5ff1"],
Cell[64760, 1237, 229, 4, 51, "Output",ExpressionUUID->"b05e76e3-cd19-4bdc-8d64-ea6743bd160c"],
Cell[64992, 1243, 237, 5, 51, "Output",ExpressionUUID->"2445f5af-a6de-440b-a500-18c739ac1fa0"],
Cell[65232, 1250, 236, 5, 51, "Output",ExpressionUUID->"77c3d00b-5d86-42e1-b699-63f77ef1102b"]
}, Open  ]],
Cell[65483, 1258, 387, 8, 69, "Text",ExpressionUUID->"ff733693-d196-4f96-94d6-1c2e1a22d755"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65907, 1271, 195, 3, 49, "Subsection",ExpressionUUID->"5f5bec6e-8328-43fa-b47a-75873964f296"],
Cell[CellGroupData[{
Cell[66127, 1278, 4399, 124, 362, "Input",ExpressionUUID->"cacf1201-5b33-4898-b2b1-f20a1951774b"],
Cell[CellGroupData[{
Cell[70551, 1406, 274, 5, 29, "Print",ExpressionUUID->"4b64c0f4-66d0-4423-833c-c1a93c70e7e0"],
Cell[70828, 1413, 272, 5, 29, "Print",ExpressionUUID->"9d151964-5acb-47d5-bdee-441a54c3b692"],
Cell[71103, 1420, 273, 5, 29, "Print",ExpressionUUID->"01c7722a-43c8-4534-9ea3-a44d744618e4"],
Cell[71379, 1427, 275, 5, 29, "Print",ExpressionUUID->"17e1dfc0-73c2-4c3d-aa79-a1423c55756d"],
Cell[71657, 1434, 273, 5, 29, "Print",ExpressionUUID->"bd5e1300-7c57-4fff-a51f-73e529605b07"],
Cell[71933, 1441, 273, 5, 29, "Print",ExpressionUUID->"a68f56ec-4b4b-461c-ba29-8d6254d463a8"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[72267, 1453, 398, 8, 38, "Subsection",ExpressionUUID->"786745b4-7dd5-4265-bd43-eb0afb0e7d36"],
Cell[72668, 1463, 250, 6, 41, "Text",ExpressionUUID->"1273cf32-6d9b-4c0a-9da4-a1abd4a400dd"],
Cell[CellGroupData[{
Cell[72943, 1473, 4603, 119, 259, "Input",ExpressionUUID->"50274f35-5017-4a24-af05-4bf000957a7e"],
Cell[77549, 1594, 1320, 38, 190, "Output",ExpressionUUID->"1e39a6ea-b584-4a4b-bca9-910a307a4ae2"],
Cell[78872, 1634, 2326, 74, 190, "Output",ExpressionUUID->"fea48e1f-2433-4a29-b5bf-793e346803eb"],
Cell[81201, 1710, 1576, 45, 103, "Output",ExpressionUUID->"f74c4342-7007-4d9e-9520-5f9ea482218e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[82826, 1761, 154, 3, 49, "Subsection",ExpressionUUID->"14c5e636-bc1d-40ed-9af2-7ed8e500ffe3"],
Cell[CellGroupData[{
Cell[83005, 1768, 6197, 166, 491, "Input",ExpressionUUID->"72c51e86-3515-4add-afae-61c962139643"],
Cell[CellGroupData[{
Cell[89227, 1938, 268, 5, 29, "Print",ExpressionUUID->"9af6a780-c2a4-4793-9102-314a2124b9b1"],
Cell[89498, 1945, 269, 5, 29, "Print",ExpressionUUID->"589bfa46-79c6-49ea-ba81-b2d04a84f537"]
}, Open  ]]
}, Open  ]],
Cell[89794, 1954, 1757, 49, 158, "Text",ExpressionUUID->"b6c5d7f4-a5f2-42d1-b92c-3dda8ce398eb"]
}, Closed]],
Cell[CellGroupData[{
Cell[91588, 2008, 345, 7, 38, "Subsection",ExpressionUUID->"fac50bcc-a73a-4c9c-9344-b9f765c1cb47"],
Cell[91936, 2017, 701, 13, 186, "Text",ExpressionUUID->"418a95ec-7617-43d2-87ab-678c2da5459b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92674, 2035, 160, 3, 49, "Subsection",ExpressionUUID->"3c362f6f-4116-458f-a9c0-81af86c9901f"],
Cell[92837, 2040, 326, 9, 124, "Text",ExpressionUUID->"f0d4c280-ef20-4f22-8e3b-2355e9487e45"]
}, Closed]],
Cell[CellGroupData[{
Cell[93200, 2054, 251, 4, 38, "Subsection",ExpressionUUID->"e409f6e5-4830-464b-84b6-e0f2bdad67c8"],
Cell[93454, 2060, 638, 12, 124, "Text",ExpressionUUID->"9ba79798-d06f-4760-b60a-892dae0fc485"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94129, 2077, 160, 3, 49, "Subsection",ExpressionUUID->"b473071f-3c14-47f1-8339-0588f63fac75"],
Cell[94292, 2082, 581, 11, 69, "Text",ExpressionUUID->"7b7f2967-d50c-4fc1-83ea-3d98b4d0c16d"]
}, Closed]],
Cell[CellGroupData[{
Cell[94910, 2098, 227, 4, 38, "Subsection",ExpressionUUID->"994d0a53-e777-4fa2-a240-e510efe607c7"],
Cell[95140, 2104, 631, 12, 124, "Text",ExpressionUUID->"1df025e2-7e19-44e5-9f75-f0a09ca97e1f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95808, 2121, 160, 3, 49, "Subsection",ExpressionUUID->"24955c6d-5fe1-4dcf-9b5a-7d398f0280fe"],
Cell[95971, 2126, 481, 9, 69, "Text",ExpressionUUID->"920de2dc-df0b-4636-823f-ae38079523df"]
}, Closed]],
Cell[CellGroupData[{
Cell[96489, 2140, 225, 4, 38, "Subsection",ExpressionUUID->"7f8a104e-8707-4953-a78b-fc4547dcfa24"],
Cell[96717, 2146, 585, 13, 152, "Text",ExpressionUUID->"12f4d617-97e4-4fb6-9ca9-0fce1b0897c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97339, 2164, 160, 3, 49, "Subsection",ExpressionUUID->"50339b6a-9033-45a8-80b1-72c664cc87dc"],
Cell[97502, 2169, 254, 4, 41, "Text",ExpressionUUID->"58b245c4-ad14-4016-85b3-09e2e6cfba8b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97793, 2178, 243, 5, 49, "Subsection",ExpressionUUID->"bd4cce6a-72ec-4b20-8487-887cfe4eeae9"],
Cell[98039, 2185, 624, 12, 124, "Text",ExpressionUUID->"cab3021d-b755-4b23-aa40-6d1623fc6ec2"],
Cell[98666, 2199, 216, 4, 51, "Input",ExpressionUUID->"672e3235-1107-4540-997c-1fe47538a1b1"],
Cell[CellGroupData[{
Cell[98907, 2207, 3990, 104, 310, "Input",ExpressionUUID->"11272814-6130-415e-96f2-c3747498d1db"],
Cell[102900, 2313, 3504, 99, 137, "Output",ExpressionUUID->"e6e33fa9-294f-4e3f-a23c-3004eea79714"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[106453, 2418, 165, 3, 49, "Subsection",ExpressionUUID->"a348ba43-5796-48cc-9110-c97f49b66373"],
Cell[106621, 2423, 3591, 92, 130, "Input",ExpressionUUID->"4a72f73f-6b26-4e40-8caf-a568befebb94"],
Cell[110215, 2517, 309, 6, 41, "Text",ExpressionUUID->"c9331024-0897-45d0-aa45-be0640a61f6b"],
Cell[CellGroupData[{
Cell[110549, 2527, 1284, 38, 181, "Input",ExpressionUUID->"d6995c7d-6362-4d57-aead-5019bc130317"],
Cell[111836, 2567, 319, 10, 78, "Output",ExpressionUUID->"590ed2a0-299d-4ffa-b734-e0529792230f"],
Cell[112158, 2579, 338, 11, 78, "Output",ExpressionUUID->"d5fd2f0f-a972-42d2-aba1-bba068cde4d0"],
Cell[112499, 2592, 319, 10, 78, "Output",ExpressionUUID->"13650e48-e4d3-4d9d-abe3-637ef37f726c"],
Cell[112821, 2604, 338, 11, 78, "Output",ExpressionUUID->"1b8835f5-6f81-452a-ad3d-709089306f9c"],
Cell[113162, 2617, 321, 10, 78, "Output",ExpressionUUID->"8a94ae28-dcfa-4dcf-af5f-8b1e7c7d7587"],
Cell[113486, 2629, 340, 11, 78, "Output",ExpressionUUID->"7d33f002-c349-4a88-99a3-a74b45912af3"]
}, Open  ]],
Cell[113841, 2643, 435, 8, 69, "Text",ExpressionUUID->"9793e3e2-074e-4580-991f-916cee2076e1"],
Cell[CellGroupData[{
Cell[114301, 2655, 7324, 231, 336, "Input",ExpressionUUID->"9b20c538-77fc-47e3-8770-fdf3d2fe2638"],
Cell[121628, 2888, 2297, 49, 616, "Output",ExpressionUUID->"e4434d38-35b4-41e8-8abe-edc94f1e1315"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[123974, 2943, 373, 6, 49, "Subsection",ExpressionUUID->"95cff3f4-ec74-480f-92ac-1705a0dd3541"],
Cell[CellGroupData[{
Cell[124372, 2953, 11842, 356, 645, "Input",ExpressionUUID->"3947d01c-ba08-4d27-8870-e26324de7697"],
Cell[136217, 3311, 354, 12, 78, "Output",ExpressionUUID->"9c46504d-53f6-421d-80f2-6853fe8d94fc"],
Cell[136574, 3325, 175, 4, 51, "Output",ExpressionUUID->"fb7569d2-3cb5-424c-81a6-487cfe194248"],
Cell[136752, 3331, 335, 11, 78, "Output",ExpressionUUID->"867f7263-3dbb-44e7-a1ed-98bb8f77d006"],
Cell[137090, 3344, 354, 12, 78, "Output",ExpressionUUID->"0c43308a-ac3f-4e15-8a7d-016f81616636"],
Cell[137447, 3358, 175, 4, 51, "Output",ExpressionUUID->"d0b81cb9-cec6-4f81-8661-78ffec6f5c3f"],
Cell[137625, 3364, 335, 11, 78, "Output",ExpressionUUID->"5e37ac95-7f76-4049-94c0-c40a5f5ac5fb"],
Cell[137963, 3377, 2297, 49, 616, "Output",ExpressionUUID->"68956961-3b98-465e-a6cf-82f71510a2b4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[140309, 3432, 420, 6, 49, "Subsection",ExpressionUUID->"217855a8-32ee-4f57-b314-0bb93ff14ba1"],
Cell[CellGroupData[{
Cell[140754, 3442, 11896, 357, 645, "Input",ExpressionUUID->"aa64a0a1-4304-4f51-b36f-cdc3828d559e"],
Cell[152653, 3801, 309, 10, 78, "Output",ExpressionUUID->"d0c4bf0d-e72a-47a9-9108-8dd195fb0e5f"],
Cell[152965, 3813, 174, 4, 51, "Output",ExpressionUUID->"670fd404-7f2c-4fa9-9dd5-4e660fbca570"],
Cell[153142, 3819, 330, 11, 78, "Output",ExpressionUUID->"d7662409-137e-41c4-ae09-841fb9176cef"],
Cell[153475, 3832, 328, 11, 78, "Output",ExpressionUUID->"517e439c-8ad6-433c-ba4c-ccb6b5ea8498"],
Cell[153806, 3845, 175, 4, 51, "Output",ExpressionUUID->"69dcf421-6026-44fb-ad09-2629ed2179e2"],
Cell[153984, 3851, 309, 10, 78, "Output",ExpressionUUID->"6a61374c-5a35-4d0a-baf6-5dc9b738d339"],
Cell[154296, 3863, 2296, 49, 616, "Output",ExpressionUUID->"b0d5dd89-2462-45f0-a4a0-e4e76d5d49e2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[156641, 3918, 462, 7, 49, "Subsection",ExpressionUUID->"a0deec4c-0e01-4a85-9495-fa54dde3fd0a"],
Cell[CellGroupData[{
Cell[157128, 3929, 12092, 359, 671, "Input",ExpressionUUID->"580d3993-a18d-4999-97b9-5b9314fa2f72"],
Cell[169223, 4290, 227, 6, 67, "Output",ExpressionUUID->"80c9f41e-39f6-4a3a-bfc3-b6e75429f495"],
Cell[169453, 4298, 225, 6, 67, "Output",ExpressionUUID->"7c51d718-f546-4f79-a6cf-8df7c166536f"],
Cell[169681, 4306, 225, 6, 67, "Output",ExpressionUUID->"e2350bb0-7c6d-4b81-9dbc-fe0470665277"],
Cell[169909, 4314, 227, 6, 67, "Output",ExpressionUUID->"e8b89033-acd8-4a42-812f-e5ebf09d15a4"],
Cell[170139, 4322, 225, 6, 67, "Output",ExpressionUUID->"5438fc0f-dd3b-4fbe-b256-dda3cf8a5fae"],
Cell[170367, 4330, 225, 6, 67, "Output",ExpressionUUID->"c073ac53-8b80-4950-88ce-6a902c09c941"],
Cell[170595, 4338, 2297, 49, 642, "Output",ExpressionUUID->"b28b3387-0753-4884-ad47-037e1ca17177"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[172941, 4393, 464, 7, 49, "Subsection",ExpressionUUID->"c5e57e0e-d2a3-4bed-b565-4a558c040a53"],
Cell[CellGroupData[{
Cell[173430, 4404, 11942, 356, 645, "Input",ExpressionUUID->"b3ea7b8d-cbc2-4993-8b25-1ed768984e2f"],
Cell[185375, 4762, 763, 26, 78, "Output",ExpressionUUID->"cd870886-92d0-4c75-95d2-4ae83432c02b"],
Cell[186141, 4790, 741, 26, 78, "Output",ExpressionUUID->"a4169b52-fd8a-46db-a183-2e2f52984389"],
Cell[186885, 4818, 764, 27, 78, "Output",ExpressionUUID->"b07f5649-1fc7-4a33-8904-4e8d71810c3b"],
Cell[187652, 4847, 806, 28, 78, "Output",ExpressionUUID->"cb44ae9c-59a9-47d4-9156-fe736c7bd84d"],
Cell[188461, 4877, 764, 27, 78, "Output",ExpressionUUID->"6ac8d969-8fe3-4216-bfa6-86afdc0e9766"],
Cell[189228, 4906, 741, 26, 78, "Output",ExpressionUUID->"9a93f0c1-7f2f-4484-9386-88dea0a39061"],
Cell[189972, 4934, 2288, 49, 616, "Output",ExpressionUUID->"6d20a6ec-d0a5-409d-bee5-633a451ed6fb"]
}, Open  ]],
Cell[192275, 4986, 211, 4, 41, "Text",ExpressionUUID->"779d57bf-6ce1-4375-8235-869e03bc3ee6"],
Cell[CellGroupData[{
Cell[192511, 4994, 348, 9, 51, "Input",ExpressionUUID->"eb652c48-1732-4841-a019-1f989d90701c"],
Cell[192862, 5005, 39358, 665, 319, "Output",ExpressionUUID->"6bb60325-836d-47fd-ae8d-c1fd97e4f63a"]
}, Open  ]],
Cell[232235, 5673, 357, 7, 69, "Text",ExpressionUUID->"a85bfa7d-9346-477f-a841-9917198ca319"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[232641, 5686, 386, 9, 78, "Section",ExpressionUUID->"e9e5b1ca-5fca-4540-8baa-3d7c2ace939a"],
Cell[233030, 5697, 97389, 1602, 768, "Text",ExpressionUUID->"c021532f-af46-45b2-bd25-734b267884d1"]
}, Open  ]]
}, Open  ]]
}
]
*)

