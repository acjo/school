"24b1615c88190cee07bebdd7510ed3a23ead56a3"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#7=[nil nil ((5054 . 5057) (5127 . 5130) (t 24175 52289 195891 270000)) nil (24175 52322 383197 390000) 0 nil]) ((5209 . 5210) (5202 . 5209) (#("+" 0 1 (fontified t)) . -5202) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (#(" " 0 1 (fontified t)) . -5203) (undo-tree-id555 . -1) (undo-tree-id556 . -1) 5204 (5196 . 5204) (#("a" 0 1 (fontified t)) . -5196) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (#("r" 0 1 (fontified t)) . -5197) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (#("e" 0 1 (fontified t)) . -5198) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (#("a" 0 1 (fontified t)) . -5199) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (#(" " 0 1 (fontified t)) . -5200) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (#("=" 0 1 (fontified t)) . -5201) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (#(" " 0 1 (fontified t)) . -5202) (undo-tree-id653 . -1) (undo-tree-id654 . -1) 5203 (5196 . 5203) (5192 . 5196) 5155) nil (24175 52289 184619 274000) 0 nil]) ((#("
" 0 1 (fontified t)) . 5147) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1)) nil (24175 52289 184636 770000) 0 nil]) ((#("
" 0 1 (fontified t)) . 5153) (undo-tree-id660 . -1) (undo-tree-id661 . 1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (t 24175 52254 997218 876000)) nil (24175 52289 184643 378000) 0 nil]) ((5193 . 5194) (5191 . 5193) (5190 . 5191) (5189 . 5190) (5188 . 5189) (5187 . 5188) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . -5167) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . 1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) 5168 (5166 . 5167) (5165 . 5167) (#("(" 0 1 (fontified nil)) . -5165) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (5165 . 5166) (5180 . 5185) (#("r" 0 1 (fontified t)) . -5180) (undo-tree-id517 . -1) (undo-tree-id518 . -1) 5181 (5179 . 5181) (5178 . 5179) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-4-face))) . -5178) (undo-tree-id519 . 1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . 1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-4-face))) . 5179) (undo-tree-id539 . 1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . 1) (undo-tree-id543 . 1) (undo-tree-id544 . -1) (5178 . 5180) (#("(" 0 1 (fontified nil)) . -5178) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (5178 . 5179) (5168 . 5178) (5167 . 5168) (5165 . 5167) (5157 . 5165) (5153 . 5157) (#("			" 0 3 (fontified t)) . 5153) (undo-tree-id547 . -3) (undo-tree-id548 . -3) 5156 (5152 . 5156) (t 24175 52205 410127 43000)) nil (24175 52254 987797 47000) 0 nil]) ((5139 . 5140) (5137 . 5138) (5133 . 5136) (5132 . 5134) (#("(" 0 1 (fontified nil)) . -5132) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (5132 . 5133) (5125 . 5132) (5124 . 5125) (5122 . 5124) (5117 . 5122) (#("f" 0 1 (fontified t)) . -5117) (undo-tree-id339 . -1) (5116 . 5118) (5115 . 5117) (#("(" 0 1 (fontified nil)) . -5115) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (5115 . 5116) (5111 . 5115) (#("_" 0 1 (fontified t)) . -5111) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (#("i" 0 1 (fontified t)) . -5112) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (#("d" 0 1 (fontified t)) . -5113) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) 5114 (#("Func" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil)) . 5114) (undo-tree-id384 . -4) (undo-tree-id385 . -4) (undo-tree-id386 . -1) (undo-tree-id387 . -2) (undo-tree-id388 . -1) (undo-tree-id389 . -3) (undo-tree-id390 . -2) (undo-tree-id391 . -4) (undo-tree-id392 . -3) (undo-tree-id393 . -4) (5107 . 5114) 5111 (5106 . 5111) (5105 . 5106) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-6-face))) . -5105) (undo-tree-id394 . 1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . 1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-6-face))) . 5106) (undo-tree-id414 . 1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . 1) (undo-tree-id418 . 1) (undo-tree-id419 . -1) (5105 . 5107) (#("(" 0 1 (fontified nil)) . -5105) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (5105 . 5106) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-6-face))) . -5105) (undo-tree-id422 . 1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . 1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-6-face))) . 5106) (undo-tree-id441 . 1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . 1) (undo-tree-id445 . 1) (undo-tree-id446 . -1) (#(" " 0 1 (fontified t)) . -5106) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . 1) (undo-tree-id450 . -1) 5107 (5106 . 5107) (5105 . 5107) (#("(" 0 1 (fontified nil)) . -5105) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (5105 . 5106) (5104 . 5105) (5098 . 5104) (#(" " 0 1 (fontified t)) . -5098) (undo-tree-id453 . -1) 5099 (5094 . 5099) (5089 . 5094) (#("a" 0 1 (fontified t)) . -5089) (undo-tree-id454 . -1) 5090 (5089 . 5090) (#("					" 0 5 (fontified nil face #1=(rainbow-delimiters-depth-5-face))) . 5089) (5089 . 5094) (#("				" 0 4 (fontified nil face #1#)) . -5089) (5088 . 5098) (5083 . 5087) (#("					" 0 5 (fontified nil)) . 5083) (undo-tree-id455 . -5) (undo-tree-id456 . -5) (5088 . 5090) (#("{" 0 1 (fontified nil)) . -5088) (5088 . 5089) (5082 . 5088) (#(" x" 0 2 (fontified nil)) . -5082) (5082 . 5084) (#("else" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face)) . 5082) (undo-tree-id457 . -4) (5078 . 5082) 5082 (5079 . 5082) (#("k" 0 1 (fontified t)) . -5079) (undo-tree-id458 . -1) 5080 (5078 . 5080) (5073 . 5078) (5066 . 5067) (5064 . 5065) (5060 . 5061) (5060 . 5062) (5059 . 5061) (#("(" 0 1 (fontified nil)) . -5059) (5059 . 5060) (5055 . 5059) (5052 . 5055) (5051 . 5052) (5044 . 5051) (#("f" 0 1 (fontified t)) . -5044) (undo-tree-id459 . -1) (5043 . 5045) (5042 . 5044) (#("(" 0 1 (fontified nil)) . -5042) (5042 . 5043) (#("Functi" 0 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil)) . 5042) (undo-tree-id460 . -6) (undo-tree-id461 . -6) (5034 . 5042) 5040 (5038 . 5040) (#("c" 0 1 (fontified t)) . -5038) (undo-tree-id462 . -1) (#("t" 0 1 (fontified t)) . -5039) (undo-tree-id463 . -1) (#("i" 0 1 (fontified t)) . -5040) (undo-tree-id464 . -1) (#("o" 0 1 (fontified t)) . -5041) (undo-tree-id465 . -1) (#("n" 0 1 (fontified t)) . -5042) (undo-tree-id466 . -1) 5043 (5038 . 5043) (#("_" 0 1 (fontified t)) . -5038) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (#("i" 0 1 (fontified t)) . -5039) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (#("d" 0 1 (fontified t)) . -5040) (undo-tree-id471 . -1) (undo-tree-id472 . -1) 5041 (#("Fun" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 5041) (undo-tree-id473 . -3) (undo-tree-id474 . -3) (5034 . 5041) 5037 (5029 . 5037) (#(" " 0 1 (fontified t)) . -5029) (undo-tree-id475 . -1) 5030 (5025 . 5030) (5020 . 5025)) nil (24175 52205 405226 298000) 0 nil]) ((#("					" 0 5 (fontified nil face #2=(rainbow-delimiters-depth-5-face))) . 5020) (undo-tree-id476 . -5) (undo-tree-id477 . -5) (undo-tree-id478 . -5) (undo-tree-id479 . -5) (5020 . 5025) (#("				" 0 4 (fontified nil face #2#)) . -5020) (5019 . 5029) (5014 . 5018) (#("					" 0 5 (fontified nil)) . 5014) (undo-tree-id480 . -5) (undo-tree-id481 . -5) (undo-tree-id482 . -5) (undo-tree-id483 . -5) (undo-tree-id484 . -5) (undo-tree-id485 . -5) (undo-tree-id486 . -5) (undo-tree-id487 . -5) (5019 . 5021) (#("{" 0 1 (fontified nil)) . -5019) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (5019 . 5020) (5013 . 5019) (4995 . 5012) (4987 . 4995) (#("3" 0 1 (fontified t face highlight-numbers-number)) . -4987) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) 4988 (4986 . 4988) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -4986) (undo-tree-id493 . -1) (#("3" 0 1 (fontified t face highlight-numbers-number)) . -4987) (undo-tree-id494 . -1) 4988 (4977 . 4988) (4970 . 4977) (4969 . 4971) (#("(" 0 1 (fontified nil)) . -4969) (4969 . 4970) (4967 . 4969) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -4967) (undo-tree-id495 . -1) (4966 . 4968) (4961 . 4966) 4960) nil (24175 52205 405285 950000) 0 nil]) ((#("
" 0 1 (fontified t)) . 4963) (undo-tree-id496 . -1) (undo-tree-id497 . 1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1)) nil (24175 52205 405315 310000) 0 nil]) ((#("				" 0 4 (fontified t)) . -4963) (undo-tree-id502 . -4) (undo-tree-id503 . -4) 4967 (4962 . 4967) (t 24175 52071 956478 944000) 4962) nil (24175 52205 405321 200000) 0 nil]) ((#("			" 0 3 (fontified t c-in-sws t c-is-sws t)) . -4904) (undo-tree-id335 . -3) (undo-tree-id336 . -3) 4907 (4903 . 4907) (t 24175 52044 615037 876000) 4843) nil (24175 52071 949239 296000) 0 nil]) ((3314 . 3315)) nil (24175 52044 604823 328000) 0 nil]) ((#("=" 0 1 (fontified t)) . -3314) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (#(" " 0 1 (fontified t)) . -3315) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) 3316) nil (24175 52044 604866 602000) 0 nil]) ((3317 . 3318) (3300 . 3317) (3298 . 3300) (t 24175 51529 156701 768000)) nil (24175 52044 604876 944000) 0 nil]) ((#("				" 0 4 (fontified nil face #3=(rainbow-delimiters-depth-4-face))) . 4942) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) (4942 . 4946) (#("			" 0 3 (fontified nil face #3#)) . -4942) (4941 . 4949)) nil (24175 51529 147356 431000) 0 nil]) ((4937 . 4940) (#("				" 0 4 (fontified nil)) . 4937) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (undo-tree-id191 . -4) (undo-tree-id192 . -4) (undo-tree-id193 . -4) (4941 . 4943) (#("{" 0 1 (fontified nil)) . -4941) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (4941 . 4942)) nil (24175 51529 147370 875000) 0 nil]) ((4936 . 4941)) nil (24175 51529 147373 463000) 0 nil]) ((#(" " 0 1 (fontified t)) . -4935) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) 4936) nil (24175 51529 147377 83000) 0 nil]) ((4931 . 4936)) nil (24175 51529 147378 875000) 0 nil]) ((4930 . 4931)) nil (24175 51529 147379 868000) 0 nil]) ((4929 . 4930)) nil (24175 51529 147380 842000) 0 nil]) ((4923 . 4929)) nil (24175 51529 147382 584000) 0 nil]) ((#("o" 0 1 (fontified t)) . -4923) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) 4924) nil (24175 51529 147387 989000) 0 nil]) ((4920 . 4924)) nil (24175 51529 147389 483000) 0 nil]) ((4919 . 4920)) nil (24175 51529 147390 392000) 0 nil]) ((4918 . 4919)) nil (24175 51529 147391 277000) 0 nil]) ((4915 . 4918)) nil (24175 51529 147392 305000) 0 nil]) ((4914 . 4915)) nil (24175 51529 147393 203000) 0 nil]) ((4911 . 4914)) nil (24175 51529 147394 563000) 0 nil]) ((4900 . 4911)) nil (24175 51529 147395 518000) 0 nil]) ((#(" " 0 1 (fontified t)) . -4900) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (#("0" 0 1 (fontified t face highlight-numbers-number)) . -4901) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (#(" " 0 1 (fontified t)) . -4902) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) 4903) nil (24175 51529 147413 533000) 0 nil]) ((4898 . 4903)) nil (24175 51529 147417 523000) 0 nil]) ((4892 . 4898)) nil (24175 51529 147419 58000) 0 nil]) ((#(" " 0 1 (fontified t)) . -4892) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . 1) (undo-tree-id242 . -1) (#("a" 0 1 (fontified t)) . -4893) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (#("u" 0 1 (fontified t)) . -4894) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (#("t" 0 1 (fontified t)) . -4895) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (#("o" 0 1 (fontified t face font-lock-keyword-face c-type c-decl-id-start)) . -4896) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) 4897) nil (24175 51529 147462 245000) 0 nil]) ((4892 . 4897)) nil (24175 51529 147467 235000) 0 nil]) ((4891 . 4893) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -4891) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (4891 . 4892)) nil (24175 51529 147470 254000) 0 nil]) ((4888 . 4891)) nil (24175 51529 147471 737000) 0 nil]) ((#("f" 0 1 (fontified t c-is-sws t)) . -4888) (undo-tree-id281 . -1) (4884 . 4889) 4815) nil (24175 51529 147474 176000) 0 nil]) ((#("
" 0 1 (fontified t c-is-sws t c-in-sws t)) . 4885) (undo-tree-id282 . -1) (undo-tree-id283 . 1)) nil (24175 51529 147476 934000) 0 nil]) ((#("			}
" 0 1 (fontified t c-is-sws t c-in-sws t) 1 3 (c-in-sws t fontified t c-is-sws t) 3 4 (c-is-sws t fontified t face (rainbow-delimiters-depth-3-face)) 4 5 (fontified t)) . 4885) (undo-tree-id284 . 2) (undo-tree-id285 . -4) (undo-tree-id286 . -3) (undo-tree-id287 . -5) (undo-tree-id288 . 2) (undo-tree-id289 . -5) (undo-tree-id290 . -3) (undo-tree-id291 . -3) (undo-tree-id292 . -3) (undo-tree-id293 . -3) (undo-tree-id294 . -3) (undo-tree-id295 . -3) (undo-tree-id296 . -3) (undo-tree-id297 . -2) (undo-tree-id298 . -3) (undo-tree-id299 . -3) (undo-tree-id300 . -2) (undo-tree-id301 . -3) (undo-tree-id302 . -3) (undo-tree-id303 . -5) (undo-tree-id304 . -3) (undo-tree-id305 . -5) (undo-tree-id306 . -3) (undo-tree-id307 . -4) (undo-tree-id308 . -5) (undo-tree-id309 . -3) (undo-tree-id310 . -5) (undo-tree-id311 . -3) (undo-tree-id312 . 2) (undo-tree-id313 . -4) 4888) nil (24175 51529 147501 429000) 0 nil]) ((#("
" 0 1 (fontified t)) . 4315) (undo-tree-id314 . -1) (undo-tree-id315 . -1)) nil (24175 51529 147505 553000) 0 nil]) ((4814 . 4817) (#("		" 0 2 (fontified nil)) . 4814) (4809 . 4812) (#("		" 0 2 (fontified nil)) . 4809) (4803 . 4807) (#("			" 0 1 (fontified nil) 1 3 (fontified nil)) . 4803) (4796 . 4801) (#("				" 0 4 (fontified nil)) . 4796) (4773 . 4779) (#("					" 0 5 (fontified nil)) . 4773) (4722 . 4728) (#("					" 0 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil)) . 4722) (4715 . 4720) (#("				" 0 4 (fontified nil)) . 4715) (4705 . 4710) (#("				" 0 4 (fontified nil)) . 4705) (4698 . 4703) (#("				" 0 4 (fontified nil)) . 4698) (4675 . 4681) (#("					" 0 5 (fontified nil)) . 4675) (4624 . 4630) (#("					" 0 5 (fontified nil)) . 4624) (4617 . 4622) (#("				" 0 1 (fontified nil c-is-sws t) 1 4 (fontified nil)) . 4617) (4483 . 4488) (#("				" 0 4 (fontified nil)) . 4483) (4477 . 4481) (#("			" 0 3 (fontified nil)) . 4477) (4468 . 4472) (#("			" 0 3 (fontified nil)) . 4468) (4462 . 4466) (#("			" 0 3 (fontified nil)) . 4462) (4416 . 4421) (#("				" 0 4 (fontified nil)) . 4416) (4410 . 4414) (#("			" 0 1 (fontified nil c-is-sws t) 1 3 (fontified nil)) . 4410) (4316 . 4320) (#("			" 0 2 (fontified nil) 2 3 (fontified nil rear-nonsticky t)) . 4316) 4315 (nil rear-nonsticky nil 4318 . 4319) (#("
" 0 1 (face font-lock-comment-face c-in-sws t fontified nil)) . -4866) (4315 . 4867)) nil (24175 51529 147519 934000) 0 nil]) ((#("				" 0 4 (fontified nil face #4=(rainbow-delimiters-depth-4-face))) . 4315) (4315 . 4319) (#("			" 0 3 (fontified nil face #4#)) . -4315) (4314 . 4322) (4310 . 4313) (#("				" 0 4 (fontified nil)) . 4310) (undo-tree-id316 . -4) (4314 . 4316) (#("{" 0 1 (fontified nil)) . -4314) (4314 . 4315) (4309 . 4314)) nil (24175 51529 147529 837000) 0 nil]) ((#(" " 0 1 (fontified t)) . -4308) (undo-tree-id317 . -1) 4309 (4304 . 4309) (4303 . 4304) (4292 . 4302) (4289 . 4292) (4288 . 4290) (#("(" 0 1 (fontified nil)) . -4288) (4288 . 4289) (4287 . 4288) (4286 . 4287) (4283 . 4286) (4282 . 4283) (4271 . 4282) (4270 . 4272) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -4270) (4270 . 4271) (4267 . 4270) (#("f" 0 1 (fontified t)) . -4267) (undo-tree-id318 . -1) (4264 . 4268) (t 24175 51343 167237 679000)) nil (24175 51529 147540 624000) 0 nil]) (nil undo-tree-canary) nil (24175 51529 147543 258000) 0 nil]) ((#("			" 0 3 (fontified t)) . 4265) (undo-tree-id155 . -3) (undo-tree-id156 . -3) (undo-tree-id157 . -3) (undo-tree-id158 . -3) (undo-tree-id159 . -3) 4268) nil (24175 51343 154041 481000) 0 nil]) ((4264 . 4268) (#("			" 0 3 (fontified nil face #5=(rainbow-delimiters-depth-3-face))) . 4264) (undo-tree-id160 . -3) (undo-tree-id161 . -3) (undo-tree-id162 . -3) (undo-tree-id163 . -3) (4264 . 4267) (#("		" 0 2 (fontified nil face #5#)) . -4264) (4263 . 4269)) nil (24175 51343 154051 855000) 0 nil]) ((4260 . 4262) (#("			" 0 3 (fontified nil)) . 4260) (undo-tree-id164 . -3) (undo-tree-id165 . -3) (undo-tree-id166 . -3) (undo-tree-id167 . -3) (undo-tree-id168 . -3) (undo-tree-id169 . -3) (undo-tree-id170 . -3) (undo-tree-id171 . -3) (4263 . 4265) (#("{" 0 1 (fontified nil)) . -4263) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (4263 . 4264)) nil (24175 51343 154066 36000) 0 nil]) ((4259 . 4263) (#(" x" 0 2 (fontified nil)) . -4259) (4259 . 4261) (#("else" 0 1 (fontified nil face font-lock-keyword-face) 1 2 (fontified nil face font-lock-keyword-face) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil face font-lock-keyword-face)) . 4259) (undo-tree-id174 . -4) (undo-tree-id175 . -1) (undo-tree-id176 . -2) (undo-tree-id177 . -1) (undo-tree-id178 . -3) (undo-tree-id179 . -2) (undo-tree-id180 . -4) (undo-tree-id181 . -3) (4255 . 4259) 4259) nil (24175 51343 154081 451000) 0 nil]) ((4255 . 4259)) nil (24175 51343 154084 168000) 0 nil]) ((4252 . 4255) (t 24175 51328 579099 920000) 4251) nil (24175 51343 154086 299000) 0 nil]) ((#("
" 0 1 (fontified t)) . 3807) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1)) nil (24175 51328 565451 546000) 0 nil]) ((4158 . 4161) (#("		" 0 2 (fontified nil)) . 4158) (4153 . 4156) (#("		" 0 2 (fontified nil)) . 4153) (4147 . 4151) (#("			" 0 3 (fontified nil)) . 4147) (4097 . 4102) (#("				" 0 4 (fontified nil)) . 4097) (4091 . 4095) (#("			" 0 1 (fontified nil c-is-sws t) 1 3 (fontified nil)) . 4091) (4023 . 4027) (#("			" 0 3 (fontified nil)) . 4023) (4017 . 4021) (#("			" 0 3 (fontified nil)) . 4017) (3971 . 3976) (#("				" 0 4 (fontified nil)) . 3971) (3965 . 3969) (#("			" 0 1 (fontified nil c-is-sws t) 1 3 (fontified nil)) . 3965) (3853 . 3857) (#("			" 0 3 (fontified nil)) . 3853) (3848 . 3851) (#("		" 0 2 (fontified nil)) . 3848) (3808 . 3811) (#("		" 0 1 (fontified nil) 1 2 (fontified nil rear-nonsticky t)) . 3808) (undo-tree-id4 . -2) 3807 (nil rear-nonsticky nil 3809 . 3810) (#("
" 0 1 (face font-lock-comment-face c-in-sws t fontified nil)) . -4237) (3807 . 4238)) nil (24175 51328 565491 671000) 0 nil]) ((#("		for (auto i = 0; i < numPoints; ++i)
		{
			if (i == 0 || i == (numPoints - 1) ) ///if we are at the first or last point we just add the function value
			{
				area += Function(func_id, points.at(i));
			}
			else///otherwise we multiply the function value by 3 and add it
			{
				area += 3 * Function(func_id, points.at(i));
			}
		}
		area = (3 * distance * area) / 8; ///multiply the area by 3/8 to get final approximation
" 0 2 (fontified t) 2 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-3-face)) 7 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t face font-lock-keyword-face c-type c-decl-id-start) 11 12 (fontified t) 12 13 (fontified t face font-lock-variable-name-face) 13 16 (fontified t) 16 17 (fontified t face highlight-numbers-number) 17 37 (fontified t) 37 38 (fontified t face (rainbow-delimiters-depth-3-face)) 38 41 (fontified t) 41 42 (fontified t face (rainbow-delimiters-depth-3-face)) 42 46 (fontified t) 46 48 (fontified t face font-lock-keyword-face) 48 49 (fontified t) 49 50 (fontified t face (rainbow-delimiters-depth-4-face)) 50 55 (fontified t) 55 56 (fontified t face highlight-numbers-number) 56 65 (fontified t) 65 66 (fontified t face (rainbow-delimiters-depth-5-face)) 66 78 (fontified t) 78 79 (fontified t face highlight-numbers-number) 79 80 (fontified t face (rainbow-delimiters-depth-5-face)) 80 81 (fontified t) 81 82 (fontified t face (rainbow-delimiters-depth-4-face)) 82 83 (c-in-sws t c-is-sws t fontified t) 83 84 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face) 84 86 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 86 154 (c-in-sws t fontified t face font-lock-comment-face) 154 157 (c-is-sws t c-in-sws t fontified t) 157 158 (c-is-sws t fontified t face (rainbow-delimiters-depth-4-face)) 158 179 (fontified t) 179 180 (fontified t face (rainbow-delimiters-depth-5-face)) 180 198 (fontified t) 198 199 (fontified t face (rainbow-delimiters-depth-6-face)) 199 200 (fontified t) 200 201 (fontified t face (rainbow-delimiters-depth-6-face)) 201 202 (fontified t face (rainbow-delimiters-depth-5-face)) 202 207 (fontified t) 207 208 (fontified t face (rainbow-delimiters-depth-4-face)) 208 212 (fontified t) 212 216 (fontified t face font-lock-keyword-face) 216 217 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 217 219 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 219 225 (c-in-sws t fontified t face font-lock-comment-face) 225 276 (c-in-sws t fontified t face font-lock-comment-face) 276 279 (c-in-sws t fontified t) 279 280 (c-is-sws t fontified t face (rainbow-delimiters-depth-4-face)) 280 293 (fontified t) 293 294 (fontified t face highlight-numbers-number) 294 305 (fontified t) 305 306 (fontified t face (rainbow-delimiters-depth-5-face)) 306 324 (fontified t) 324 325 (fontified t face (rainbow-delimiters-depth-6-face)) 325 326 (fontified t) 326 327 (fontified t face (rainbow-delimiters-depth-6-face)) 327 328 (fontified t face (rainbow-delimiters-depth-5-face)) 328 333 (fontified t) 333 334 (fontified t face (rainbow-delimiters-depth-4-face)) 334 337 (fontified t) 337 338 (fontified t face (rainbow-delimiters-depth-3-face)) 338 348 (fontified t) 348 349 (fontified t face (rainbow-delimiters-depth-3-face)) 349 350 (fontified t face highlight-numbers-number) 350 368 (fontified t) 368 369 (fontified t face (rainbow-delimiters-depth-3-face)) 369 372 (fontified t) 372 373 (fontified t face highlight-numbers-number) 373 375 (fontified t) 375 378 (fontified t face font-lock-comment-delimiter-face) 378 430 (fontified t face font-lock-comment-face)) . 3812) (undo-tree-id5 . -339) (undo-tree-id6 . -339) (undo-tree-id7 . -430) (undo-tree-id8 . -339) (undo-tree-id9 . 430) (undo-tree-id10 . -339) (undo-tree-id11 . -430) (undo-tree-id12 . -339) (undo-tree-id13 . -39) (undo-tree-id14 . -43) (undo-tree-id15 . -39) (undo-tree-id16 . -154) (undo-tree-id17 . -43) (undo-tree-id18 . -159) (undo-tree-id19 . -154) (undo-tree-id20 . -204) (undo-tree-id21 . -159) (undo-tree-id22 . -209) (undo-tree-id23 . -204) (undo-tree-id24 . -276) (undo-tree-id25 . -209) (undo-tree-id26 . -281) (undo-tree-id27 . -276) (undo-tree-id28 . -330) (undo-tree-id29 . -281) (undo-tree-id30 . -335) (undo-tree-id31 . -330) (undo-tree-id32 . -339) (undo-tree-id33 . -335) 4151) nil (24175 51328 565538 403000) 0 nil]) ((#("			" 0 3 (fontified nil face #6=(rainbow-delimiters-depth-3-face))) . 3807) (undo-tree-id34 . -3) (undo-tree-id35 . -3) (undo-tree-id36 . -3) (undo-tree-id37 . -3) (3807 . 3810) (#("		" 0 2 (fontified nil face #6#)) . -3807) (3806 . 3812) (3803 . 3805) (#("			" 0 3 (fontified nil)) . 3803) (undo-tree-id38 . -3) (undo-tree-id39 . -3) (undo-tree-id40 . -3) (undo-tree-id41 . -3) (undo-tree-id42 . -3) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -3) (3806 . 3808) (#("{" 0 1 (fontified nil)) . -3806) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (3806 . 3807) (3802 . 3806) (3800 . 3801) (3781 . 3800) (#(" " 0 1 (fontified t)) . -3781) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . 1) (undo-tree-id51 . -1) 3782 (3781 . 3782) (3780 . 3782) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -3780) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (3780 . 3781) (3779 . 3780) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -3779) (undo-tree-id54 . -1) (3778 . 3780) (3775 . 3778) (3773 . 3774) (#("
" 0 1 (fontified t c-is-sws t)) . -3773) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . 1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#(" " 0 1 (fontified t)) . -3774) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#(" " 0 1 (fontified t)) . -3775) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (#(" " 0 1 (fontified t)) . -3776) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (#(" " 0 1 (fontified t)) . -3777) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (#(" " 0 1 (fontified t)) . -3778) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (#(" " 0 1 (fontified t)) . -3779) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (#(" " 0 1 (fontified t)) . -3780) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#(" " 0 1 (fontified nil)) . -3781) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (#("	" 0 1 (fontified nil)) . 3782) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (3774 . 3782) 3775 (3773 . 3775) (#("	" 0 1 (fontified t c-is-sws t c-in-sws t)) . 3773) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) 3774 (t 24170 33260 267532 396000)) nil (24175 51328 565754 60000) 0 nil]) nil nil (24175 51328 565786 732000) 0 nil] #7# 9433 54 nil)